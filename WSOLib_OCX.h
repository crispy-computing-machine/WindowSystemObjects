// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 87174 $
// File generated on 1/10/2019 3:45:50 PM from Type Library described below.

// ************************************************************************  //
// Type Lib: wso.dll (1)
// LIBID: {40CC9252-A25A-4D28-A906-9BD3F752934A}
// LCID: 0
// Helpfile: 
// HelpString: WSO 1.0 Type Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWow64\stdole2.tlb)
// SYS_KIND: SYS_WIN64
// Cmdline:
//   tlibimp  -C wso.dll
// ************************************************************************ //
#ifndef   WSOLib_OCXH
#define   WSOLib_OCXH

#pragma option push -b -a4 -w-inl -w-8118

#include <olectrls.hpp>
#include <oleserver.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <System.Win.StdVCL.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "WSOLib_TLB.h"
namespace Wsolib_tlb
{

// *********************************************************************//
// HelpString: WSO 1.0 Type Library
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWindowSystemObject
// Help String      : 
// Default Interface: IWindowSystemObject
// Def. Intf. Object: IWindowSystemObjectPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWindowSystemObject : public Vcl::Oleserver::TOleServer
{
  IWindowSystemObjectPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWindowSystemObject(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IWindowSystemObjectPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IWindowSystemObjectPtr intf);


  LPDISPATCH      __fastcall get_Controls(void);
  LPDISPATCH      __fastcall get_Version(void);
  VARIANT_BOOL    __fastcall get_Debug(void);
  void            __fastcall set_Debug(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Regions(void);
  long            __fastcall get_PixelsPerInch(void);
  void            __fastcall set_PixelsPerInch(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Screen(void);
  VARIANT_BOOL    __fastcall get_EnableVisualStyles(void);
  void            __fastcall set_EnableVisualStyles(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Console(void);
  LPDISPATCH      __fastcall get_ActiveForm(void);
  LPDISPATCH      __fastcall get_ForegroundForm(void);
  LPDISPATCH      __fastcall get_Color(void);
  VARIANT_BOOL    __fastcall get_EnableVistaFileDialog(void);
  void            __fastcall set_EnableVistaFileDialog(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall CreateForm(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDialogForm(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateImageList(void);
  LPDISPATCH      __fastcall CreateTimer(void);
  LPDISPATCH      __fastcall CreateCOMEvents(LPDISPATCH COMObject/*[in]*/);
  LPDISPATCH      __fastcall CreateFindDialog(BSTR FindText/*[in,def,opt]*/, 
                                              unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReplaceDialog(BSTR FindText/*[in,def,opt]*/, 
                                                 BSTR ReplaceText/*[in,def,opt]*/, 
                                                 unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrayIcon(void);
  void            __fastcall Run(void);
  void            __fastcall Stop(void);
  VARIANT         __fastcall Translate(BSTR Text/*[in]*/);
  LPDISPATCH      __fastcall LoadImage(BSTR Path/*[in]*/);
  void            __fastcall About(void);
  LPDISPATCH      __fastcall CreateEventHandler(void);
  LPDISPATCH      __fastcall CreatePrintInfo(void);
  LPDISPATCH      __fastcall CreateStdDispatch(BSTR TypeLibrary/*[in]*/, long Major/*[in]*/, 
                                               long Minor/*[in]*/, BSTR Guid/*[in]*/, 
                                               LPUNKNOWN Object/*[in]*/);
  BSTR            __fastcall VirtualKeyCodeToString(unsigned_long VirtualKey/*[in]*/, 
                                                    VARIANT_BOOL UseKeyboardState/*[in,def,opt]*/);
  BSTR            __fastcall SaveLayout(void);
  void            __fastcall LoadLayout(BSTR Layout/*[in]*/);
  LPDISPATCH      __fastcall LoadIcon(BSTR FileName/*[in]*/);
  LPDISPATCH      __fastcall LoadSysIcon(long ID/*[in]*/);
  unsigned_long   __fastcall GetIconCount(BSTR FileName/*[in]*/);
  __property LPDISPATCH Controls={ read=get_Controls };
  __property LPDISPATCH Version={ read=get_Version };
  __property LPDISPATCH Regions={ read=get_Regions };
  __property LPDISPATCH Screen={ read=get_Screen };
  __property LPDISPATCH Console={ read=get_Console };
  __property LPDISPATCH ActiveForm={ read=get_ActiveForm };
  __property LPDISPATCH ForegroundForm={ read=get_ForegroundForm };
  __property LPDISPATCH Color={ read=get_Color };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TVersion
// Help String      : 
// Default Interface: IVersion
// Def. Intf. Object: IVersionPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TVersion : public Vcl::Oleserver::TOleServer
{
  IVersionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TVersion(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IVersionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IVersionPtr intf);


  long            __fastcall get_Major(void);
  long            __fastcall get_Minor(void);
  long            __fastcall get_BuildNumber(void);
  BSTR            __fastcall get_String(void);
  VARIANT_BOOL    __fastcall get_Trial(void);
  BSTR            __fastcall get_Url(void);
  BSTR            __fastcall get_Copyright(void);
  __property long Major={ read=get_Major };
  __property long Minor={ read=get_Minor };
  __property long BuildNumber={ read=get_BuildNumber };
  __property BSTR String={ read=get_String };
  __property VARIANT_BOOL Trial={ read=get_Trial };
  __property BSTR Url={ read=get_Url };
  __property BSTR Copyright={ read=get_Copyright };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TControl
// Help String      : 
// Default Interface: IControl
// Def. Intf. Object: IControlPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TControlOnClick)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnDblClick)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TControlOnChange)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnKeyDown)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TControlOnKeyUp)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TControlOnMouseEnter)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnMouseLeave)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnMouseDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TControlOnMouseMove)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TControlOnMouseUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TControlOnResize)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnMove)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnDestroy)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnShow)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnHide)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnEnabledChange)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnSetFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnKillFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TControlOnMouseWheel)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Keys/*[in]*/, long Delta/*[in]*/, 
                                                           long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TControlOnBeginDock)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH DockTarget/*[in]*/, 
                                                          LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TControlOnDockControlCreate)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  LPDISPATCH Control/*[in]*/, 
                                                                  LPDISPATCH DockTarget/*[in]*/, 
                                                                  LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TControlOnUndockQuery)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TControlOnUndock)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);

class PACKAGE TControl : public Vcl::Oleserver::TOleServer
{
  IControlPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TControl(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IControlPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IControlPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TControlOnClick                FOnClick1;
  TControlOnDblClick             FOnDblClick1;
  TControlOnChange               FOnChange1;
  TControlOnKeyDown              FOnKeyDown1;
  TControlOnKeyUp                FOnKeyUp1;
  TControlOnMouseEnter           FOnMouseEnter1;
  TControlOnMouseLeave           FOnMouseLeave1;
  TControlOnMouseDown            FOnMouseDown1;
  TControlOnMouseMove            FOnMouseMove1;
  TControlOnMouseUp              FOnMouseUp1;
  TControlOnResize               FOnResize1;
  TControlOnMove                 FOnMove1;
  TControlOnDestroy              FOnDestroy1;
  TControlOnShow                 FOnShow1;
  TControlOnHide                 FOnHide1;
  TControlOnEnabledChange        FOnEnabledChange1;
  TControlOnSetFocus             FOnSetFocus1;
  TControlOnKillFocus            FOnKillFocus1;
  TControlOnMouseWheel           FOnMouseWheel1;
  TControlOnBeginDock            FOnBeginDock1;
  TControlOnDockControlCreate    FOnDockControlCreate1;
  TControlOnUndockQuery          FOnUndockQuery1;
  TControlOnUndock               FOnUndock1;
__published:
  __property TControlOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TControlOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TControlOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TControlOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TControlOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TControlOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TControlOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TControlOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TControlOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TControlOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TControlOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TControlOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TControlOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TControlOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TControlOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TControlOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TControlOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TControlOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TControlOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TControlOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TControlOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TControlOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TControlOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFrame
// Help String      : 
// Default Interface: IFrame
// Def. Intf. Object: IFramePtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TFrameOnClick)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnDblClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TFrameOnChange)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnKeyDown)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TFrameOnKeyUp)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                    long Flags/*[in]*/);
typedef void __fastcall (__closure * TFrameOnMouseEnter)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnMouseLeave)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnMouseDown)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TFrameOnMouseMove)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TFrameOnMouseUp)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                      long y/*[in]*/, long Button/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TFrameOnResize)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnMove)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnDestroy)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnShow)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnHide)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnEnabledChange)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnSetFocus)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnKillFocus)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFrameOnMouseWheel)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         long Keys/*[in]*/, long Delta/*[in]*/, 
                                                         long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TFrameOnBeginDock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, 
                                                        LPDISPATCH DockTarget/*[in]*/, 
                                                        LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TFrameOnDockControlCreate)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                LPDISPATCH Control/*[in]*/, 
                                                                LPDISPATCH DockTarget/*[in]*/, 
                                                                LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TFrameOnUndockQuery)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TFrameOnUndock)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);

class PACKAGE TFrame : public Vcl::Oleserver::TOleServer
{
  IFramePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFrame(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFramePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFramePtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  unsigned_long   __fastcall get_BorderWidth(void);
  void            __fastcall set_BorderWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_BevelWidth(void);
  void            __fastcall set_BevelWidth(unsigned_long pVal/*[in]*/);
  long            __fastcall get_BevelOuter(void);
  void            __fastcall set_BevelOuter(long pVal/*[in]*/);
  long            __fastcall get_BevelInner(void);
  void            __fastcall set_BevelInner(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_GraphFont(void);
  void            __fastcall set_GraphFont(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_GraphFont(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  void            __fastcall set_AutoScroll(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  void            __fastcall set_Tracking(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_CaptureMouse(void);
  void            __fastcall set_CaptureMouse(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentBackground(void);
  void            __fastcall set_ParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BorderParentBackground(void);
  void            __fastcall set_BorderParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSplit(void);
  void            __fastcall set_AutoSplit(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GroupBox(void);
  void            __fastcall set_GroupBox(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Margin(void);
  void            __fastcall set_Margin(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginLeft(void);
  void            __fastcall set_MarginLeft(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginTop(void);
  void            __fastcall set_MarginTop(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginRight(void);
  void            __fastcall set_MarginRight(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginBottom(void);
  void            __fastcall set_MarginBottom(unsigned_long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCheckBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            BSTR Text/*[in,def,opt]*/, 
                                            VARIANT_BOOL Checked/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRadioButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateComboBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFrame(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateGroupBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateProgressBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTabControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateToolBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMenuBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateStatusBar(void);
  LPDISPATCH      __fastcall CreateHyperLink(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             BSTR Url/*[in,def,opt]*/, BSTR Label/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePager(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateScrollBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateActiveXControl(long Left/*[in]*/, long Top/*[in]*/, 
                                                  long Width/*[in]*/, long Height/*[in]*/, 
                                                  BSTR ID/*[in]*/);
  LPDISPATCH      __fastcall CreateActiveXControlLicensed(long Left/*[in]*/, long Top/*[in]*/, 
                                                          long Width/*[in]*/, long Height/*[in]*/, 
                                                          BSTR ID/*[in]*/, BSTR LicKey/*[in]*/);
  LPDISPATCH      __fastcall CreateHeader(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTreeView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRichEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/, long Version/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAnimate(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateHotKey(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrackBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateUpDown(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDateTimePicker(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/, 
                                                  long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCalendar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateIPAddress(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateSplitter(unsigned_short Align/*[in]*/);
  LPDISPATCH      __fastcall CreateSplitPanel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              VARIANT_BOOL Vertical/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateResourceUsageGraph(long Left/*[in,def,opt]*/, 
                                                      long Top/*[in,def,opt]*/, 
                                                      long Width/*[in,def,opt]*/, 
                                                      long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePropertyGrid(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                                long Width/*[in,def,opt]*/, 
                                                long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateLabel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePageControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAutoSplitFrame(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Line(long Ax/*[in]*/, long Ay/*[in]*/, long Bx/*[in]*/, long By/*[in]*/);
  LPDISPATCH      __fastcall Rectangle(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/);
  LPDISPATCH      __fastcall RoundRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, long nWidth/*[in]*/, 
                                       long nHeight/*[in]*/);
  LPDISPATCH      __fastcall Circle(long x/*[in]*/, long y/*[in]*/, long r/*[in]*/);
  LPDISPATCH      __fastcall Ellipse(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                     long Height/*[in]*/);
  LPDISPATCH      __fastcall Arc(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXStartArc/*[in]*/, 
                                 long nYStartArc/*[in]*/, long nXEndArc/*[in]*/, 
                                 long nYEndArc/*[in]*/);
  LPDISPATCH      __fastcall Chord(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long nXRadial1/*[in]*/, 
                                   long nYRadial1/*[in]*/, long nXRadial2/*[in]*/, 
                                   long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Pie(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXRadial1/*[in]*/, long nYRadial1/*[in]*/, 
                                 long nXRadial2/*[in]*/, long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Polygon(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall TextOut(long x/*[in]*/, long y/*[in]*/, BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall TextRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                      long Height/*[in]*/, BSTR Text/*[in]*/, 
                                      unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall DrawImage(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, VARIANT Image/*[in]*/);
  LPDISPATCH      __fastcall DrawRegion(long Left/*[in]*/, long Top/*[in]*/, 
                                        unsigned_long Region/*[in]*/);
  LPDISPATCH      __fastcall Bevel(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long BevelOuter/*[in,def,opt]*/, 
                                   long BevelInner/*[in,def,opt]*/, 
                                   unsigned_long BorderWidth/*[in,def,opt]*/, 
                                   unsigned_long BevelWidth/*[in,def,opt]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  LPDISPATCH      __fastcall Get(BSTR Name/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
private:
  TFrameOnClick                  FOnClick1;
  TFrameOnDblClick               FOnDblClick1;
  TFrameOnChange                 FOnChange1;
  TFrameOnKeyDown                FOnKeyDown1;
  TFrameOnKeyUp                  FOnKeyUp1;
  TFrameOnMouseEnter             FOnMouseEnter1;
  TFrameOnMouseLeave             FOnMouseLeave1;
  TFrameOnMouseDown              FOnMouseDown1;
  TFrameOnMouseMove              FOnMouseMove1;
  TFrameOnMouseUp                FOnMouseUp1;
  TFrameOnResize                 FOnResize1;
  TFrameOnMove                   FOnMove1;
  TFrameOnDestroy                FOnDestroy1;
  TFrameOnShow                   FOnShow1;
  TFrameOnHide                   FOnHide1;
  TFrameOnEnabledChange          FOnEnabledChange1;
  TFrameOnSetFocus               FOnSetFocus1;
  TFrameOnKillFocus              FOnKillFocus1;
  TFrameOnMouseWheel             FOnMouseWheel1;
  TFrameOnBeginDock              FOnBeginDock1;
  TFrameOnDockControlCreate      FOnDockControlCreate1;
  TFrameOnUndockQuery            FOnUndockQuery1;
  TFrameOnUndock                 FOnUndock1;
__published:
  __property TFrameOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TFrameOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TFrameOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TFrameOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TFrameOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TFrameOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TFrameOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TFrameOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TFrameOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TFrameOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TFrameOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TFrameOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TFrameOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TFrameOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TFrameOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TFrameOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TFrameOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TFrameOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TFrameOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TFrameOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TFrameOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TFrameOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TFrameOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TForm
// Help String      : 
// Default Interface: IForm
// Def. Intf. Object: IFormPtr
// Def. Intf. DISP? : No
// Event   Interface: IFormEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TFormOnClick)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnDblClick)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                      long y/*[in]*/, long Button/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TFormOnChange)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnKeyDown)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TFormOnKeyUp)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                   long Flags/*[in]*/);
typedef void __fastcall (__closure * TFormOnMouseEnter)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnMouseLeave)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnMouseDown)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TFormOnMouseMove)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TFormOnMouseUp)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                     long y/*[in]*/, long Button/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TFormOnResize)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnMove)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnDestroy)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnShow)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnHide)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnEnabledChange)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnSetFocus)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnKillFocus)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnMouseWheel)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Keys/*[in]*/, 
                                                        long Delta/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/);
typedef void __fastcall (__closure * TFormOnBeginDock)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, 
                                                       LPDISPATCH DockTarget/*[in]*/, 
                                                       LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TFormOnDockControlCreate)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               LPDISPATCH Control/*[in]*/, 
                                                               LPDISPATCH DockTarget/*[in]*/, 
                                                               LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TFormOnUndockQuery)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TFormOnUndock)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnCloseQuery)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, 
                                                        LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TFormOnClose)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnActiveControlChange)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFormOnHitTest)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                     long y/*[in]*/, LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TFormOnHint)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/, 
                                                  LPDISPATCH Object/*[in]*/);
typedef void __fastcall (__closure * TFormOnMinimize)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, 
                                                      LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TFormOnMaximize)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, 
                                                      LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TFormOnRestore)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, 
                                                     LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TFormOnCopyData)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, BSTR Data/*[in]*/);
typedef void __fastcall (__closure * TFormOnActivate)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TFormOnEnterSizeMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TFormOnExitSizeMove)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Flags/*[in]*/);

class PACKAGE TForm : public Vcl::Oleserver::TOleServer
{
  IFormPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TForm(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFormPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFormPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  unsigned_long   __fastcall get_BorderWidth(void);
  void            __fastcall set_BorderWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_BevelWidth(void);
  void            __fastcall set_BevelWidth(unsigned_long pVal/*[in]*/);
  long            __fastcall get_BevelOuter(void);
  void            __fastcall set_BevelOuter(long pVal/*[in]*/);
  long            __fastcall get_BevelInner(void);
  void            __fastcall set_BevelInner(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_GraphFont(void);
  void            __fastcall set_GraphFont(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_GraphFont(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  void            __fastcall set_AutoScroll(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  void            __fastcall set_Tracking(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_CaptureMouse(void);
  void            __fastcall set_CaptureMouse(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentBackground(void);
  void            __fastcall set_ParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BorderParentBackground(void);
  void            __fastcall set_BorderParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSplit(void);
  void            __fastcall set_AutoSplit(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GroupBox(void);
  void            __fastcall set_GroupBox(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Margin(void);
  void            __fastcall set_Margin(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginLeft(void);
  void            __fastcall set_MarginLeft(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginTop(void);
  void            __fastcall set_MarginTop(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginRight(void);
  void            __fastcall set_MarginRight(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginBottom(void);
  void            __fastcall set_MarginBottom(unsigned_long pVal/*[in]*/);
  void            __fastcall set_Icon(VARIANT Param1/*[in]*/);
  LPDISPATCH      __fastcall get_Menu(void);
  void            __fastcall set_Menu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Menu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_KeyPreview(void);
  void            __fastcall set_KeyPreview(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_MaximizeBox(void);
  void            __fastcall set_MaximizeBox(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_MinimizeBox(void);
  void            __fastcall set_MinimizeBox(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ControlBox(void);
  void            __fastcall set_ControlBox(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_SizeGrip(void);
  void            __fastcall set_SizeGrip(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TopMost(void);
  void            __fastcall set_TopMost(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ToolWindow(void);
  void            __fastcall set_ToolWindow(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Caption(void);
  void            __fastcall set_Caption(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_AcceptButton(void);
  void            __fastcall set_AcceptButton(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_AcceptButton(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_CancelButton(void);
  void            __fastcall set_CancelButton(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_CancelButton(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_HelpButton(void);
  void            __fastcall set_HelpButton(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_HelpButton(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_ActiveControl(void);
  void            __fastcall set_ActiveControl(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_ActiveControl(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CanClose(void);
  void            __fastcall set_CanClose(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_Region(unsigned_long Param1/*[in]*/);
  LPDISPATCH      __fastcall get_TaskBar(void);
  VARIANT_BOOL    __fastcall get_Active(void);
  void            __fastcall set_Active(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Foreground(void);
  void            __fastcall set_Foreground(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_OnCloseQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnClose(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnActiveControlChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHitTest(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHint(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMinimize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMaximize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnRestore(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnCopyData(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnActivate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnterSizeMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnExitSizeMove(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCheckBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            BSTR Text/*[in,def,opt]*/, 
                                            VARIANT_BOOL Checked/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRadioButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateComboBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFrame(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateGroupBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateProgressBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTabControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateToolBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMenuBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateStatusBar(void);
  LPDISPATCH      __fastcall CreateHyperLink(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             BSTR Url/*[in,def,opt]*/, BSTR Label/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePager(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateScrollBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateActiveXControl(long Left/*[in]*/, long Top/*[in]*/, 
                                                  long Width/*[in]*/, long Height/*[in]*/, 
                                                  BSTR ID/*[in]*/);
  LPDISPATCH      __fastcall CreateActiveXControlLicensed(long Left/*[in]*/, long Top/*[in]*/, 
                                                          long Width/*[in]*/, long Height/*[in]*/, 
                                                          BSTR ID/*[in]*/, BSTR LicKey/*[in]*/);
  LPDISPATCH      __fastcall CreateHeader(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTreeView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRichEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/, long Version/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAnimate(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateHotKey(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrackBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateUpDown(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDateTimePicker(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/, 
                                                  long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCalendar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateIPAddress(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateSplitter(unsigned_short Align/*[in]*/);
  LPDISPATCH      __fastcall CreateSplitPanel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              VARIANT_BOOL Vertical/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateResourceUsageGraph(long Left/*[in,def,opt]*/, 
                                                      long Top/*[in,def,opt]*/, 
                                                      long Width/*[in,def,opt]*/, 
                                                      long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePropertyGrid(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                                long Width/*[in,def,opt]*/, 
                                                long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateLabel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePageControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAutoSplitFrame(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Line(long Ax/*[in]*/, long Ay/*[in]*/, long Bx/*[in]*/, long By/*[in]*/);
  LPDISPATCH      __fastcall Rectangle(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/);
  LPDISPATCH      __fastcall RoundRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, long nWidth/*[in]*/, 
                                       long nHeight/*[in]*/);
  LPDISPATCH      __fastcall Circle(long x/*[in]*/, long y/*[in]*/, long r/*[in]*/);
  LPDISPATCH      __fastcall Ellipse(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                     long Height/*[in]*/);
  LPDISPATCH      __fastcall Arc(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXStartArc/*[in]*/, 
                                 long nYStartArc/*[in]*/, long nXEndArc/*[in]*/, 
                                 long nYEndArc/*[in]*/);
  LPDISPATCH      __fastcall Chord(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long nXRadial1/*[in]*/, 
                                   long nYRadial1/*[in]*/, long nXRadial2/*[in]*/, 
                                   long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Pie(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXRadial1/*[in]*/, long nYRadial1/*[in]*/, 
                                 long nXRadial2/*[in]*/, long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Polygon(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall TextOut(long x/*[in]*/, long y/*[in]*/, BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall TextRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                      long Height/*[in]*/, BSTR Text/*[in]*/, 
                                      unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall DrawImage(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, VARIANT Image/*[in]*/);
  LPDISPATCH      __fastcall DrawRegion(long Left/*[in]*/, long Top/*[in]*/, 
                                        unsigned_long Region/*[in]*/);
  LPDISPATCH      __fastcall Bevel(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long BevelOuter/*[in,def,opt]*/, 
                                   long BevelInner/*[in,def,opt]*/, 
                                   unsigned_long BorderWidth/*[in,def,opt]*/, 
                                   unsigned_long BevelWidth/*[in,def,opt]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  LPDISPATCH      __fastcall Get(BSTR Name/*[in]*/);
  void            __fastcall Minimize(void);
  void            __fastcall Restore(void);
  void            __fastcall Maximize(void);
  void            __fastcall Close(void);
  void            __fastcall ShowModal(void);
  long            __fastcall MessageBox(BSTR Text/*[in]*/, BSTR Caption/*[in,def,opt]*/, 
                                        long Flags/*[in,def,opt]*/);
  unsigned_long   __fastcall ColorDialog(unsigned_long StartColor/*[in,def,opt]*/, 
                                         unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall FontDialog(LPDISPATCH StartValue/*[in]*/, 
                                        unsigned_long Flags/*[in,def,opt]*/);
  BSTR            __fastcall OpenDialog(BSTR DefaultExt/*[in]*/, BSTR Filter/*[in]*/, 
                                        BSTR StartFile/*[in,def,opt]*/, 
                                        unsigned_long Flags/*[in,def,opt]*/);
  BSTR            __fastcall SaveDialog(BSTR DefaultExt/*[in]*/, BSTR Filter/*[in]*/, 
                                        BSTR StartFile/*[in,def,opt]*/, 
                                        unsigned_long Flags/*[in,def,opt]*/);
  BSTR            __fastcall SelectFolderDialog(BSTR Title/*[in]*/, 
                                                unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall PrintDialog(unsigned_long Flags/*[in,def,opt]*/, 
                                         unsigned_short MinPage/*[in,def,opt]*/, 
                                         unsigned_short MaxPage/*[in,def,opt]*/);
  LPDISPATCH      __fastcall PrinterSetupDialog(unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall PageSetupDialog(unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFindDialog(BSTR FindText/*[in,def,opt]*/, 
                                              unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReplaceDialog(BSTR FindText/*[in,def,opt]*/, 
                                                 BSTR ReplaceText/*[in,def,opt]*/, 
                                                 unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFontDialog(void);
  LPDISPATCH      __fastcall CreateColorDialog(void);
  LPDISPATCH      __fastcall CreateOpenDialog(void);
  LPDISPATCH      __fastcall CreateSaveDialog(void);
  LPDISPATCH      __fastcall CreateSelectFolderDialog(void);
  LPDISPATCH      __fastcall CreateForm(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDialogForm(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMessageDialog(BSTR Text/*[in]*/, BSTR Caption/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTaskDialog(BSTR Text/*[in]*/, BSTR Caption/*[in,def,opt]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
  __property HRESULT Icon={ write=set_Icon };
  __property HRESULT Region={ write=set_Region };
  __property LPDISPATCH TaskBar={ read=get_TaskBar };
  __property HRESULT OnCloseQuery={ write=set_OnCloseQuery };
  __property HRESULT OnClose={ write=set_OnClose };
  __property HRESULT OnActiveControlChange={ write=set_OnActiveControlChange };
  __property HRESULT OnHitTest={ write=set_OnHitTest };
  __property HRESULT OnHint={ write=set_OnHint };
  __property HRESULT OnMinimize={ write=set_OnMinimize };
  __property HRESULT OnMaximize={ write=set_OnMaximize };
  __property HRESULT OnRestore={ write=set_OnRestore };
  __property HRESULT OnCopyData={ write=set_OnCopyData };
  __property HRESULT OnActivate={ write=set_OnActivate };
  __property HRESULT OnEnterSizeMove={ write=set_OnEnterSizeMove };
  __property HRESULT OnExitSizeMove={ write=set_OnExitSizeMove };
private:
  TFormOnClick                   FOnClick1;
  TFormOnDblClick                FOnDblClick1;
  TFormOnChange                  FOnChange1;
  TFormOnKeyDown                 FOnKeyDown1;
  TFormOnKeyUp                   FOnKeyUp1;
  TFormOnMouseEnter              FOnMouseEnter1;
  TFormOnMouseLeave              FOnMouseLeave1;
  TFormOnMouseDown               FOnMouseDown1;
  TFormOnMouseMove               FOnMouseMove1;
  TFormOnMouseUp                 FOnMouseUp1;
  TFormOnResize                  FOnResize1;
  TFormOnMove                    FOnMove1;
  TFormOnDestroy                 FOnDestroy1;
  TFormOnShow                    FOnShow1;
  TFormOnHide                    FOnHide1;
  TFormOnEnabledChange           FOnEnabledChange1;
  TFormOnSetFocus                FOnSetFocus1;
  TFormOnKillFocus               FOnKillFocus1;
  TFormOnMouseWheel              FOnMouseWheel1;
  TFormOnBeginDock               FOnBeginDock1;
  TFormOnDockControlCreate       FOnDockControlCreate1;
  TFormOnUndockQuery             FOnUndockQuery1;
  TFormOnUndock                  FOnUndock1;
  TFormOnCloseQuery              FOnCloseQuery1;
  TFormOnClose                   FOnClose1;
  TFormOnActiveControlChange     FOnActiveControlChange1;
  TFormOnHitTest                 FOnHitTest1;
  TFormOnHint                    FOnHint1;
  TFormOnMinimize                FOnMinimize1;
  TFormOnMaximize                FOnMaximize1;
  TFormOnRestore                 FOnRestore1;
  TFormOnCopyData                FOnCopyData1;
  TFormOnActivate                FOnActivate1;
  TFormOnEnterSizeMove           FOnEnterSizeMove1;
  TFormOnExitSizeMove            FOnExitSizeMove1;
__published:
  __property TFormOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TFormOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TFormOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TFormOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TFormOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TFormOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TFormOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TFormOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TFormOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TFormOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TFormOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TFormOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TFormOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TFormOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TFormOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TFormOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TFormOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TFormOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TFormOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TFormOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TFormOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TFormOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TFormOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
  __property TFormOnCloseQuery OnCloseQuery1={ read=FOnCloseQuery1, write=FOnCloseQuery1 };
  __property TFormOnClose OnClose1={ read=FOnClose1, write=FOnClose1 };
  __property TFormOnActiveControlChange OnActiveControlChange1={ read=FOnActiveControlChange1, write=FOnActiveControlChange1 };
  __property TFormOnHitTest OnHitTest1={ read=FOnHitTest1, write=FOnHitTest1 };
  __property TFormOnHint OnHint1={ read=FOnHint1, write=FOnHint1 };
  __property TFormOnMinimize OnMinimize1={ read=FOnMinimize1, write=FOnMinimize1 };
  __property TFormOnMaximize OnMaximize1={ read=FOnMaximize1, write=FOnMaximize1 };
  __property TFormOnRestore OnRestore1={ read=FOnRestore1, write=FOnRestore1 };
  __property TFormOnCopyData OnCopyData1={ read=FOnCopyData1, write=FOnCopyData1 };
  __property TFormOnActivate OnActivate1={ read=FOnActivate1, write=FOnActivate1 };
  __property TFormOnEnterSizeMove OnEnterSizeMove1={ read=FOnEnterSizeMove1, write=FOnEnterSizeMove1 };
  __property TFormOnExitSizeMove OnExitSizeMove1={ read=FOnExitSizeMove1, write=FOnExitSizeMove1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCollection
// Help String      : 
// Default Interface: ICollection
// Def. Intf. Object: ICollectionPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TCollection : public Vcl::Oleserver::TOleServer
{
  ICollectionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCollection(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ICollectionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ICollectionPtr intf);


  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall ExChange(VARIANT A/*[in]*/, VARIANT B/*[in]*/);
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TStringCollection
// Help String      : 
// Default Interface: IStringCollection
// Def. Intf. Object: IStringCollectionPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TStringCollection : public Vcl::Oleserver::TOleServer
{
  IStringCollectionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TStringCollection(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IStringCollectionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IStringCollectionPtr intf);


  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall ExChange(VARIANT A/*[in]*/, VARIANT B/*[in]*/);
  void            __fastcall Add(BSTR Value/*[in]*/);
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TImageList
// Help String      : 
// Default Interface: IImageList
// Def. Intf. Object: IImageListPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TImageList : public Vcl::Oleserver::TOleServer
{
  IImageListPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TImageList(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IImageListPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IImageListPtr intf);


  unsigned_long   __fastcall get_Width(void);
  void            __fastcall set_Width(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_Height(void);
  void            __fastcall set_Height(unsigned_long pVal/*[in]*/);
  long            __fastcall get_Count(void);
  long            __fastcall get_BitsPerPixel(void);
  void            __fastcall set_BitsPerPixel(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_References(void);
  LPDISPATCH      __fastcall get_Design(void);
  void            __fastcall Load(VARIANT Image/*[in]*/);
  void            __fastcall Add(VARIANT Image/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall Remove(long Index/*[in]*/);
  __property long Count={ read=get_Count };
  __property LPDISPATCH References={ read=get_References };
  __property LPDISPATCH Design={ read=get_Design };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPen
// Help String      : 
// Default Interface: IPen
// Def. Intf. Object: IPenPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TPen : public Vcl::Oleserver::TOleServer
{
  IPenPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPen(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPenPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPenPtr intf);


  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Style(void);
  void            __fastcall set_Style(long pVal/*[in]*/);
  void            __fastcall Default(void);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TBrush
// Help String      : 
// Default Interface: IBrush
// Def. Intf. Object: IBrushPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TBrush : public Vcl::Oleserver::TOleServer
{
  IBrushPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TBrush(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IBrushPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IBrushPtr intf);


  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  long            __fastcall get_Style(void);
  void            __fastcall set_Style(long pVal/*[in]*/);
  void            __fastcall set_Image(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_GradientColor(void);
  void            __fastcall set_GradientColor(unsigned_long pVal/*[in]*/);
  void            __fastcall Default(void);
  __property HRESULT Image={ write=set_Image };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFont
// Help String      : 
// Default Interface: IFontEx
// Def. Intf. Object: IFontExPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TFont : public Vcl::Oleserver::TOleServer
{
  IFontExPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFont(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFontExPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFontExPtr intf);


  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Italic(void);
  void            __fastcall set_Italic(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Underline(void);
  void            __fastcall set_Underline(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Strikethrough(void);
  void            __fastcall set_Strikethrough(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Bold(void);
  void            __fastcall set_Bold(VARIANT_BOOL pVal/*[in]*/);
  short           __fastcall get_Weight(void);
  void            __fastcall set_Weight(short pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  CURRENCY        __fastcall get_Size(void);
  void            __fastcall set_Size(CURRENCY pVal/*[in]*/);
  short           __fastcall get_CharSet(void);
  void            __fastcall set_CharSet(short pVal/*[in]*/);
  long            __fastcall get_Angle(void);
  void            __fastcall set_Angle(long pVal/*[in]*/);
  void            __fastcall Default(void);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAction
// Help String      : 
// Default Interface: IAction
// Def. Intf. Object: IActionPtr
// Def. Intf. DISP? : No
// Event   Interface: IActionEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TActionOnExecute)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActionOnUpdate)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);

class PACKAGE TAction : public Vcl::Oleserver::TOleServer
{
  IActionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAction(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IActionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IActionPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  void            __fastcall set_Item(long Index/*[in]*/, VARIANT pvar/*[in]*/);
  long            __fastcall get_Count(void);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Checked(void);
  void            __fastcall set_Checked(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CheckBox(void);
  void            __fastcall set_CheckBox(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_RadioCheck(void);
  void            __fastcall set_RadioCheck(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowAllUp(void);
  void            __fastcall set_AllowAllUp(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Default(void);
  void            __fastcall set_Default(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Control(void);
  LPDISPATCH      __fastcall get_Form(void);
  LPDISPATCH      __fastcall get_Items(void);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Break(void);
  void            __fastcall set_Break(VARIANT_BOOL pVal/*[in]*/);
  VARIANT         __fastcall get_Key(void);
  void            __fastcall set_Key(VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DismissonClick(void);
  void            __fastcall set_DismissonClick(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Noninteractive(void);
  void            __fastcall set_Noninteractive(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Nobackground(void);
  void            __fastcall set_Nobackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_WholeDropDown(void);
  void            __fastcall set_WholeDropDown(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  void            __fastcall set_OnExecute(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUpdate(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall ExChange(VARIANT A/*[in]*/, VARIANT B/*[in]*/);
  LPDISPATCH      __fastcall Add(VARIANT Item/*[in]*/, VARIANT Key/*[in,opt]*/= TNoParam());
  LPDISPATCH      __fastcall Insert(long Index/*[in]*/, VARIANT Item/*[in]*/, 
                                    VARIANT Key/*[in,opt]*/= TNoParam());
  LPDISPATCH      __fastcall NewLine(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property long Count={ read=get_Count };
  __property LPDISPATCH Control={ read=get_Control };
  __property LPDISPATCH Form={ read=get_Form };
  __property LPDISPATCH Items={ read=get_Items };
  __property LPDISPATCH Design={ read=get_Design };
  __property HRESULT OnExecute={ write=set_OnExecute };
  __property HRESULT OnUpdate={ write=set_OnUpdate };
private:
  TActionOnExecute               FOnExecute1;
  TActionOnUpdate                FOnUpdate1;
__published:
  __property TActionOnExecute OnExecute1={ read=FOnExecute1, write=FOnExecute1 };
  __property TActionOnUpdate OnUpdate1={ read=FOnUpdate1, write=FOnUpdate1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TListControlItem
// Help String      : 
// Default Interface: IListControlItem
// Def. Intf. Object: IListControlItemPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TListControlItem : public Vcl::Oleserver::TOleServer
{
  IListControlItemPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TListControlItem(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IListControlItemPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IListControlItemPtr intf);


  BSTR            __fastcall get_Text(void);
  long            __fastcall get_ImageIndex(void);
  VARIANT_BOOL    __fastcall get_Selected(void);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_Index(void);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  unsigned_long   __fastcall get_TextBkColor(void);
  void            __fastcall set_TextBkColor(unsigned_long pVal/*[in]*/);
  VARIANT         __fastcall get_ItemData(void);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  unsigned_long   __fastcall get_Indent(void);
  void            __fastcall set_Indent(unsigned_long pVal/*[in]*/);
  __property BSTR Text={ read=get_Text };
  __property long ImageIndex={ read=get_ImageIndex };
  __property VARIANT_BOOL Selected={ read=get_Selected };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property long Index={ read=get_Index };
  __property VARIANT ItemData={ read=get_ItemData };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TListBox
// Help String      : 
// Default Interface: IListBox
// Def. Intf. Object: IListBoxPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TListBoxOnClick)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnDblClick)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnChange)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnKeyDown)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnKeyUp)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnMouseEnter)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnMouseLeave)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnMouseDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnMouseMove)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnMouseUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnResize)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnMove)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnDestroy)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnShow)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnHide)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnEnabledChange)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnSetFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnKillFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnMouseWheel)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Keys/*[in]*/, long Delta/*[in]*/, 
                                                           long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnBeginDock)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH DockTarget/*[in]*/, 
                                                          LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnDockControlCreate)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  LPDISPATCH Control/*[in]*/, 
                                                                  LPDISPATCH DockTarget/*[in]*/, 
                                                                  LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnUndockQuery)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TListBoxOnUndock)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);

class PACKAGE TListBox : public Vcl::Oleserver::TOleServer
{
  IListBoxPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TListBox(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IListBoxPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IListBoxPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_TopIndex(void);
  void            __fastcall set_TopIndex(long pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  BSTR            __fastcall get_Item(long Index/*[in]*/);
  void            __fastcall set_Item(long Index/*[in]*/, BSTR pvar/*[in]*/);
  long            __fastcall get_Count(void);
  long            __fastcall get_ItemIndex(void);
  void            __fastcall set_ItemIndex(long pVal/*[in]*/);
  long            __fastcall get_ItemHeight(void);
  void            __fastcall set_ItemHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_ItemData(long Index/*[in]*/);
  void            __fastcall set_ItemData(long Index/*[in]*/, VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Sorted(void);
  void            __fastcall set_Sorted(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_IntegralHeight(void);
  void            __fastcall set_IntegralHeight(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_HorizontalExtent(void);
  void            __fastcall set_HorizontalExtent(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  long            __fastcall get_ImageIndex(long Index/*[in]*/);
  void            __fastcall set_ImageIndex(long Index/*[in]*/, long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CustomDraw(void);
  void            __fastcall set_CustomDraw(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_OnDrawItem(VARIANT Param1/*[in]*/);
  void            __fastcall set_BackgroundImage(VARIANT Param1/*[in]*/);
  VARIANT_BOOL    __fastcall get_CustomDrawSelection(void);
  void            __fastcall set_CustomDrawSelection(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Selected(long Index/*[in]*/);
  void            __fastcall set_Selected(long Index/*[in]*/, VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_SelCount(void);
  VARIANT_BOOL    __fastcall get_MultiSelect(void);
  void            __fastcall set_MultiSelect(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ExtendedSelect(void);
  void            __fastcall set_ExtendedSelect(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_ColumnCount(void);
  void            __fastcall set_ColumnCount(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_ColumnWidth(void);
  void            __fastcall set_ColumnWidth(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_ScrollBars(void);
  void            __fastcall set_ScrollBars(unsigned_long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  long            __fastcall Add(BSTR Item/*[in]*/);
  void            __fastcall Remove(long Index/*[in]*/);
  long            __fastcall Insert(long Index/*[in]*/, BSTR Item/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  void            __fastcall ExChange(long A/*[in]*/, long B/*[in]*/);
  void            __fastcall Sort(long DataType/*[in,def,opt]*/, 
                                  VARIANT_BOOL Reverse/*[in,def,opt]*/);
  long            __fastcall Find(BSTR Text/*[in]*/, long Start/*[in,def,opt]*/, 
                                  VARIANT_BOOL IgnoreCase/*[in,def,opt]*/);
  long            __fastcall ItemFromPoint(unsigned_short x/*[in]*/, unsigned_short y/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property long Count={ read=get_Count };
  __property HRESULT OnDrawItem={ write=set_OnDrawItem };
  __property HRESULT BackgroundImage={ write=set_BackgroundImage };
  __property long SelCount={ read=get_SelCount };
private:
  TListBoxOnClick                FOnClick1;
  TListBoxOnDblClick             FOnDblClick1;
  TListBoxOnChange               FOnChange1;
  TListBoxOnKeyDown              FOnKeyDown1;
  TListBoxOnKeyUp                FOnKeyUp1;
  TListBoxOnMouseEnter           FOnMouseEnter1;
  TListBoxOnMouseLeave           FOnMouseLeave1;
  TListBoxOnMouseDown            FOnMouseDown1;
  TListBoxOnMouseMove            FOnMouseMove1;
  TListBoxOnMouseUp              FOnMouseUp1;
  TListBoxOnResize               FOnResize1;
  TListBoxOnMove                 FOnMove1;
  TListBoxOnDestroy              FOnDestroy1;
  TListBoxOnShow                 FOnShow1;
  TListBoxOnHide                 FOnHide1;
  TListBoxOnEnabledChange        FOnEnabledChange1;
  TListBoxOnSetFocus             FOnSetFocus1;
  TListBoxOnKillFocus            FOnKillFocus1;
  TListBoxOnMouseWheel           FOnMouseWheel1;
  TListBoxOnBeginDock            FOnBeginDock1;
  TListBoxOnDockControlCreate    FOnDockControlCreate1;
  TListBoxOnUndockQuery          FOnUndockQuery1;
  TListBoxOnUndock               FOnUndock1;
__published:
  __property TListBoxOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TListBoxOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TListBoxOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TListBoxOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TListBoxOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TListBoxOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TListBoxOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TListBoxOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TListBoxOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TListBoxOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TListBoxOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TListBoxOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TListBoxOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TListBoxOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TListBoxOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TListBoxOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TListBoxOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TListBoxOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TListBoxOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TListBoxOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TListBoxOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TListBoxOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TListBoxOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TComboBox
// Help String      : 
// Default Interface: IComboBox
// Def. Intf. Object: IComboBoxPtr
// Def. Intf. DISP? : No
// Event   Interface: IComboBoxEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TComboBoxOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnChange)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnKeyDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnKeyUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnMouseEnter)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnMouseLeave)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnMouseMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnResize)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnDestroy)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnShow)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnHide)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnEnabledChange)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnSetFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnKillFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnMouseWheel)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Keys/*[in]*/, long Delta/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnBeginDock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH DockTarget/*[in]*/, 
                                                           LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnDockControlCreate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH Control/*[in]*/, 
                                                                   LPDISPATCH DockTarget/*[in]*/, 
                                                                   LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnUndockQuery)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnUndock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnDrawItem)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TComboBoxOnDropDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);

class PACKAGE TComboBox : public Vcl::Oleserver::TOleServer
{
  IComboBoxPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TComboBox(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IComboBoxPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IComboBoxPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_TopIndex(void);
  void            __fastcall set_TopIndex(long pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  BSTR            __fastcall get_Item(long Index/*[in]*/);
  void            __fastcall set_Item(long Index/*[in]*/, BSTR pvar/*[in]*/);
  long            __fastcall get_Count(void);
  long            __fastcall get_ItemIndex(void);
  void            __fastcall set_ItemIndex(long pVal/*[in]*/);
  long            __fastcall get_ItemHeight(void);
  void            __fastcall set_ItemHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_ItemData(long Index/*[in]*/);
  void            __fastcall set_ItemData(long Index/*[in]*/, VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Sorted(void);
  void            __fastcall set_Sorted(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_IntegralHeight(void);
  void            __fastcall set_IntegralHeight(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_HorizontalExtent(void);
  void            __fastcall set_HorizontalExtent(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  long            __fastcall get_ImageIndex(long Index/*[in]*/);
  void            __fastcall set_ImageIndex(long Index/*[in]*/, long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CustomDraw(void);
  void            __fastcall set_CustomDraw(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_OnDrawItem(VARIANT Param1/*[in]*/);
  void            __fastcall set_BackgroundImage(VARIANT Param1/*[in]*/);
  VARIANT_BOOL    __fastcall get_CustomDrawSelection(void);
  void            __fastcall set_CustomDrawSelection(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_DropDownCount(void);
  void            __fastcall set_DropDownCount(unsigned_long pVal/*[in]*/);
  long            __fastcall get_Style(void);
  void            __fastcall set_Style(long pVal/*[in]*/);
  long            __fastcall get_CharCase(void);
  void            __fastcall set_CharCase(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ReadOnly(void);
  void            __fastcall set_ReadOnly(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DroppedDown(void);
  void            __fastcall set_DroppedDown(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_CueBanner(void);
  void            __fastcall set_CueBanner(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CueBannerAlwaysVisible(void);
  void            __fastcall set_CueBannerAlwaysVisible(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_BalloonTip(void);
  void            __fastcall set_OnDropDown(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  long            __fastcall Add(BSTR Item/*[in]*/);
  void            __fastcall Remove(long Index/*[in]*/);
  long            __fastcall Insert(long Index/*[in]*/, BSTR Item/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  void            __fastcall ExChange(long A/*[in]*/, long B/*[in]*/);
  void            __fastcall Sort(long DataType/*[in,def,opt]*/, 
                                  VARIANT_BOOL Reverse/*[in,def,opt]*/);
  long            __fastcall Find(BSTR Text/*[in]*/, long Start/*[in,def,opt]*/, 
                                  VARIANT_BOOL IgnoreCase/*[in,def,opt]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property long Count={ read=get_Count };
  __property HRESULT OnDrawItem={ write=set_OnDrawItem };
  __property HRESULT BackgroundImage={ write=set_BackgroundImage };
  __property LPDISPATCH BalloonTip={ read=get_BalloonTip };
  __property HRESULT OnDropDown={ write=set_OnDropDown };
private:
  TComboBoxOnClick               FOnClick1;
  TComboBoxOnDblClick            FOnDblClick1;
  TComboBoxOnChange              FOnChange1;
  TComboBoxOnKeyDown             FOnKeyDown1;
  TComboBoxOnKeyUp               FOnKeyUp1;
  TComboBoxOnMouseEnter          FOnMouseEnter1;
  TComboBoxOnMouseLeave          FOnMouseLeave1;
  TComboBoxOnMouseDown           FOnMouseDown1;
  TComboBoxOnMouseMove           FOnMouseMove1;
  TComboBoxOnMouseUp             FOnMouseUp1;
  TComboBoxOnResize              FOnResize1;
  TComboBoxOnMove                FOnMove1;
  TComboBoxOnDestroy             FOnDestroy1;
  TComboBoxOnShow                FOnShow1;
  TComboBoxOnHide                FOnHide1;
  TComboBoxOnEnabledChange       FOnEnabledChange1;
  TComboBoxOnSetFocus            FOnSetFocus1;
  TComboBoxOnKillFocus           FOnKillFocus1;
  TComboBoxOnMouseWheel          FOnMouseWheel1;
  TComboBoxOnBeginDock           FOnBeginDock1;
  TComboBoxOnDockControlCreate   FOnDockControlCreate1;
  TComboBoxOnUndockQuery         FOnUndockQuery1;
  TComboBoxOnUndock              FOnUndock1;
  TComboBoxOnDrawItem            FOnDrawItem1;
  TComboBoxOnDropDown            FOnDropDown1;
__published:
  __property TComboBoxOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TComboBoxOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TComboBoxOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TComboBoxOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TComboBoxOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TComboBoxOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TComboBoxOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TComboBoxOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TComboBoxOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TComboBoxOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TComboBoxOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TComboBoxOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TComboBoxOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TComboBoxOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TComboBoxOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TComboBoxOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TComboBoxOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TComboBoxOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TComboBoxOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TComboBoxOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TComboBoxOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TComboBoxOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TComboBoxOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
  __property TComboBoxOnDrawItem OnDrawItem1={ read=FOnDrawItem1, write=FOnDrawItem1 };
  __property TComboBoxOnDropDown OnDropDown1={ read=FOnDropDown1, write=FOnDropDown1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TEdit
// Help String      : 
// Default Interface: IEdit
// Def. Intf. Object: IEditPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TEditOnClick)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnDblClick)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                      long y/*[in]*/, long Button/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TEditOnChange)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnKeyDown)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TEditOnKeyUp)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                   long Flags/*[in]*/);
typedef void __fastcall (__closure * TEditOnMouseEnter)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnMouseLeave)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnMouseDown)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TEditOnMouseMove)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TEditOnMouseUp)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                     long y/*[in]*/, long Button/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TEditOnResize)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnMove)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnDestroy)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnShow)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnHide)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnEnabledChange)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnSetFocus)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnKillFocus)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TEditOnMouseWheel)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Keys/*[in]*/, 
                                                        long Delta/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/);
typedef void __fastcall (__closure * TEditOnBeginDock)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, 
                                                       LPDISPATCH DockTarget/*[in]*/, 
                                                       LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TEditOnDockControlCreate)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               LPDISPATCH Control/*[in]*/, 
                                                               LPDISPATCH DockTarget/*[in]*/, 
                                                               LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TEditOnUndockQuery)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TEditOnUndock)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);

class PACKAGE TEdit : public Vcl::Oleserver::TOleServer
{
  IEditPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TEdit(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IEditPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IEditPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_TopIndex(void);
  void            __fastcall set_TopIndex(long pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  BSTR            __fastcall get_Item(long Index/*[in]*/);
  void            __fastcall set_Item(long Index/*[in]*/, BSTR pvar/*[in]*/);
  long            __fastcall get_Count(void);
  VARIANT_BOOL    __fastcall get_ReadOnly(void);
  void            __fastcall set_ReadOnly(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_MaxLength(void);
  void            __fastcall set_MaxLength(long pVal/*[in]*/);
  long            __fastcall get_CharCase(void);
  void            __fastcall set_CharCase(long pVal/*[in]*/);
  BSTR            __fastcall get_PasswordChar(void);
  void            __fastcall set_PasswordChar(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HideSelection(void);
  void            __fastcall set_HideSelection(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_MultiLine(void);
  void            __fastcall set_MultiLine(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_ScrollBars(void);
  void            __fastcall set_ScrollBars(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSize(void);
  void            __fastcall set_AutoSize(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Modified(void);
  void            __fastcall set_Modified(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_SelStart(void);
  void            __fastcall set_SelStart(long pVal/*[in]*/);
  long            __fastcall get_SelEnd(void);
  void            __fastcall set_SelEnd(long pVal/*[in]*/);
  long            __fastcall get_SelLength(void);
  void            __fastcall set_SelLength(long pVal/*[in]*/);
  unsigned_short  __fastcall get_LeftMargin(void);
  void            __fastcall set_LeftMargin(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_RightMargin(void);
  void            __fastcall set_RightMargin(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_WordWrap(void);
  void            __fastcall set_WordWrap(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_TextAlign(void);
  void            __fastcall set_TextAlign(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CanUndo(void);
  void            __fastcall set_CanUndo(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CanPaste(void);
  long            __fastcall get_DataType(void);
  void            __fastcall set_DataType(long pVal/*[in]*/);
  VARIANT         __fastcall get_Min(void);
  void            __fastcall set_Min(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Max(void);
  void            __fastcall set_Max(VARIANT pVal/*[in]*/);
  long            __fastcall get_LineFromChar(long Index/*[in,def,opt]*/);
  VARIANT_BOOL    __fastcall get_AcceptsReturn(void);
  void            __fastcall set_AcceptsReturn(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AcceptsTab(void);
  void            __fastcall set_AcceptsTab(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoHeight(void);
  void            __fastcall set_AutoHeight(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_CueBanner(void);
  void            __fastcall set_CueBanner(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CueBannerAlwaysVisible(void);
  void            __fastcall set_CueBannerAlwaysVisible(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_BalloonTip(void);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  long            __fastcall Add(BSTR Item/*[in]*/);
  void            __fastcall Remove(long Index/*[in]*/);
  long            __fastcall Insert(long Index/*[in]*/, BSTR Item/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  void            __fastcall ExChange(long A/*[in]*/, long B/*[in]*/);
  void            __fastcall Sort(long DataType/*[in,def,opt]*/, 
                                  VARIANT_BOOL Reverse/*[in,def,opt]*/);
  long            __fastcall Find(BSTR Text/*[in]*/, long Start/*[in,def,opt]*/, 
                                  VARIANT_BOOL IgnoreCase/*[in,def,opt]*/);
  void            __fastcall SelectAll(void);
  void            __fastcall ClearSelection(void);
  void            __fastcall ReplaceSelection(BSTR NewText/*[in]*/, 
                                              VARIANT_BOOL CanUndo/*[in,def,opt]*/);
  void            __fastcall Undo(void);
  void            __fastcall Cut(void);
  void            __fastcall Copy(void);
  void            __fastcall Paste(void);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property long Count={ read=get_Count };
  __property VARIANT_BOOL CanPaste={ read=get_CanPaste };
  __property long LineFromChar[long Index]={ read=get_LineFromChar };
  __property LPDISPATCH BalloonTip={ read=get_BalloonTip };
private:
  TEditOnClick                   FOnClick1;
  TEditOnDblClick                FOnDblClick1;
  TEditOnChange                  FOnChange1;
  TEditOnKeyDown                 FOnKeyDown1;
  TEditOnKeyUp                   FOnKeyUp1;
  TEditOnMouseEnter              FOnMouseEnter1;
  TEditOnMouseLeave              FOnMouseLeave1;
  TEditOnMouseDown               FOnMouseDown1;
  TEditOnMouseMove               FOnMouseMove1;
  TEditOnMouseUp                 FOnMouseUp1;
  TEditOnResize                  FOnResize1;
  TEditOnMove                    FOnMove1;
  TEditOnDestroy                 FOnDestroy1;
  TEditOnShow                    FOnShow1;
  TEditOnHide                    FOnHide1;
  TEditOnEnabledChange           FOnEnabledChange1;
  TEditOnSetFocus                FOnSetFocus1;
  TEditOnKillFocus               FOnKillFocus1;
  TEditOnMouseWheel              FOnMouseWheel1;
  TEditOnBeginDock               FOnBeginDock1;
  TEditOnDockControlCreate       FOnDockControlCreate1;
  TEditOnUndockQuery             FOnUndockQuery1;
  TEditOnUndock                  FOnUndock1;
__published:
  __property TEditOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TEditOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TEditOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TEditOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TEditOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TEditOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TEditOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TEditOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TEditOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TEditOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TEditOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TEditOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TEditOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TEditOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TEditOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TEditOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TEditOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TEditOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TEditOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TEditOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TEditOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TEditOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TEditOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TButton
// Help String      : 
// Default Interface: IButton
// Def. Intf. Object: IButtonPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TButtonOnClick)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnDblClick)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TButtonOnChange)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnKeyDown)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TButtonOnKeyUp)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TButtonOnMouseEnter)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnMouseLeave)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnMouseDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TButtonOnMouseMove)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TButtonOnMouseUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TButtonOnResize)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnMove)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnDestroy)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnShow)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnHide)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnEnabledChange)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnSetFocus)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnKillFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TButtonOnMouseWheel)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Keys/*[in]*/, long Delta/*[in]*/, 
                                                          long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TButtonOnBeginDock)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         LPDISPATCH DockTarget/*[in]*/, 
                                                         LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TButtonOnDockControlCreate)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH Control/*[in]*/, 
                                                                 LPDISPATCH DockTarget/*[in]*/, 
                                                                 LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TButtonOnUndockQuery)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TButtonOnUndock)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);

class PACKAGE TButton : public Vcl::Oleserver::TOleServer
{
  IButtonPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TButton(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IButtonPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IButtonPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Flat(void);
  void            __fastcall set_Flat(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Default(void);
  void            __fastcall set_Default(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Cancel(void);
  void            __fastcall set_Cancel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CommandLinkButton(void);
  void            __fastcall set_CommandLinkButton(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Note(void);
  void            __fastcall set_Note(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Shield(void);
  void            __fastcall set_Shield(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TButtonOnClick                 FOnClick1;
  TButtonOnDblClick              FOnDblClick1;
  TButtonOnChange                FOnChange1;
  TButtonOnKeyDown               FOnKeyDown1;
  TButtonOnKeyUp                 FOnKeyUp1;
  TButtonOnMouseEnter            FOnMouseEnter1;
  TButtonOnMouseLeave            FOnMouseLeave1;
  TButtonOnMouseDown             FOnMouseDown1;
  TButtonOnMouseMove             FOnMouseMove1;
  TButtonOnMouseUp               FOnMouseUp1;
  TButtonOnResize                FOnResize1;
  TButtonOnMove                  FOnMove1;
  TButtonOnDestroy               FOnDestroy1;
  TButtonOnShow                  FOnShow1;
  TButtonOnHide                  FOnHide1;
  TButtonOnEnabledChange         FOnEnabledChange1;
  TButtonOnSetFocus              FOnSetFocus1;
  TButtonOnKillFocus             FOnKillFocus1;
  TButtonOnMouseWheel            FOnMouseWheel1;
  TButtonOnBeginDock             FOnBeginDock1;
  TButtonOnDockControlCreate     FOnDockControlCreate1;
  TButtonOnUndockQuery           FOnUndockQuery1;
  TButtonOnUndock                FOnUndock1;
__published:
  __property TButtonOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TButtonOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TButtonOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TButtonOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TButtonOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TButtonOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TButtonOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TButtonOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TButtonOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TButtonOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TButtonOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TButtonOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TButtonOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TButtonOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TButtonOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TButtonOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TButtonOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TButtonOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TButtonOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TButtonOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TButtonOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TButtonOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TButtonOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCheckBox
// Help String      : 
// Default Interface: ICheckBox
// Def. Intf. Object: ICheckBoxPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TCheckBoxOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnChange)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnKeyDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnKeyUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnMouseEnter)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnMouseLeave)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnMouseMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnResize)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnDestroy)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnShow)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnHide)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnEnabledChange)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnSetFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnKillFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnMouseWheel)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Keys/*[in]*/, long Delta/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnBeginDock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH DockTarget/*[in]*/, 
                                                           LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnDockControlCreate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH Control/*[in]*/, 
                                                                   LPDISPATCH DockTarget/*[in]*/, 
                                                                   LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnUndockQuery)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TCheckBoxOnUndock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);

class PACKAGE TCheckBox : public Vcl::Oleserver::TOleServer
{
  ICheckBoxPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCheckBox(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ICheckBoxPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ICheckBoxPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Flat(void);
  void            __fastcall set_Flat(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_State(void);
  void            __fastcall set_State(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowGrayed(void);
  void            __fastcall set_AllowGrayed(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Checked(void);
  void            __fastcall set_Checked(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TCheckBoxOnClick               FOnClick1;
  TCheckBoxOnDblClick            FOnDblClick1;
  TCheckBoxOnChange              FOnChange1;
  TCheckBoxOnKeyDown             FOnKeyDown1;
  TCheckBoxOnKeyUp               FOnKeyUp1;
  TCheckBoxOnMouseEnter          FOnMouseEnter1;
  TCheckBoxOnMouseLeave          FOnMouseLeave1;
  TCheckBoxOnMouseDown           FOnMouseDown1;
  TCheckBoxOnMouseMove           FOnMouseMove1;
  TCheckBoxOnMouseUp             FOnMouseUp1;
  TCheckBoxOnResize              FOnResize1;
  TCheckBoxOnMove                FOnMove1;
  TCheckBoxOnDestroy             FOnDestroy1;
  TCheckBoxOnShow                FOnShow1;
  TCheckBoxOnHide                FOnHide1;
  TCheckBoxOnEnabledChange       FOnEnabledChange1;
  TCheckBoxOnSetFocus            FOnSetFocus1;
  TCheckBoxOnKillFocus           FOnKillFocus1;
  TCheckBoxOnMouseWheel          FOnMouseWheel1;
  TCheckBoxOnBeginDock           FOnBeginDock1;
  TCheckBoxOnDockControlCreate   FOnDockControlCreate1;
  TCheckBoxOnUndockQuery         FOnUndockQuery1;
  TCheckBoxOnUndock              FOnUndock1;
__published:
  __property TCheckBoxOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TCheckBoxOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TCheckBoxOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TCheckBoxOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TCheckBoxOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TCheckBoxOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TCheckBoxOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TCheckBoxOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TCheckBoxOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TCheckBoxOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TCheckBoxOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TCheckBoxOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TCheckBoxOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TCheckBoxOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TCheckBoxOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TCheckBoxOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TCheckBoxOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TCheckBoxOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TCheckBoxOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TCheckBoxOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TCheckBoxOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TCheckBoxOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TCheckBoxOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TRadioButton
// Help String      : 
// Default Interface: IRadioButton
// Def. Intf. Object: IRadioButtonPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TRadioButtonOnClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnDblClick)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnChange)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnKeyDown)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnKeyUp)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnMouseEnter)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnMouseLeave)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnMouseDown)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Button/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnMouseMove)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnMouseUp)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnResize)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnMove)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnDestroy)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnShow)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnHide)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnEnabledChange)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnSetFocus)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnKillFocus)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnMouseWheel)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long Keys/*[in]*/, long Delta/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnBeginDock)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH DockTarget/*[in]*/, 
                                                              LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnDockControlCreate)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      LPDISPATCH Control/*[in]*/, 
                                                                      LPDISPATCH DockTarget/*[in]*/, 
                                                                      LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnUndockQuery)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TRadioButtonOnUndock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);

class PACKAGE TRadioButton : public Vcl::Oleserver::TOleServer
{
  IRadioButtonPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TRadioButton(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IRadioButtonPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IRadioButtonPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Flat(void);
  void            __fastcall set_Flat(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Checked(void);
  void            __fastcall set_Checked(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_Group(void);
  void            __fastcall set_Group(long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TRadioButtonOnClick            FOnClick1;
  TRadioButtonOnDblClick         FOnDblClick1;
  TRadioButtonOnChange           FOnChange1;
  TRadioButtonOnKeyDown          FOnKeyDown1;
  TRadioButtonOnKeyUp            FOnKeyUp1;
  TRadioButtonOnMouseEnter       FOnMouseEnter1;
  TRadioButtonOnMouseLeave       FOnMouseLeave1;
  TRadioButtonOnMouseDown        FOnMouseDown1;
  TRadioButtonOnMouseMove        FOnMouseMove1;
  TRadioButtonOnMouseUp          FOnMouseUp1;
  TRadioButtonOnResize           FOnResize1;
  TRadioButtonOnMove             FOnMove1;
  TRadioButtonOnDestroy          FOnDestroy1;
  TRadioButtonOnShow             FOnShow1;
  TRadioButtonOnHide             FOnHide1;
  TRadioButtonOnEnabledChange    FOnEnabledChange1;
  TRadioButtonOnSetFocus         FOnSetFocus1;
  TRadioButtonOnKillFocus        FOnKillFocus1;
  TRadioButtonOnMouseWheel       FOnMouseWheel1;
  TRadioButtonOnBeginDock        FOnBeginDock1;
  TRadioButtonOnDockControlCreate FOnDockControlCreate1;
  TRadioButtonOnUndockQuery      FOnUndockQuery1;
  TRadioButtonOnUndock           FOnUndock1;
__published:
  __property TRadioButtonOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TRadioButtonOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TRadioButtonOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TRadioButtonOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TRadioButtonOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TRadioButtonOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TRadioButtonOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TRadioButtonOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TRadioButtonOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TRadioButtonOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TRadioButtonOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TRadioButtonOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TRadioButtonOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TRadioButtonOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TRadioButtonOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TRadioButtonOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TRadioButtonOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TRadioButtonOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TRadioButtonOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TRadioButtonOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TRadioButtonOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TRadioButtonOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TRadioButtonOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TStatusItem
// Help String      : 
// Default Interface: IStatusItem
// Def. Intf. Object: IStatusItemPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TStatusItem : public Vcl::Oleserver::TOleServer
{
  IStatusItemPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TStatusItem(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IStatusItemPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IStatusItemPtr intf);


  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Border(void);
  void            __fastcall set_Border(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSize(void);
  void            __fastcall set_AutoSize(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  __property LPDISPATCH Design={ read=get_Design };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TStatusBar
// Help String      : 
// Default Interface: IStatusBar
// Def. Intf. Object: IStatusBarPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TStatusBarOnClick)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnDblClick)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnChange)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnKeyDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnKeyUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnMouseEnter)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnMouseLeave)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnMouseDown)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnMouseMove)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Flags/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnMouseUp)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnResize)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnMove)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnDestroy)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnShow)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnHide)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnEnabledChange)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnSetFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnKillFocus)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnMouseWheel)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Keys/*[in]*/, long Delta/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnBeginDock)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH DockTarget/*[in]*/, 
                                                            LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnDockControlCreate)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    LPDISPATCH Control/*[in]*/, 
                                                                    LPDISPATCH DockTarget/*[in]*/, 
                                                                    LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnUndockQuery)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TStatusBarOnUndock)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);

class PACKAGE TStatusBar : public Vcl::Oleserver::TOleServer
{
  IStatusBarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TStatusBar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IStatusBarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IStatusBarPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Simple(void);
  void            __fastcall set_Simple(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_SizeGrip(void);
  void            __fastcall set_SizeGrip(VARIANT_BOOL pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall ExChange(VARIANT A/*[in]*/, VARIANT B/*[in]*/);
  LPDISPATCH      __fastcall Add(long Width/*[in]*/, long Border/*[in,def,opt]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
private:
  TStatusBarOnClick              FOnClick1;
  TStatusBarOnDblClick           FOnDblClick1;
  TStatusBarOnChange             FOnChange1;
  TStatusBarOnKeyDown            FOnKeyDown1;
  TStatusBarOnKeyUp              FOnKeyUp1;
  TStatusBarOnMouseEnter         FOnMouseEnter1;
  TStatusBarOnMouseLeave         FOnMouseLeave1;
  TStatusBarOnMouseDown          FOnMouseDown1;
  TStatusBarOnMouseMove          FOnMouseMove1;
  TStatusBarOnMouseUp            FOnMouseUp1;
  TStatusBarOnResize             FOnResize1;
  TStatusBarOnMove               FOnMove1;
  TStatusBarOnDestroy            FOnDestroy1;
  TStatusBarOnShow               FOnShow1;
  TStatusBarOnHide               FOnHide1;
  TStatusBarOnEnabledChange      FOnEnabledChange1;
  TStatusBarOnSetFocus           FOnSetFocus1;
  TStatusBarOnKillFocus          FOnKillFocus1;
  TStatusBarOnMouseWheel         FOnMouseWheel1;
  TStatusBarOnBeginDock          FOnBeginDock1;
  TStatusBarOnDockControlCreate  FOnDockControlCreate1;
  TStatusBarOnUndockQuery        FOnUndockQuery1;
  TStatusBarOnUndock             FOnUndock1;
__published:
  __property TStatusBarOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TStatusBarOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TStatusBarOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TStatusBarOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TStatusBarOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TStatusBarOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TStatusBarOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TStatusBarOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TStatusBarOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TStatusBarOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TStatusBarOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TStatusBarOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TStatusBarOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TStatusBarOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TStatusBarOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TStatusBarOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TStatusBarOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TStatusBarOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TStatusBarOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TStatusBarOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TStatusBarOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TStatusBarOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TStatusBarOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TProgressBar
// Help String      : 
// Default Interface: IProgressBar
// Def. Intf. Object: IProgressBarPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TProgressBarOnClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnDblClick)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnChange)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnKeyDown)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnKeyUp)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnMouseEnter)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnMouseLeave)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnMouseDown)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Button/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnMouseMove)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnMouseUp)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnResize)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnMove)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnDestroy)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnShow)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnHide)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnEnabledChange)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnSetFocus)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnKillFocus)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnMouseWheel)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long Keys/*[in]*/, long Delta/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnBeginDock)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH DockTarget/*[in]*/, 
                                                              LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnDockControlCreate)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      LPDISPATCH Control/*[in]*/, 
                                                                      LPDISPATCH DockTarget/*[in]*/, 
                                                                      LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnUndockQuery)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TProgressBarOnUndock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);

class PACKAGE TProgressBar : public Vcl::Oleserver::TOleServer
{
  IProgressBarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TProgressBar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IProgressBarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IProgressBarPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_Min(void);
  void            __fastcall set_Min(long pVal/*[in]*/);
  long            __fastcall get_Max(void);
  void            __fastcall set_Max(long pVal/*[in]*/);
  long            __fastcall get_Position(void);
  void            __fastcall set_Position(long pVal/*[in]*/);
  long            __fastcall get_Step(void);
  void            __fastcall set_Step(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Vertical(void);
  void            __fastcall set_Vertical(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Smooth(void);
  void            __fastcall set_Smooth(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_State(void);
  void            __fastcall set_State(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Marquee(void);
  void            __fastcall set_Marquee(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_MarqueeActive(void);
  void            __fastcall set_MarqueeActive(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_MarqueeInterval(void);
  void            __fastcall set_MarqueeInterval(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_SmoothReverse(void);
  void            __fastcall set_SmoothReverse(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_BarColor(void);
  void            __fastcall set_BarColor(unsigned_long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall StepIt(void);
  void            __fastcall StepBy(long Delta/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TProgressBarOnClick            FOnClick1;
  TProgressBarOnDblClick         FOnDblClick1;
  TProgressBarOnChange           FOnChange1;
  TProgressBarOnKeyDown          FOnKeyDown1;
  TProgressBarOnKeyUp            FOnKeyUp1;
  TProgressBarOnMouseEnter       FOnMouseEnter1;
  TProgressBarOnMouseLeave       FOnMouseLeave1;
  TProgressBarOnMouseDown        FOnMouseDown1;
  TProgressBarOnMouseMove        FOnMouseMove1;
  TProgressBarOnMouseUp          FOnMouseUp1;
  TProgressBarOnResize           FOnResize1;
  TProgressBarOnMove             FOnMove1;
  TProgressBarOnDestroy          FOnDestroy1;
  TProgressBarOnShow             FOnShow1;
  TProgressBarOnHide             FOnHide1;
  TProgressBarOnEnabledChange    FOnEnabledChange1;
  TProgressBarOnSetFocus         FOnSetFocus1;
  TProgressBarOnKillFocus        FOnKillFocus1;
  TProgressBarOnMouseWheel       FOnMouseWheel1;
  TProgressBarOnBeginDock        FOnBeginDock1;
  TProgressBarOnDockControlCreate FOnDockControlCreate1;
  TProgressBarOnUndockQuery      FOnUndockQuery1;
  TProgressBarOnUndock           FOnUndock1;
__published:
  __property TProgressBarOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TProgressBarOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TProgressBarOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TProgressBarOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TProgressBarOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TProgressBarOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TProgressBarOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TProgressBarOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TProgressBarOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TProgressBarOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TProgressBarOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TProgressBarOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TProgressBarOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TProgressBarOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TProgressBarOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TProgressBarOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TProgressBarOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TProgressBarOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TProgressBarOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TProgressBarOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TProgressBarOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TProgressBarOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TProgressBarOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TScrollBar
// Help String      : 
// Default Interface: IScrollBar
// Def. Intf. Object: IScrollBarPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TScrollBarOnClick)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnDblClick)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnChange)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnKeyDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnKeyUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnMouseEnter)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnMouseLeave)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnMouseDown)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnMouseMove)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Flags/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnMouseUp)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnResize)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnMove)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnDestroy)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnShow)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnHide)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnEnabledChange)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnSetFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnKillFocus)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnMouseWheel)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Keys/*[in]*/, long Delta/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnBeginDock)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH DockTarget/*[in]*/, 
                                                            LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnDockControlCreate)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    LPDISPATCH Control/*[in]*/, 
                                                                    LPDISPATCH DockTarget/*[in]*/, 
                                                                    LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnUndockQuery)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TScrollBarOnUndock)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);

class PACKAGE TScrollBar : public Vcl::Oleserver::TOleServer
{
  IScrollBarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TScrollBar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IScrollBarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IScrollBarPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_Min(void);
  void            __fastcall set_Min(long pVal/*[in]*/);
  long            __fastcall get_Max(void);
  void            __fastcall set_Max(long pVal/*[in]*/);
  long            __fastcall get_Position(void);
  void            __fastcall set_Position(long pVal/*[in]*/);
  long            __fastcall get_Step(void);
  void            __fastcall set_Step(long pVal/*[in]*/);
  unsigned_long   __fastcall get_Page(void);
  void            __fastcall set_Page(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_SmallChange(void);
  void            __fastcall set_SmallChange(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_LargeChange(void);
  void            __fastcall set_LargeChange(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Vertical(void);
  void            __fastcall set_Vertical(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  void            __fastcall set_Tracking(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall StepIt(void);
  void            __fastcall StepBy(long Delta/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TScrollBarOnClick              FOnClick1;
  TScrollBarOnDblClick           FOnDblClick1;
  TScrollBarOnChange             FOnChange1;
  TScrollBarOnKeyDown            FOnKeyDown1;
  TScrollBarOnKeyUp              FOnKeyUp1;
  TScrollBarOnMouseEnter         FOnMouseEnter1;
  TScrollBarOnMouseLeave         FOnMouseLeave1;
  TScrollBarOnMouseDown          FOnMouseDown1;
  TScrollBarOnMouseMove          FOnMouseMove1;
  TScrollBarOnMouseUp            FOnMouseUp1;
  TScrollBarOnResize             FOnResize1;
  TScrollBarOnMove               FOnMove1;
  TScrollBarOnDestroy            FOnDestroy1;
  TScrollBarOnShow               FOnShow1;
  TScrollBarOnHide               FOnHide1;
  TScrollBarOnEnabledChange      FOnEnabledChange1;
  TScrollBarOnSetFocus           FOnSetFocus1;
  TScrollBarOnKillFocus          FOnKillFocus1;
  TScrollBarOnMouseWheel         FOnMouseWheel1;
  TScrollBarOnBeginDock          FOnBeginDock1;
  TScrollBarOnDockControlCreate  FOnDockControlCreate1;
  TScrollBarOnUndockQuery        FOnUndockQuery1;
  TScrollBarOnUndock             FOnUndock1;
__published:
  __property TScrollBarOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TScrollBarOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TScrollBarOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TScrollBarOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TScrollBarOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TScrollBarOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TScrollBarOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TScrollBarOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TScrollBarOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TScrollBarOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TScrollBarOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TScrollBarOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TScrollBarOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TScrollBarOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TScrollBarOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TScrollBarOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TScrollBarOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TScrollBarOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TScrollBarOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TScrollBarOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TScrollBarOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TScrollBarOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TScrollBarOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTab
// Help String      : 
// Default Interface: ITab
// Def. Intf. Object: ITabPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TTabOnClick)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnDblClick)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                     long y/*[in]*/, long Button/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabOnChange)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnKeyDown)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                    long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabOnKeyUp)(System::TObject * Sender, 
                                                  LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                  long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabOnMouseEnter)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnMouseLeave)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnMouseDown)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                      long y/*[in]*/, long Button/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabOnMouseMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                      long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabOnMouseUp)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                    long y/*[in]*/, long Button/*[in]*/, 
                                                    long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabOnResize)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnMove)(System::TObject * Sender, 
                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnDestroy)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnShow)(System::TObject * Sender, 
                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnHide)(System::TObject * Sender, 
                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnEnabledChange)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnSetFocus)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnKillFocus)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabOnMouseWheel)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Keys/*[in]*/, 
                                                       long Delta/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/);
typedef void __fastcall (__closure * TTabOnBeginDock)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, 
                                                      LPDISPATCH DockTarget/*[in]*/, 
                                                      LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TTabOnDockControlCreate)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH Control/*[in]*/, 
                                                              LPDISPATCH DockTarget/*[in]*/, 
                                                              LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TTabOnUndockQuery)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, 
                                                        LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TTabOnUndock)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);

class PACKAGE TTab : public Vcl::Oleserver::TOleServer
{
  ITabPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTab(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITabPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITabPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  unsigned_long   __fastcall get_BorderWidth(void);
  void            __fastcall set_BorderWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_BevelWidth(void);
  void            __fastcall set_BevelWidth(unsigned_long pVal/*[in]*/);
  long            __fastcall get_BevelOuter(void);
  void            __fastcall set_BevelOuter(long pVal/*[in]*/);
  long            __fastcall get_BevelInner(void);
  void            __fastcall set_BevelInner(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_GraphFont(void);
  void            __fastcall set_GraphFont(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_GraphFont(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  void            __fastcall set_AutoScroll(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  void            __fastcall set_Tracking(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_CaptureMouse(void);
  void            __fastcall set_CaptureMouse(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentBackground(void);
  void            __fastcall set_ParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BorderParentBackground(void);
  void            __fastcall set_BorderParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSplit(void);
  void            __fastcall set_AutoSplit(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GroupBox(void);
  void            __fastcall set_GroupBox(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Margin(void);
  void            __fastcall set_Margin(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginLeft(void);
  void            __fastcall set_MarginLeft(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginTop(void);
  void            __fastcall set_MarginTop(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginRight(void);
  void            __fastcall set_MarginRight(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginBottom(void);
  void            __fastcall set_MarginBottom(unsigned_long pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCheckBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            BSTR Text/*[in,def,opt]*/, 
                                            VARIANT_BOOL Checked/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRadioButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateComboBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFrame(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateGroupBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateProgressBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTabControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateToolBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMenuBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateStatusBar(void);
  LPDISPATCH      __fastcall CreateHyperLink(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             BSTR Url/*[in,def,opt]*/, BSTR Label/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePager(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateScrollBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateActiveXControl(long Left/*[in]*/, long Top/*[in]*/, 
                                                  long Width/*[in]*/, long Height/*[in]*/, 
                                                  BSTR ID/*[in]*/);
  LPDISPATCH      __fastcall CreateActiveXControlLicensed(long Left/*[in]*/, long Top/*[in]*/, 
                                                          long Width/*[in]*/, long Height/*[in]*/, 
                                                          BSTR ID/*[in]*/, BSTR LicKey/*[in]*/);
  LPDISPATCH      __fastcall CreateHeader(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTreeView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRichEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/, long Version/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAnimate(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateHotKey(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrackBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateUpDown(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDateTimePicker(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/, 
                                                  long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCalendar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateIPAddress(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateSplitter(unsigned_short Align/*[in]*/);
  LPDISPATCH      __fastcall CreateSplitPanel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              VARIANT_BOOL Vertical/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateResourceUsageGraph(long Left/*[in,def,opt]*/, 
                                                      long Top/*[in,def,opt]*/, 
                                                      long Width/*[in,def,opt]*/, 
                                                      long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePropertyGrid(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                                long Width/*[in,def,opt]*/, 
                                                long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateLabel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePageControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAutoSplitFrame(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Line(long Ax/*[in]*/, long Ay/*[in]*/, long Bx/*[in]*/, long By/*[in]*/);
  LPDISPATCH      __fastcall Rectangle(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/);
  LPDISPATCH      __fastcall RoundRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, long nWidth/*[in]*/, 
                                       long nHeight/*[in]*/);
  LPDISPATCH      __fastcall Circle(long x/*[in]*/, long y/*[in]*/, long r/*[in]*/);
  LPDISPATCH      __fastcall Ellipse(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                     long Height/*[in]*/);
  LPDISPATCH      __fastcall Arc(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXStartArc/*[in]*/, 
                                 long nYStartArc/*[in]*/, long nXEndArc/*[in]*/, 
                                 long nYEndArc/*[in]*/);
  LPDISPATCH      __fastcall Chord(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long nXRadial1/*[in]*/, 
                                   long nYRadial1/*[in]*/, long nXRadial2/*[in]*/, 
                                   long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Pie(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXRadial1/*[in]*/, long nYRadial1/*[in]*/, 
                                 long nXRadial2/*[in]*/, long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Polygon(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall TextOut(long x/*[in]*/, long y/*[in]*/, BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall TextRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                      long Height/*[in]*/, BSTR Text/*[in]*/, 
                                      unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall DrawImage(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, VARIANT Image/*[in]*/);
  LPDISPATCH      __fastcall DrawRegion(long Left/*[in]*/, long Top/*[in]*/, 
                                        unsigned_long Region/*[in]*/);
  LPDISPATCH      __fastcall Bevel(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long BevelOuter/*[in,def,opt]*/, 
                                   long BevelInner/*[in,def,opt]*/, 
                                   unsigned_long BorderWidth/*[in,def,opt]*/, 
                                   unsigned_long BevelWidth/*[in,def,opt]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  LPDISPATCH      __fastcall Get(BSTR Name/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
private:
  TTabOnClick                    FOnClick1;
  TTabOnDblClick                 FOnDblClick1;
  TTabOnChange                   FOnChange1;
  TTabOnKeyDown                  FOnKeyDown1;
  TTabOnKeyUp                    FOnKeyUp1;
  TTabOnMouseEnter               FOnMouseEnter1;
  TTabOnMouseLeave               FOnMouseLeave1;
  TTabOnMouseDown                FOnMouseDown1;
  TTabOnMouseMove                FOnMouseMove1;
  TTabOnMouseUp                  FOnMouseUp1;
  TTabOnResize                   FOnResize1;
  TTabOnMove                     FOnMove1;
  TTabOnDestroy                  FOnDestroy1;
  TTabOnShow                     FOnShow1;
  TTabOnHide                     FOnHide1;
  TTabOnEnabledChange            FOnEnabledChange1;
  TTabOnSetFocus                 FOnSetFocus1;
  TTabOnKillFocus                FOnKillFocus1;
  TTabOnMouseWheel               FOnMouseWheel1;
  TTabOnBeginDock                FOnBeginDock1;
  TTabOnDockControlCreate        FOnDockControlCreate1;
  TTabOnUndockQuery              FOnUndockQuery1;
  TTabOnUndock                   FOnUndock1;
__published:
  __property TTabOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TTabOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TTabOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TTabOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TTabOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TTabOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TTabOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TTabOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TTabOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TTabOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TTabOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TTabOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TTabOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TTabOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TTabOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TTabOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TTabOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TTabOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TTabOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TTabOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TTabOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TTabOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TTabOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTabControl
// Help String      : 
// Default Interface: ITabControl
// Def. Intf. Object: ITabControlPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TTabControlOnClick)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnDblClick)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnChange)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnKeyDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnKeyUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnMouseEnter)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnMouseLeave)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnMouseDown)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnMouseMove)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnMouseUp)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnResize)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnMove)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnDestroy)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnShow)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnHide)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnEnabledChange)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnSetFocus)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnKillFocus)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnMouseWheel)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long Keys/*[in]*/, long Delta/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnBeginDock)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH DockTarget/*[in]*/, 
                                                             LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnDockControlCreate)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     LPDISPATCH Control/*[in]*/, 
                                                                     LPDISPATCH DockTarget/*[in]*/, 
                                                                     LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnUndockQuery)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TTabControlOnUndock)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);

class PACKAGE TTabControl : public Vcl::Oleserver::TOleServer
{
  ITabControlPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTabControl(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITabControlPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITabControlPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  LPDISPATCH      __fastcall get_ActiveControl(void);
  void            __fastcall set_ActiveControl(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_ActiveControl(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Buttons(void);
  void            __fastcall set_Buttons(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_MultiLine(void);
  void            __fastcall set_MultiLine(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HotTrack(void);
  void            __fastcall set_HotTrack(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_FlatButtons(void);
  void            __fastcall set_FlatButtons(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_RaggedRight(void);
  void            __fastcall set_RaggedRight(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_TabWidth(void);
  void            __fastcall set_TabWidth(long pVal/*[in]*/);
  long            __fastcall get_TabHeight(void);
  void            __fastcall set_TabHeight(long pVal/*[in]*/);
  long            __fastcall get_ItemIndex(void);
  void            __fastcall set_ItemIndex(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabsVisible(void);
  void            __fastcall set_TabsVisible(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateTab(BSTR Text/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
private:
  TTabControlOnClick             FOnClick1;
  TTabControlOnDblClick          FOnDblClick1;
  TTabControlOnChange            FOnChange1;
  TTabControlOnKeyDown           FOnKeyDown1;
  TTabControlOnKeyUp             FOnKeyUp1;
  TTabControlOnMouseEnter        FOnMouseEnter1;
  TTabControlOnMouseLeave        FOnMouseLeave1;
  TTabControlOnMouseDown         FOnMouseDown1;
  TTabControlOnMouseMove         FOnMouseMove1;
  TTabControlOnMouseUp           FOnMouseUp1;
  TTabControlOnResize            FOnResize1;
  TTabControlOnMove              FOnMove1;
  TTabControlOnDestroy           FOnDestroy1;
  TTabControlOnShow              FOnShow1;
  TTabControlOnHide              FOnHide1;
  TTabControlOnEnabledChange     FOnEnabledChange1;
  TTabControlOnSetFocus          FOnSetFocus1;
  TTabControlOnKillFocus         FOnKillFocus1;
  TTabControlOnMouseWheel        FOnMouseWheel1;
  TTabControlOnBeginDock         FOnBeginDock1;
  TTabControlOnDockControlCreate FOnDockControlCreate1;
  TTabControlOnUndockQuery       FOnUndockQuery1;
  TTabControlOnUndock            FOnUndock1;
__published:
  __property TTabControlOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TTabControlOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TTabControlOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TTabControlOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TTabControlOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TTabControlOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TTabControlOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TTabControlOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TTabControlOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TTabControlOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TTabControlOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TTabControlOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TTabControlOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TTabControlOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TTabControlOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TTabControlOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TTabControlOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TTabControlOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TTabControlOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TTabControlOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TTabControlOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TTabControlOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TTabControlOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPageControl
// Help String      : 
// Default Interface: IPageControl
// Def. Intf. Object: IPageControlPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TPageControlOnClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnDblClick)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnChange)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnKeyDown)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnKeyUp)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnMouseEnter)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnMouseLeave)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnMouseDown)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Button/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnMouseMove)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnMouseUp)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnResize)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnMove)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnDestroy)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnShow)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnHide)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnEnabledChange)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnSetFocus)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnKillFocus)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnMouseWheel)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long Keys/*[in]*/, long Delta/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnBeginDock)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH DockTarget/*[in]*/, 
                                                              LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnDockControlCreate)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      LPDISPATCH Control/*[in]*/, 
                                                                      LPDISPATCH DockTarget/*[in]*/, 
                                                                      LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnUndockQuery)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TPageControlOnUndock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);

class PACKAGE TPageControl : public Vcl::Oleserver::TOleServer
{
  IPageControlPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPageControl(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPageControlPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPageControlPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  LPDISPATCH      __fastcall get_ActiveControl(void);
  void            __fastcall set_ActiveControl(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_ActiveControl(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Buttons(void);
  void            __fastcall set_Buttons(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_MultiLine(void);
  void            __fastcall set_MultiLine(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HotTrack(void);
  void            __fastcall set_HotTrack(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_FlatButtons(void);
  void            __fastcall set_FlatButtons(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_RaggedRight(void);
  void            __fastcall set_RaggedRight(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_TabWidth(void);
  void            __fastcall set_TabWidth(long pVal/*[in]*/);
  long            __fastcall get_TabHeight(void);
  void            __fastcall set_TabHeight(long pVal/*[in]*/);
  long            __fastcall get_ItemIndex(void);
  void            __fastcall set_ItemIndex(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabsVisible(void);
  void            __fastcall set_TabsVisible(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_TabsAlign(void);
  void            __fastcall set_TabsAlign(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HeaderVisible(void);
  void            __fastcall set_HeaderVisible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabCloseButton(void);
  void            __fastcall set_TabCloseButton(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ShowSingleTab(void);
  void            __fastcall set_ShowSingleTab(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HideClippedTabs(void);
  void            __fastcall set_HideClippedTabs(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabsDragDrop(void);
  void            __fastcall set_TabsDragDrop(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_HeaderColors(void);
  LPDISPATCH      __fastcall get_TabColors(void);
  LPDISPATCH      __fastcall get_CloseButtonColors(void);
  LPDISPATCH      __fastcall get_ChevronColors(void);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateTab(BSTR Text/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
  __property LPDISPATCH HeaderColors={ read=get_HeaderColors };
  __property LPDISPATCH TabColors={ read=get_TabColors };
  __property LPDISPATCH CloseButtonColors={ read=get_CloseButtonColors };
  __property LPDISPATCH ChevronColors={ read=get_ChevronColors };
private:
  TPageControlOnClick            FOnClick1;
  TPageControlOnDblClick         FOnDblClick1;
  TPageControlOnChange           FOnChange1;
  TPageControlOnKeyDown          FOnKeyDown1;
  TPageControlOnKeyUp            FOnKeyUp1;
  TPageControlOnMouseEnter       FOnMouseEnter1;
  TPageControlOnMouseLeave       FOnMouseLeave1;
  TPageControlOnMouseDown        FOnMouseDown1;
  TPageControlOnMouseMove        FOnMouseMove1;
  TPageControlOnMouseUp          FOnMouseUp1;
  TPageControlOnResize           FOnResize1;
  TPageControlOnMove             FOnMove1;
  TPageControlOnDestroy          FOnDestroy1;
  TPageControlOnShow             FOnShow1;
  TPageControlOnHide             FOnHide1;
  TPageControlOnEnabledChange    FOnEnabledChange1;
  TPageControlOnSetFocus         FOnSetFocus1;
  TPageControlOnKillFocus        FOnKillFocus1;
  TPageControlOnMouseWheel       FOnMouseWheel1;
  TPageControlOnBeginDock        FOnBeginDock1;
  TPageControlOnDockControlCreate FOnDockControlCreate1;
  TPageControlOnUndockQuery      FOnUndockQuery1;
  TPageControlOnUndock           FOnUndock1;
__published:
  __property TPageControlOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TPageControlOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TPageControlOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TPageControlOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TPageControlOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TPageControlOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TPageControlOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TPageControlOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TPageControlOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TPageControlOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TPageControlOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TPageControlOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TPageControlOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TPageControlOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TPageControlOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TPageControlOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TPageControlOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TPageControlOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TPageControlOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TPageControlOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TPageControlOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TPageControlOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TPageControlOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TToolBar
// Help String      : 
// Default Interface: IToolBar
// Def. Intf. Object: IToolBarPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TToolBarOnClick)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnDblClick)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnChange)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnKeyDown)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnKeyUp)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnMouseEnter)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnMouseLeave)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnMouseDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnMouseMove)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnMouseUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnResize)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnMove)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnDestroy)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnShow)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnHide)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnEnabledChange)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnSetFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnKillFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnMouseWheel)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Keys/*[in]*/, long Delta/*[in]*/, 
                                                           long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnBeginDock)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH DockTarget/*[in]*/, 
                                                          LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnDockControlCreate)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  LPDISPATCH Control/*[in]*/, 
                                                                  LPDISPATCH DockTarget/*[in]*/, 
                                                                  LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnUndockQuery)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TToolBarOnUndock)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);

class PACKAGE TToolBar : public Vcl::Oleserver::TOleServer
{
  IToolBarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TToolBar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IToolBarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IToolBarPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Buttons(void);
  void            __fastcall set_Buttons(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Buttons(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Flat(void);
  void            __fastcall set_Flat(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ShowText(void);
  void            __fastcall set_ShowText(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_ButtonWidth(void);
  void            __fastcall set_ButtonWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_ButtonHeight(void);
  void            __fastcall set_ButtonHeight(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSizeButtons(void);
  void            __fastcall set_AutoSizeButtons(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_List(void);
  void            __fastcall set_List(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Wrapable(void);
  void            __fastcall set_Wrapable(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSize(void);
  void            __fastcall set_AutoSize(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Vertical(void);
  void            __fastcall set_Vertical(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_MinButtonWidth(void);
  void            __fastcall set_MinButtonWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MaxButtonWidth(void);
  void            __fastcall set_MaxButtonWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MaxTextRows(void);
  void            __fastcall set_MaxTextRows(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_PaddingX(void);
  void            __fastcall set_PaddingX(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_PaddingY(void);
  void            __fastcall set_PaddingY(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_ButtonSpacingX(void);
  void            __fastcall set_ButtonSpacingX(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_ButtonSpacingY(void);
  void            __fastcall set_ButtonSpacingY(unsigned_long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TToolBarOnClick                FOnClick1;
  TToolBarOnDblClick             FOnDblClick1;
  TToolBarOnChange               FOnChange1;
  TToolBarOnKeyDown              FOnKeyDown1;
  TToolBarOnKeyUp                FOnKeyUp1;
  TToolBarOnMouseEnter           FOnMouseEnter1;
  TToolBarOnMouseLeave           FOnMouseLeave1;
  TToolBarOnMouseDown            FOnMouseDown1;
  TToolBarOnMouseMove            FOnMouseMove1;
  TToolBarOnMouseUp              FOnMouseUp1;
  TToolBarOnResize               FOnResize1;
  TToolBarOnMove                 FOnMove1;
  TToolBarOnDestroy              FOnDestroy1;
  TToolBarOnShow                 FOnShow1;
  TToolBarOnHide                 FOnHide1;
  TToolBarOnEnabledChange        FOnEnabledChange1;
  TToolBarOnSetFocus             FOnSetFocus1;
  TToolBarOnKillFocus            FOnKillFocus1;
  TToolBarOnMouseWheel           FOnMouseWheel1;
  TToolBarOnBeginDock            FOnBeginDock1;
  TToolBarOnDockControlCreate    FOnDockControlCreate1;
  TToolBarOnUndockQuery          FOnUndockQuery1;
  TToolBarOnUndock               FOnUndock1;
__published:
  __property TToolBarOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TToolBarOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TToolBarOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TToolBarOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TToolBarOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TToolBarOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TToolBarOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TToolBarOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TToolBarOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TToolBarOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TToolBarOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TToolBarOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TToolBarOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TToolBarOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TToolBarOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TToolBarOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TToolBarOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TToolBarOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TToolBarOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TToolBarOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TToolBarOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TToolBarOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TToolBarOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TMenuBar
// Help String      : 
// Default Interface: IMenuBar
// Def. Intf. Object: IMenuBarPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TMenuBarOnClick)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnDblClick)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnChange)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnKeyDown)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnKeyUp)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnMouseEnter)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnMouseLeave)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnMouseDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnMouseMove)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnMouseUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnResize)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnMove)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnDestroy)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnShow)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnHide)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnEnabledChange)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnSetFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnKillFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnMouseWheel)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Keys/*[in]*/, long Delta/*[in]*/, 
                                                           long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnBeginDock)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH DockTarget/*[in]*/, 
                                                          LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnDockControlCreate)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  LPDISPATCH Control/*[in]*/, 
                                                                  LPDISPATCH DockTarget/*[in]*/, 
                                                                  LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnUndockQuery)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TMenuBarOnUndock)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);

class PACKAGE TMenuBar : public Vcl::Oleserver::TOleServer
{
  IMenuBarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TMenuBar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IMenuBarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IMenuBarPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Menu(void);
  void            __fastcall set_Menu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Menu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TMenuBarOnClick                FOnClick1;
  TMenuBarOnDblClick             FOnDblClick1;
  TMenuBarOnChange               FOnChange1;
  TMenuBarOnKeyDown              FOnKeyDown1;
  TMenuBarOnKeyUp                FOnKeyUp1;
  TMenuBarOnMouseEnter           FOnMouseEnter1;
  TMenuBarOnMouseLeave           FOnMouseLeave1;
  TMenuBarOnMouseDown            FOnMouseDown1;
  TMenuBarOnMouseMove            FOnMouseMove1;
  TMenuBarOnMouseUp              FOnMouseUp1;
  TMenuBarOnResize               FOnResize1;
  TMenuBarOnMove                 FOnMove1;
  TMenuBarOnDestroy              FOnDestroy1;
  TMenuBarOnShow                 FOnShow1;
  TMenuBarOnHide                 FOnHide1;
  TMenuBarOnEnabledChange        FOnEnabledChange1;
  TMenuBarOnSetFocus             FOnSetFocus1;
  TMenuBarOnKillFocus            FOnKillFocus1;
  TMenuBarOnMouseWheel           FOnMouseWheel1;
  TMenuBarOnBeginDock            FOnBeginDock1;
  TMenuBarOnDockControlCreate    FOnDockControlCreate1;
  TMenuBarOnUndockQuery          FOnUndockQuery1;
  TMenuBarOnUndock               FOnUndock1;
__published:
  __property TMenuBarOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TMenuBarOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TMenuBarOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TMenuBarOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TMenuBarOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TMenuBarOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TMenuBarOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TMenuBarOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TMenuBarOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TMenuBarOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TMenuBarOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TMenuBarOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TMenuBarOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TMenuBarOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TMenuBarOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TMenuBarOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TMenuBarOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TMenuBarOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TMenuBarOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TMenuBarOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TMenuBarOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TMenuBarOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TMenuBarOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TReBarBand
// Help String      : 
// Default Interface: IReBarBand
// Def. Intf. Object: IReBarBandPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TReBarBand : public Vcl::Oleserver::TOleServer
{
  IReBarBandPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TReBarBand(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IReBarBandPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IReBarBandPtr intf);


  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  long            __fastcall get_Color(void);
  void            __fastcall set_Color(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_Image(VARIANT Param1/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentImage(void);
  void            __fastcall set_ParentImage(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_FixedImage(void);
  void            __fastcall set_FixedImage(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_FixedSize(void);
  void            __fastcall set_FixedSize(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Break(void);
  void            __fastcall set_Break(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GripperAlways(void);
  void            __fastcall set_GripperAlways(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Locked(void);
  void            __fastcall set_Locked(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Chevron(void);
  void            __fastcall set_Chevron(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_IdealWidth(void);
  void            __fastcall set_IdealWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_Width(void);
  void            __fastcall set_Width(unsigned_long pVal/*[in]*/);
  void            __fastcall Maximize(void);
  void            __fastcall Minimize(void);
  __property HRESULT Image={ write=set_Image };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TReBar
// Help String      : 
// Default Interface: IReBar
// Def. Intf. Object: IReBarPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TReBarOnClick)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnDblClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TReBarOnChange)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnKeyDown)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TReBarOnKeyUp)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                    long Flags/*[in]*/);
typedef void __fastcall (__closure * TReBarOnMouseEnter)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnMouseLeave)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnMouseDown)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TReBarOnMouseMove)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TReBarOnMouseUp)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                      long y/*[in]*/, long Button/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TReBarOnResize)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnMove)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnDestroy)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnShow)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnHide)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnEnabledChange)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnSetFocus)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnKillFocus)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TReBarOnMouseWheel)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         long Keys/*[in]*/, long Delta/*[in]*/, 
                                                         long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TReBarOnBeginDock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, 
                                                        LPDISPATCH DockTarget/*[in]*/, 
                                                        LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TReBarOnDockControlCreate)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                LPDISPATCH Control/*[in]*/, 
                                                                LPDISPATCH DockTarget/*[in]*/, 
                                                                LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TReBarOnUndockQuery)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TReBarOnUndock)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);

class PACKAGE TReBar : public Vcl::Oleserver::TOleServer
{
  IReBarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TReBar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IReBarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IReBarPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  unsigned_long   __fastcall get_BorderWidth(void);
  void            __fastcall set_BorderWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_BevelWidth(void);
  void            __fastcall set_BevelWidth(unsigned_long pVal/*[in]*/);
  long            __fastcall get_BevelOuter(void);
  void            __fastcall set_BevelOuter(long pVal/*[in]*/);
  long            __fastcall get_BevelInner(void);
  void            __fastcall set_BevelInner(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_GraphFont(void);
  void            __fastcall set_GraphFont(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_GraphFont(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  void            __fastcall set_AutoScroll(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  void            __fastcall set_Tracking(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_CaptureMouse(void);
  void            __fastcall set_CaptureMouse(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentBackground(void);
  void            __fastcall set_ParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BorderParentBackground(void);
  void            __fastcall set_BorderParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSplit(void);
  void            __fastcall set_AutoSplit(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GroupBox(void);
  void            __fastcall set_GroupBox(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Margin(void);
  void            __fastcall set_Margin(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginLeft(void);
  void            __fastcall set_MarginLeft(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginTop(void);
  void            __fastcall set_MarginTop(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginRight(void);
  void            __fastcall set_MarginRight(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginBottom(void);
  void            __fastcall set_MarginBottom(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Locked(void);
  void            __fastcall set_Locked(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_InsertNewRow(void);
  void            __fastcall set_InsertNewRow(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Band(LPDISPATCH Control/*[in]*/);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall set_Image(VARIANT Param1/*[in]*/);
  VARIANT_BOOL    __fastcall get_FixedOrder(void);
  void            __fastcall set_FixedOrder(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_VarHeight(void);
  void            __fastcall set_VarHeight(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BandBorders(void);
  void            __fastcall set_BandBorders(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Vertical(void);
  void            __fastcall set_Vertical(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DblClkToggle(void);
  void            __fastcall set_DblClkToggle(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_VerticalGripper(void);
  void            __fastcall set_VerticalGripper(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoLayout(void);
  void            __fastcall set_AutoLayout(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_RowCount(void);
  long            __fastcall get_RowHeight(long Index/*[in]*/);
  long            __fastcall get_BandCount(void);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCheckBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            BSTR Text/*[in,def,opt]*/, 
                                            VARIANT_BOOL Checked/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRadioButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateComboBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFrame(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateGroupBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateProgressBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTabControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateToolBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMenuBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateStatusBar(void);
  LPDISPATCH      __fastcall CreateHyperLink(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             BSTR Url/*[in,def,opt]*/, BSTR Label/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePager(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateScrollBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateActiveXControl(long Left/*[in]*/, long Top/*[in]*/, 
                                                  long Width/*[in]*/, long Height/*[in]*/, 
                                                  BSTR ID/*[in]*/);
  LPDISPATCH      __fastcall CreateActiveXControlLicensed(long Left/*[in]*/, long Top/*[in]*/, 
                                                          long Width/*[in]*/, long Height/*[in]*/, 
                                                          BSTR ID/*[in]*/, BSTR LicKey/*[in]*/);
  LPDISPATCH      __fastcall CreateHeader(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTreeView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRichEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/, long Version/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAnimate(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateHotKey(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrackBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateUpDown(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDateTimePicker(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/, 
                                                  long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCalendar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateIPAddress(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateSplitter(unsigned_short Align/*[in]*/);
  LPDISPATCH      __fastcall CreateSplitPanel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              VARIANT_BOOL Vertical/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateResourceUsageGraph(long Left/*[in,def,opt]*/, 
                                                      long Top/*[in,def,opt]*/, 
                                                      long Width/*[in,def,opt]*/, 
                                                      long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePropertyGrid(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                                long Width/*[in,def,opt]*/, 
                                                long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateLabel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePageControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAutoSplitFrame(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Line(long Ax/*[in]*/, long Ay/*[in]*/, long Bx/*[in]*/, long By/*[in]*/);
  LPDISPATCH      __fastcall Rectangle(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/);
  LPDISPATCH      __fastcall RoundRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, long nWidth/*[in]*/, 
                                       long nHeight/*[in]*/);
  LPDISPATCH      __fastcall Circle(long x/*[in]*/, long y/*[in]*/, long r/*[in]*/);
  LPDISPATCH      __fastcall Ellipse(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                     long Height/*[in]*/);
  LPDISPATCH      __fastcall Arc(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXStartArc/*[in]*/, 
                                 long nYStartArc/*[in]*/, long nXEndArc/*[in]*/, 
                                 long nYEndArc/*[in]*/);
  LPDISPATCH      __fastcall Chord(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long nXRadial1/*[in]*/, 
                                   long nYRadial1/*[in]*/, long nXRadial2/*[in]*/, 
                                   long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Pie(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXRadial1/*[in]*/, long nYRadial1/*[in]*/, 
                                 long nXRadial2/*[in]*/, long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Polygon(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall TextOut(long x/*[in]*/, long y/*[in]*/, BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall TextRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                      long Height/*[in]*/, BSTR Text/*[in]*/, 
                                      unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall DrawImage(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, VARIANT Image/*[in]*/);
  LPDISPATCH      __fastcall DrawRegion(long Left/*[in]*/, long Top/*[in]*/, 
                                        unsigned_long Region/*[in]*/);
  LPDISPATCH      __fastcall Bevel(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long BevelOuter/*[in,def,opt]*/, 
                                   long BevelInner/*[in,def,opt]*/, 
                                   unsigned_long BorderWidth/*[in,def,opt]*/, 
                                   unsigned_long BevelWidth/*[in,def,opt]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  LPDISPATCH      __fastcall Get(BSTR Name/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
  __property LPDISPATCH Band[LPDISPATCH Control]={ read=get_Band };
  __property HRESULT Image={ write=set_Image };
  __property long RowCount={ read=get_RowCount };
  __property long RowHeight[long Index]={ read=get_RowHeight };
  __property long BandCount={ read=get_BandCount };
private:
  TReBarOnClick                  FOnClick1;
  TReBarOnDblClick               FOnDblClick1;
  TReBarOnChange                 FOnChange1;
  TReBarOnKeyDown                FOnKeyDown1;
  TReBarOnKeyUp                  FOnKeyUp1;
  TReBarOnMouseEnter             FOnMouseEnter1;
  TReBarOnMouseLeave             FOnMouseLeave1;
  TReBarOnMouseDown              FOnMouseDown1;
  TReBarOnMouseMove              FOnMouseMove1;
  TReBarOnMouseUp                FOnMouseUp1;
  TReBarOnResize                 FOnResize1;
  TReBarOnMove                   FOnMove1;
  TReBarOnDestroy                FOnDestroy1;
  TReBarOnShow                   FOnShow1;
  TReBarOnHide                   FOnHide1;
  TReBarOnEnabledChange          FOnEnabledChange1;
  TReBarOnSetFocus               FOnSetFocus1;
  TReBarOnKillFocus              FOnKillFocus1;
  TReBarOnMouseWheel             FOnMouseWheel1;
  TReBarOnBeginDock              FOnBeginDock1;
  TReBarOnDockControlCreate      FOnDockControlCreate1;
  TReBarOnUndockQuery            FOnUndockQuery1;
  TReBarOnUndock                 FOnUndock1;
__published:
  __property TReBarOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TReBarOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TReBarOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TReBarOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TReBarOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TReBarOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TReBarOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TReBarOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TReBarOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TReBarOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TReBarOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TReBarOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TReBarOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TReBarOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TReBarOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TReBarOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TReBarOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TReBarOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TReBarOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TReBarOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TReBarOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TReBarOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TReBarOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : THyperLink
// Help String      : 
// Default Interface: IHyperLink
// Def. Intf. Object: IHyperLinkPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * THyperLinkOnClick)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnDblClick)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnChange)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnKeyDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnKeyUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnMouseEnter)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnMouseLeave)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnMouseDown)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnMouseMove)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Flags/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnMouseUp)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnResize)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnMove)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnDestroy)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnShow)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnHide)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnEnabledChange)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnSetFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnKillFocus)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnMouseWheel)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Keys/*[in]*/, long Delta/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnBeginDock)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH DockTarget/*[in]*/, 
                                                            LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnDockControlCreate)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    LPDISPATCH Control/*[in]*/, 
                                                                    LPDISPATCH DockTarget/*[in]*/, 
                                                                    LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnUndockQuery)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * THyperLinkOnUndock)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);

class PACKAGE THyperLink : public Vcl::Oleserver::TOleServer
{
  IHyperLinkPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall THyperLink(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IHyperLinkPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IHyperLinkPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Url(void);
  void            __fastcall set_Url(BSTR pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  THyperLinkOnClick              FOnClick1;
  THyperLinkOnDblClick           FOnDblClick1;
  THyperLinkOnChange             FOnChange1;
  THyperLinkOnKeyDown            FOnKeyDown1;
  THyperLinkOnKeyUp              FOnKeyUp1;
  THyperLinkOnMouseEnter         FOnMouseEnter1;
  THyperLinkOnMouseLeave         FOnMouseLeave1;
  THyperLinkOnMouseDown          FOnMouseDown1;
  THyperLinkOnMouseMove          FOnMouseMove1;
  THyperLinkOnMouseUp            FOnMouseUp1;
  THyperLinkOnResize             FOnResize1;
  THyperLinkOnMove               FOnMove1;
  THyperLinkOnDestroy            FOnDestroy1;
  THyperLinkOnShow               FOnShow1;
  THyperLinkOnHide               FOnHide1;
  THyperLinkOnEnabledChange      FOnEnabledChange1;
  THyperLinkOnSetFocus           FOnSetFocus1;
  THyperLinkOnKillFocus          FOnKillFocus1;
  THyperLinkOnMouseWheel         FOnMouseWheel1;
  THyperLinkOnBeginDock          FOnBeginDock1;
  THyperLinkOnDockControlCreate  FOnDockControlCreate1;
  THyperLinkOnUndockQuery        FOnUndockQuery1;
  THyperLinkOnUndock             FOnUndock1;
__published:
  __property THyperLinkOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property THyperLinkOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property THyperLinkOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property THyperLinkOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property THyperLinkOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property THyperLinkOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property THyperLinkOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property THyperLinkOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property THyperLinkOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property THyperLinkOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property THyperLinkOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property THyperLinkOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property THyperLinkOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property THyperLinkOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property THyperLinkOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property THyperLinkOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property THyperLinkOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property THyperLinkOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property THyperLinkOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property THyperLinkOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property THyperLinkOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property THyperLinkOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property THyperLinkOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPager
// Help String      : 
// Default Interface: IPager
// Def. Intf. Object: IPagerPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TPagerOnClick)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnDblClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TPagerOnChange)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnKeyDown)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TPagerOnKeyUp)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                    long Flags/*[in]*/);
typedef void __fastcall (__closure * TPagerOnMouseEnter)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnMouseLeave)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnMouseDown)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TPagerOnMouseMove)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPagerOnMouseUp)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                      long y/*[in]*/, long Button/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TPagerOnResize)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnMove)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnDestroy)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnShow)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnHide)(System::TObject * Sender, 
                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnEnabledChange)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnSetFocus)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnKillFocus)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPagerOnMouseWheel)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         long Keys/*[in]*/, long Delta/*[in]*/, 
                                                         long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TPagerOnBeginDock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, 
                                                        LPDISPATCH DockTarget/*[in]*/, 
                                                        LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TPagerOnDockControlCreate)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                LPDISPATCH Control/*[in]*/, 
                                                                LPDISPATCH DockTarget/*[in]*/, 
                                                                LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TPagerOnUndockQuery)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TPagerOnUndock)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);

class PACKAGE TPager : public Vcl::Oleserver::TOleServer
{
  IPagerPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPager(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPagerPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPagerPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  unsigned_long   __fastcall get_BorderWidth(void);
  void            __fastcall set_BorderWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_BevelWidth(void);
  void            __fastcall set_BevelWidth(unsigned_long pVal/*[in]*/);
  long            __fastcall get_BevelOuter(void);
  void            __fastcall set_BevelOuter(long pVal/*[in]*/);
  long            __fastcall get_BevelInner(void);
  void            __fastcall set_BevelInner(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_GraphFont(void);
  void            __fastcall set_GraphFont(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_GraphFont(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  void            __fastcall set_AutoScroll(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  void            __fastcall set_Tracking(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_CaptureMouse(void);
  void            __fastcall set_CaptureMouse(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentBackground(void);
  void            __fastcall set_ParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BorderParentBackground(void);
  void            __fastcall set_BorderParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSplit(void);
  void            __fastcall set_AutoSplit(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GroupBox(void);
  void            __fastcall set_GroupBox(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Margin(void);
  void            __fastcall set_Margin(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginLeft(void);
  void            __fastcall set_MarginLeft(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginTop(void);
  void            __fastcall set_MarginTop(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginRight(void);
  void            __fastcall set_MarginRight(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginBottom(void);
  void            __fastcall set_MarginBottom(unsigned_long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Control(void);
  void            __fastcall set_Control(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Control(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Vertical(void);
  void            __fastcall set_Vertical(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_ButtonSize(void);
  void            __fastcall set_ButtonSize(unsigned_long pVal/*[in]*/);
  long            __fastcall get_Position(void);
  void            __fastcall set_Position(long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCheckBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            BSTR Text/*[in,def,opt]*/, 
                                            VARIANT_BOOL Checked/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRadioButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateComboBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFrame(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateGroupBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateProgressBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTabControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateToolBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMenuBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateStatusBar(void);
  LPDISPATCH      __fastcall CreateHyperLink(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             BSTR Url/*[in,def,opt]*/, BSTR Label/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePager(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateScrollBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateActiveXControl(long Left/*[in]*/, long Top/*[in]*/, 
                                                  long Width/*[in]*/, long Height/*[in]*/, 
                                                  BSTR ID/*[in]*/);
  LPDISPATCH      __fastcall CreateActiveXControlLicensed(long Left/*[in]*/, long Top/*[in]*/, 
                                                          long Width/*[in]*/, long Height/*[in]*/, 
                                                          BSTR ID/*[in]*/, BSTR LicKey/*[in]*/);
  LPDISPATCH      __fastcall CreateHeader(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTreeView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRichEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/, long Version/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAnimate(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateHotKey(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrackBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateUpDown(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDateTimePicker(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/, 
                                                  long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCalendar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateIPAddress(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateSplitter(unsigned_short Align/*[in]*/);
  LPDISPATCH      __fastcall CreateSplitPanel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              VARIANT_BOOL Vertical/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateResourceUsageGraph(long Left/*[in,def,opt]*/, 
                                                      long Top/*[in,def,opt]*/, 
                                                      long Width/*[in,def,opt]*/, 
                                                      long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePropertyGrid(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                                long Width/*[in,def,opt]*/, 
                                                long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateLabel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePageControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAutoSplitFrame(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Line(long Ax/*[in]*/, long Ay/*[in]*/, long Bx/*[in]*/, long By/*[in]*/);
  LPDISPATCH      __fastcall Rectangle(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/);
  LPDISPATCH      __fastcall RoundRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, long nWidth/*[in]*/, 
                                       long nHeight/*[in]*/);
  LPDISPATCH      __fastcall Circle(long x/*[in]*/, long y/*[in]*/, long r/*[in]*/);
  LPDISPATCH      __fastcall Ellipse(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                     long Height/*[in]*/);
  LPDISPATCH      __fastcall Arc(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXStartArc/*[in]*/, 
                                 long nYStartArc/*[in]*/, long nXEndArc/*[in]*/, 
                                 long nYEndArc/*[in]*/);
  LPDISPATCH      __fastcall Chord(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long nXRadial1/*[in]*/, 
                                   long nYRadial1/*[in]*/, long nXRadial2/*[in]*/, 
                                   long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Pie(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXRadial1/*[in]*/, long nYRadial1/*[in]*/, 
                                 long nXRadial2/*[in]*/, long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Polygon(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall TextOut(long x/*[in]*/, long y/*[in]*/, BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall TextRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                      long Height/*[in]*/, BSTR Text/*[in]*/, 
                                      unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall DrawImage(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, VARIANT Image/*[in]*/);
  LPDISPATCH      __fastcall DrawRegion(long Left/*[in]*/, long Top/*[in]*/, 
                                        unsigned_long Region/*[in]*/);
  LPDISPATCH      __fastcall Bevel(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long BevelOuter/*[in,def,opt]*/, 
                                   long BevelInner/*[in,def,opt]*/, 
                                   unsigned_long BorderWidth/*[in,def,opt]*/, 
                                   unsigned_long BevelWidth/*[in,def,opt]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  LPDISPATCH      __fastcall Get(BSTR Name/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
private:
  TPagerOnClick                  FOnClick1;
  TPagerOnDblClick               FOnDblClick1;
  TPagerOnChange                 FOnChange1;
  TPagerOnKeyDown                FOnKeyDown1;
  TPagerOnKeyUp                  FOnKeyUp1;
  TPagerOnMouseEnter             FOnMouseEnter1;
  TPagerOnMouseLeave             FOnMouseLeave1;
  TPagerOnMouseDown              FOnMouseDown1;
  TPagerOnMouseMove              FOnMouseMove1;
  TPagerOnMouseUp                FOnMouseUp1;
  TPagerOnResize                 FOnResize1;
  TPagerOnMove                   FOnMove1;
  TPagerOnDestroy                FOnDestroy1;
  TPagerOnShow                   FOnShow1;
  TPagerOnHide                   FOnHide1;
  TPagerOnEnabledChange          FOnEnabledChange1;
  TPagerOnSetFocus               FOnSetFocus1;
  TPagerOnKillFocus              FOnKillFocus1;
  TPagerOnMouseWheel             FOnMouseWheel1;
  TPagerOnBeginDock              FOnBeginDock1;
  TPagerOnDockControlCreate      FOnDockControlCreate1;
  TPagerOnUndockQuery            FOnUndockQuery1;
  TPagerOnUndock                 FOnUndock1;
__published:
  __property TPagerOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TPagerOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TPagerOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TPagerOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TPagerOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TPagerOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TPagerOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TPagerOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TPagerOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TPagerOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TPagerOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TPagerOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TPagerOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TPagerOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TPagerOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TPagerOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TPagerOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TPagerOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TPagerOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TPagerOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TPagerOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TPagerOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TPagerOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCOMConnectionPoint
// Help String      : 
// Default Interface: ICOMConnectionPoint
// Def. Intf. Object: ICOMConnectionPointPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TCOMConnectionPoint : public Vcl::Oleserver::TOleServer
{
  ICOMConnectionPointPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCOMConnectionPoint(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ICOMConnectionPointPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ICOMConnectionPointPtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  BSTR            __fastcall get_Name(void);
  BSTR            __fastcall get_Text(void);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property BSTR ID={ read=get_ID };
  __property BSTR Name={ read=get_Name };
  __property BSTR Text={ read=get_Text };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCOMEvents
// Help String      : 
// Default Interface: ICOMEvents
// Def. Intf. Object: ICOMEventsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TCOMEvents : public Vcl::Oleserver::TOleServer
{
  ICOMEventsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCOMEvents(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ICOMEventsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ICOMEventsPtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(VARIANT Index/*[in]*/);
  long            __fastcall get_Count(void);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[VARIANT Index]={ read=get_Item };
  __property long Count={ read=get_Count };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TActiveXControl
// Help String      : 
// Default Interface: IActiveXControl
// Def. Intf. Object: IActiveXControlPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TActiveXControlOnClick)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnDblClick)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                long x/*[in]*/, long y/*[in]*/, 
                                                                long Button/*[in]*/, 
                                                                long Flags/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnChange)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnKeyDown)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnKeyUp)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnMouseEnter)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnMouseLeave)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnMouseDown)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 long x/*[in]*/, long y/*[in]*/, 
                                                                 long Button/*[in]*/, 
                                                                 long Flags/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnMouseMove)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 long x/*[in]*/, long y/*[in]*/, 
                                                                 long Flags/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnMouseUp)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/, 
                                                               long Button/*[in]*/, 
                                                               long Flags/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnResize)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnMove)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnDestroy)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnShow)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnHide)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnEnabledChange)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnSetFocus)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnKillFocus)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnMouseWheel)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  long Keys/*[in]*/, 
                                                                  long Delta/*[in]*/, long x/*[in]*/, 
                                                                  long y/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnBeginDock)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH DockTarget/*[in]*/, 
                                                                 LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnDockControlCreate)(System::TObject * Sender, 
                                                                         LPDISPATCH Sender/*[in]*/, 
                                                                         LPDISPATCH Control/*[in]*/, 
                                                                         LPDISPATCH DockTarget/*[in]*/, 
                                                                         LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnUndockQuery)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TActiveXControlOnUndock)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);

class PACKAGE TActiveXControl : public Vcl::Oleserver::TOleServer
{
  IActiveXControlPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TActiveXControl(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IActiveXControlPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IActiveXControlPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Control(void);
  LPDISPATCH      __fastcall get_Events(void);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Control={ read=get_Control };
  __property LPDISPATCH Events={ read=get_Events };
private:
  TActiveXControlOnClick         FOnClick1;
  TActiveXControlOnDblClick      FOnDblClick1;
  TActiveXControlOnChange        FOnChange1;
  TActiveXControlOnKeyDown       FOnKeyDown1;
  TActiveXControlOnKeyUp         FOnKeyUp1;
  TActiveXControlOnMouseEnter    FOnMouseEnter1;
  TActiveXControlOnMouseLeave    FOnMouseLeave1;
  TActiveXControlOnMouseDown     FOnMouseDown1;
  TActiveXControlOnMouseMove     FOnMouseMove1;
  TActiveXControlOnMouseUp       FOnMouseUp1;
  TActiveXControlOnResize        FOnResize1;
  TActiveXControlOnMove          FOnMove1;
  TActiveXControlOnDestroy       FOnDestroy1;
  TActiveXControlOnShow          FOnShow1;
  TActiveXControlOnHide          FOnHide1;
  TActiveXControlOnEnabledChange FOnEnabledChange1;
  TActiveXControlOnSetFocus      FOnSetFocus1;
  TActiveXControlOnKillFocus     FOnKillFocus1;
  TActiveXControlOnMouseWheel    FOnMouseWheel1;
  TActiveXControlOnBeginDock     FOnBeginDock1;
  TActiveXControlOnDockControlCreate FOnDockControlCreate1;
  TActiveXControlOnUndockQuery   FOnUndockQuery1;
  TActiveXControlOnUndock        FOnUndock1;
__published:
  __property TActiveXControlOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TActiveXControlOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TActiveXControlOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TActiveXControlOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TActiveXControlOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TActiveXControlOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TActiveXControlOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TActiveXControlOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TActiveXControlOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TActiveXControlOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TActiveXControlOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TActiveXControlOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TActiveXControlOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TActiveXControlOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TActiveXControlOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TActiveXControlOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TActiveXControlOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TActiveXControlOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TActiveXControlOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TActiveXControlOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TActiveXControlOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TActiveXControlOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TActiveXControlOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : THeaderItem
// Help String      : 
// Default Interface: IHeaderItem
// Def. Intf. Object: IHeaderItemPtr
// Def. Intf. DISP? : No
// Event   Interface: IHeaderItemEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * THeaderItemOnClick)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderItemOnResize)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderItemOnBeginTrack)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long Button/*[in]*/, 
                                                              LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * THeaderItemOnTrack)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         long Width/*[in]*/, long Button/*[in]*/, 
                                                         LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * THeaderItemOnDividerDblClick)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * THeaderItemOnBeginDrag)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Button/*[in]*/, 
                                                             LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * THeaderItemOnEndDrag)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Button/*[in]*/, 
                                                           LPDISPATCH ResultPtr/*[in]*/);

class PACKAGE THeaderItem : public Vcl::Oleserver::TOleServer
{
  IHeaderItemPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall THeaderItem(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IHeaderItemPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IHeaderItemPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_TextAlign(void);
  void            __fastcall set_TextAlign(long pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  long            __fastcall get_DataType(void);
  void            __fastcall set_DataType(long pVal/*[in]*/);
  long            __fastcall get_SortType(void);
  void            __fastcall set_SortType(long pVal/*[in]*/);
  long            __fastcall get_Index(void);
  LPDISPATCH      __fastcall get_Owner(void);
  long            __fastcall get_Order(void);
  void            __fastcall set_Order(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginTrack(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnTrack(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDividerDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDrag(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEndDrag(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property long Index={ read=get_Index };
  __property LPDISPATCH Owner={ read=get_Owner };
  __property LPDISPATCH Design={ read=get_Design };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnBeginTrack={ write=set_OnBeginTrack };
  __property HRESULT OnTrack={ write=set_OnTrack };
  __property HRESULT OnDividerDblClick={ write=set_OnDividerDblClick };
  __property HRESULT OnBeginDrag={ write=set_OnBeginDrag };
  __property HRESULT OnEndDrag={ write=set_OnEndDrag };
private:
  THeaderItemOnClick             FOnClick1;
  THeaderItemOnResize            FOnResize1;
  THeaderItemOnBeginTrack        FOnBeginTrack1;
  THeaderItemOnTrack             FOnTrack1;
  THeaderItemOnDividerDblClick   FOnDividerDblClick1;
  THeaderItemOnBeginDrag         FOnBeginDrag1;
  THeaderItemOnEndDrag           FOnEndDrag1;
__published:
  __property THeaderItemOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property THeaderItemOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property THeaderItemOnBeginTrack OnBeginTrack1={ read=FOnBeginTrack1, write=FOnBeginTrack1 };
  __property THeaderItemOnTrack OnTrack1={ read=FOnTrack1, write=FOnTrack1 };
  __property THeaderItemOnDividerDblClick OnDividerDblClick1={ read=FOnDividerDblClick1, write=FOnDividerDblClick1 };
  __property THeaderItemOnBeginDrag OnBeginDrag1={ read=FOnBeginDrag1, write=FOnBeginDrag1 };
  __property THeaderItemOnEndDrag OnEndDrag1={ read=FOnEndDrag1, write=FOnEndDrag1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : THeader
// Help String      : 
// Default Interface: IHeader
// Def. Intf. Object: IHeaderPtr
// Def. Intf. DISP? : No
// Event   Interface: IHeaderEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * THeaderOnClick)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnDblClick)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * THeaderOnChange)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnKeyDown)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * THeaderOnKeyUp)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * THeaderOnMouseEnter)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnMouseLeave)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnMouseDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * THeaderOnMouseMove)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * THeaderOnMouseUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * THeaderOnResize)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnMove)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnDestroy)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnShow)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnHide)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnEnabledChange)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnSetFocus)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnKillFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnMouseWheel)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Keys/*[in]*/, long Delta/*[in]*/, 
                                                          long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * THeaderOnBeginDock)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         LPDISPATCH DockTarget/*[in]*/, 
                                                         LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * THeaderOnDockControlCreate)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH Control/*[in]*/, 
                                                                 LPDISPATCH DockTarget/*[in]*/, 
                                                                 LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * THeaderOnUndockQuery)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * THeaderOnUndock)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THeaderOnColumnClick)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * THeaderOnColumnResize)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH Item/*[in]*/);

class PACKAGE THeader : public Vcl::Oleserver::TOleServer
{
  IHeaderPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall THeader(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IHeaderPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IHeaderPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HotTrack(void);
  void            __fastcall set_HotTrack(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Flat(void);
  void            __fastcall set_Flat(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DragDrop(void);
  void            __fastcall set_DragDrop(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_OnColumnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnColumnResize(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  LPDISPATCH      __fastcall Add(BSTR Text/*[in]*/, long Width/*[in,def,opt]*/, 
                                 long TextAlign/*[in,def,opt]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
  __property HRESULT OnColumnClick={ write=set_OnColumnClick };
  __property HRESULT OnColumnResize={ write=set_OnColumnResize };
private:
  THeaderOnClick                 FOnClick1;
  THeaderOnDblClick              FOnDblClick1;
  THeaderOnChange                FOnChange1;
  THeaderOnKeyDown               FOnKeyDown1;
  THeaderOnKeyUp                 FOnKeyUp1;
  THeaderOnMouseEnter            FOnMouseEnter1;
  THeaderOnMouseLeave            FOnMouseLeave1;
  THeaderOnMouseDown             FOnMouseDown1;
  THeaderOnMouseMove             FOnMouseMove1;
  THeaderOnMouseUp               FOnMouseUp1;
  THeaderOnResize                FOnResize1;
  THeaderOnMove                  FOnMove1;
  THeaderOnDestroy               FOnDestroy1;
  THeaderOnShow                  FOnShow1;
  THeaderOnHide                  FOnHide1;
  THeaderOnEnabledChange         FOnEnabledChange1;
  THeaderOnSetFocus              FOnSetFocus1;
  THeaderOnKillFocus             FOnKillFocus1;
  THeaderOnMouseWheel            FOnMouseWheel1;
  THeaderOnBeginDock             FOnBeginDock1;
  THeaderOnDockControlCreate     FOnDockControlCreate1;
  THeaderOnUndockQuery           FOnUndockQuery1;
  THeaderOnUndock                FOnUndock1;
  THeaderOnColumnClick           FOnColumnClick1;
  THeaderOnColumnResize          FOnColumnResize1;
__published:
  __property THeaderOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property THeaderOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property THeaderOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property THeaderOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property THeaderOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property THeaderOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property THeaderOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property THeaderOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property THeaderOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property THeaderOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property THeaderOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property THeaderOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property THeaderOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property THeaderOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property THeaderOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property THeaderOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property THeaderOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property THeaderOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property THeaderOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property THeaderOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property THeaderOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property THeaderOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property THeaderOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
  __property THeaderOnColumnClick OnColumnClick1={ read=FOnColumnClick1, write=FOnColumnClick1 };
  __property THeaderOnColumnResize OnColumnResize1={ read=FOnColumnResize1, write=FOnColumnResize1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TListSubItem
// Help String      : 
// Default Interface: IListSubItem
// Def. Intf. Object: IListSubItemPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TListSubItem : public Vcl::Oleserver::TOleServer
{
  IListSubItemPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TListSubItem(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IListSubItemPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IListSubItemPtr intf);


  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Design(void);
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Design={ read=get_Design };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TListItem
// Help String      : 
// Default Interface: IListItem
// Def. Intf. Object: IListItemPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TListItem : public Vcl::Oleserver::TOleServer
{
  IListItemPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TListItem(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IListItemPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IListItemPtr intf);


  BSTR            __fastcall get_Type(void);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Selected(void);
  void            __fastcall set_Selected(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Checked(void);
  void            __fastcall set_Checked(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_SubItems(long Index/*[in]*/);
  void            __fastcall set_SubItems(long Index/*[in]*/, BSTR pVal/*[in]*/);
  long            __fastcall get_SubItemImage(long Index/*[in]*/);
  void            __fastcall set_SubItemImage(long Index/*[in]*/, long pVal/*[in]*/);
  long            __fastcall get_Index(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Hint(void);
  void            __fastcall set_Hint(BSTR pVal/*[in]*/);
  unsigned_long   __fastcall get_Group(void);
  void            __fastcall set_Group(unsigned_long pVal/*[in]*/);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  unsigned_long   __fastcall get_TextBkColor(void);
  void            __fastcall set_TextBkColor(unsigned_long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_SubItemsEx(long Index/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  void            __fastcall SetPosition(unsigned_long Left/*[in]*/, unsigned_long Top/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property long Index={ read=get_Index };
  __property LPDISPATCH SubItemsEx[long Index]={ read=get_SubItemsEx };
  __property LPDISPATCH Design={ read=get_Design };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TListViewColumns
// Help String      : 
// Default Interface: IListViewColumns
// Def. Intf. Object: IListViewColumnsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TListViewColumns : public Vcl::Oleserver::TOleServer
{
  IListViewColumnsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TListViewColumns(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IListViewColumnsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IListViewColumnsPtr intf);


  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Flat(void);
  void            __fastcall set_Flat(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  LPDISPATCH      __fastcall Add(BSTR Text/*[in]*/, long Width/*[in,def,opt]*/, 
                                 long TextAlign/*[in,def,opt]*/);
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWorkArea
// Help String      : 
// Default Interface: IWorkArea
// Def. Intf. Object: IWorkAreaPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TWorkArea : public Vcl::Oleserver::TOleServer
{
  IWorkAreaPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWorkArea(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IWorkAreaPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IWorkAreaPtr intf);


  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWorkAreas
// Help String      : 
// Default Interface: IWorkAreas
// Def. Intf. Object: IWorkAreasPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TWorkAreas : public Vcl::Oleserver::TOleServer
{
  IWorkAreasPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWorkAreas(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IWorkAreasPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IWorkAreasPtr intf);


  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  LPDISPATCH      __fastcall Add(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/);
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TListViewGroup
// Help String      : 
// Default Interface: IListViewGroup
// Def. Intf. Object: IListViewGroupPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TListViewGroup : public Vcl::Oleserver::TOleServer
{
  IListViewGroupPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TListViewGroup(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IListViewGroupPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IListViewGroupPtr intf);


  BSTR            __fastcall get_Header(void);
  void            __fastcall set_Header(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_SubTitle(void);
  void            __fastcall set_SubTitle(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_Task(void);
  void            __fastcall set_Task(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_DescriptionTop(void);
  void            __fastcall set_DescriptionTop(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_DescriptionBottom(void);
  void            __fastcall set_DescriptionBottom(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_SubsetTitle(void);
  void            __fastcall set_SubsetTitle(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Subseted(void);
  void            __fastcall set_Subseted(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_NoHeader(void);
  void            __fastcall set_NoHeader(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Expanded(void);
  void            __fastcall set_Expanded(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Collapsible(void);
  void            __fastcall set_Collapsible(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_HeaderAlign(void);
  void            __fastcall set_HeaderAlign(long pVal/*[in]*/);
  long            __fastcall get_TitleImage(void);
  void            __fastcall set_TitleImage(long pVal/*[in]*/);
  long            __fastcall get_ExtendedImage(void);
  void            __fastcall set_ExtendedImage(long pVal/*[in]*/);
  BSTR            __fastcall get_Footer(void);
  void            __fastcall set_Footer(BSTR pVal/*[in]*/);
  long            __fastcall get_FooterAlign(void);
  void            __fastcall set_FooterAlign(long pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TListViewGroups
// Help String      : 
// Default Interface: IListViewGroups
// Def. Intf. Object: IListViewGroupsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TListViewGroups : public Vcl::Oleserver::TOleServer
{
  IListViewGroupsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TListViewGroups(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IListViewGroupsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IListViewGroupsPtr intf);


  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  LPDISPATCH      __fastcall Add(BSTR Name/*[in]*/);
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TListView
// Help String      : 
// Default Interface: IListView
// Def. Intf. Object: IListViewPtr
// Def. Intf. DISP? : No
// Event   Interface: IListViewEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TListViewOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TListViewOnChange)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnKeyDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TListViewOnKeyUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TListViewOnMouseEnter)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnMouseLeave)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TListViewOnMouseMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TListViewOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TListViewOnResize)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnDestroy)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnShow)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnHide)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnEnabledChange)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnSetFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnKillFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnMouseWheel)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Keys/*[in]*/, long Delta/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TListViewOnBeginDock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH DockTarget/*[in]*/, 
                                                           LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TListViewOnDockControlCreate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH Control/*[in]*/, 
                                                                   LPDISPATCH DockTarget/*[in]*/, 
                                                                   LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TListViewOnUndockQuery)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TListViewOnUndock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TListViewOnColumnClick)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TListViewOnColumnResize)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TListViewOnData)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, 
                                                      LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TListViewOnItemCheck)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TListViewOnEdited)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, 
                                                        LPDISPATCH Item/*[in]*/, 
                                                        Wsolib_tlb::IResult* NewText/*[in]*/);
typedef void __fastcall (__closure * TListViewOnBeginEdit)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH Item/*[in]*/, 
                                                           Wsolib_tlb::IResult* ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TListViewOnGroupLinkClick)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                LPDISPATCH Group/*[in]*/);
typedef void __fastcall (__closure * TListViewOnDrawItem)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TListViewOnSubItemEdited)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               LPDISPATCH Item/*[in]*/, 
                                                               long SubItem/*[in]*/, 
                                                               Wsolib_tlb::IResult* NewText/*[in]*/);
typedef void __fastcall (__closure * TListViewOnBeginSubItemEdit)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  LPDISPATCH Item/*[in]*/, 
                                                                  long SubItem/*[in]*/, 
                                                                  Wsolib_tlb::IResult* ResultPtr/*[in]*/);

class PACKAGE TListView : public Vcl::Oleserver::TOleServer
{
  IListViewPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TListView(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IListViewPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IListViewPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  void            __fastcall set_Count(long pcount/*[in]*/);
  LPDISPATCH      __fastcall get_LargeImages(void);
  void            __fastcall set_LargeImages(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_LargeImages(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_SmallImages(void);
  void            __fastcall set_SmallImages(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_SmallImages(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_StateImages(void);
  void            __fastcall set_StateImages(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_StateImages(LPDISPATCH pVal/*[in]*/);
  long            __fastcall get_Style(void);
  void            __fastcall set_Style(long pVal/*[in]*/);
  unsigned_long   __fastcall get_TextBkColor(void);
  void            __fastcall set_TextBkColor(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_MultiSelect(void);
  void            __fastcall set_MultiSelect(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HideSelection(void);
  void            __fastcall set_HideSelection(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_SelCount(void);
  long            __fastcall get_ItemIndex(void);
  void            __fastcall set_ItemIndex(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Columns(void);
  VARIANT_BOOL    __fastcall get_CheckBoxes(void);
  void            __fastcall set_CheckBoxes(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GridLines(void);
  void            __fastcall set_GridLines(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HotTrack(void);
  void            __fastcall set_HotTrack(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_RowSelect(void);
  void            __fastcall set_RowSelect(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BorderSelect(void);
  void            __fastcall set_BorderSelect(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_FlatScrollBars(void);
  void            __fastcall set_FlatScrollBars(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_OwnerData(void);
  void            __fastcall set_OwnerData(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ReadOnly(void);
  void            __fastcall set_ReadOnly(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_WrapText(void);
  void            __fastcall set_WrapText(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_Arrangement(void);
  void            __fastcall set_Arrangement(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HeaderDragDrop(void);
  void            __fastcall set_HeaderDragDrop(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_InfoTip(void);
  void            __fastcall set_InfoTip(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_BackgroundImage(VARIANT Param1/*[in]*/);
  LPDISPATCH      __fastcall get_WorkAreas(void);
  LPDISPATCH      __fastcall get_Groups(void);
  unsigned_long   __fastcall get_TileLines(void);
  void            __fastcall set_TileLines(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_TileWidth(void);
  void            __fastcall set_TileWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_TileHeight(void);
  void            __fastcall set_TileHeight(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DoubleBuffering(void);
  void            __fastcall set_DoubleBuffering(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TransparentBackground(void);
  void            __fastcall set_TransparentBackground(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_GroupHeaderImages(void);
  void            __fastcall set_GroupHeaderImages(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_GroupHeaderImages(LPDISPATCH pVal/*[in]*/);
  long            __fastcall get_IconSpacingWidth(void);
  void            __fastcall set_IconSpacingWidth(long pVal/*[in]*/);
  long            __fastcall get_IconSpacingHeight(void);
  void            __fastcall set_IconSpacingHeight(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CustomDraw(void);
  void            __fastcall set_CustomDraw(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ReadOnlySubItems(void);
  void            __fastcall set_ReadOnlySubItems(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_QuickEdit(void);
  void            __fastcall set_QuickEdit(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CheckByMouse(void);
  void            __fastcall set_CheckByMouse(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_OnColumnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnColumnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnData(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnItemCheck(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEdited(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginEdit(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnGroupLinkClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDrawItem(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSubItemEdited(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginSubItemEdit(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall Add(BSTR Text/*[in]*/);
  LPDISPATCH      __fastcall Insert(long Index/*[in]*/, BSTR Text/*[in]*/);
  void            __fastcall Remove(long Index/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  void            __fastcall SelectAll(void);
  void            __fastcall ClearSelection(void);
  void            __fastcall EditItem(long Index/*[in]*/);
  void            __fastcall Sort(long DataType/*[in,def,opt]*/, 
                                  VARIANT_BOOL Reverse/*[in,def,opt]*/, 
                                  unsigned_long Column/*[in,def,opt]*/);
  void            __fastcall Arrange(void);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long SelCount={ read=get_SelCount };
  __property LPDISPATCH Columns={ read=get_Columns };
  __property HRESULT BackgroundImage={ write=set_BackgroundImage };
  __property LPDISPATCH WorkAreas={ read=get_WorkAreas };
  __property LPDISPATCH Groups={ read=get_Groups };
  __property HRESULT OnColumnClick={ write=set_OnColumnClick };
  __property HRESULT OnColumnResize={ write=set_OnColumnResize };
  __property HRESULT OnData={ write=set_OnData };
  __property HRESULT OnItemCheck={ write=set_OnItemCheck };
  __property HRESULT OnEdited={ write=set_OnEdited };
  __property HRESULT OnBeginEdit={ write=set_OnBeginEdit };
  __property HRESULT OnGroupLinkClick={ write=set_OnGroupLinkClick };
  __property HRESULT OnDrawItem={ write=set_OnDrawItem };
  __property HRESULT OnSubItemEdited={ write=set_OnSubItemEdited };
  __property HRESULT OnBeginSubItemEdit={ write=set_OnBeginSubItemEdit };
private:
  TListViewOnClick               FOnClick1;
  TListViewOnDblClick            FOnDblClick1;
  TListViewOnChange              FOnChange1;
  TListViewOnKeyDown             FOnKeyDown1;
  TListViewOnKeyUp               FOnKeyUp1;
  TListViewOnMouseEnter          FOnMouseEnter1;
  TListViewOnMouseLeave          FOnMouseLeave1;
  TListViewOnMouseDown           FOnMouseDown1;
  TListViewOnMouseMove           FOnMouseMove1;
  TListViewOnMouseUp             FOnMouseUp1;
  TListViewOnResize              FOnResize1;
  TListViewOnMove                FOnMove1;
  TListViewOnDestroy             FOnDestroy1;
  TListViewOnShow                FOnShow1;
  TListViewOnHide                FOnHide1;
  TListViewOnEnabledChange       FOnEnabledChange1;
  TListViewOnSetFocus            FOnSetFocus1;
  TListViewOnKillFocus           FOnKillFocus1;
  TListViewOnMouseWheel          FOnMouseWheel1;
  TListViewOnBeginDock           FOnBeginDock1;
  TListViewOnDockControlCreate   FOnDockControlCreate1;
  TListViewOnUndockQuery         FOnUndockQuery1;
  TListViewOnUndock              FOnUndock1;
  TListViewOnColumnClick         FOnColumnClick1;
  TListViewOnColumnResize        FOnColumnResize1;
  TListViewOnData                FOnData1;
  TListViewOnItemCheck           FOnItemCheck1;
  TListViewOnEdited              FOnEdited1;
  TListViewOnBeginEdit           FOnBeginEdit1;
  TListViewOnGroupLinkClick      FOnGroupLinkClick1;
  TListViewOnDrawItem            FOnDrawItem1;
  TListViewOnSubItemEdited       FOnSubItemEdited1;
  TListViewOnBeginSubItemEdit    FOnBeginSubItemEdit1;
__published:
  __property TListViewOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TListViewOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TListViewOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TListViewOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TListViewOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TListViewOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TListViewOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TListViewOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TListViewOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TListViewOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TListViewOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TListViewOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TListViewOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TListViewOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TListViewOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TListViewOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TListViewOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TListViewOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TListViewOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TListViewOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TListViewOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TListViewOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TListViewOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
  __property TListViewOnColumnClick OnColumnClick1={ read=FOnColumnClick1, write=FOnColumnClick1 };
  __property TListViewOnColumnResize OnColumnResize1={ read=FOnColumnResize1, write=FOnColumnResize1 };
  __property TListViewOnData OnData1={ read=FOnData1, write=FOnData1 };
  __property TListViewOnItemCheck OnItemCheck1={ read=FOnItemCheck1, write=FOnItemCheck1 };
  __property TListViewOnEdited OnEdited1={ read=FOnEdited1, write=FOnEdited1 };
  __property TListViewOnBeginEdit OnBeginEdit1={ read=FOnBeginEdit1, write=FOnBeginEdit1 };
  __property TListViewOnGroupLinkClick OnGroupLinkClick1={ read=FOnGroupLinkClick1, write=FOnGroupLinkClick1 };
  __property TListViewOnDrawItem OnDrawItem1={ read=FOnDrawItem1, write=FOnDrawItem1 };
  __property TListViewOnSubItemEdited OnSubItemEdited1={ read=FOnSubItemEdited1, write=FOnSubItemEdited1 };
  __property TListViewOnBeginSubItemEdit OnBeginSubItemEdit1={ read=FOnBeginSubItemEdit1, write=FOnBeginSubItemEdit1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTreeItem
// Help String      : 
// Default Interface: ITreeItem
// Def. Intf. Object: ITreeItemPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TTreeItem : public Vcl::Oleserver::TOleServer
{
  ITreeItemPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTreeItem(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITreeItemPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITreeItemPtr intf);


  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  long            __fastcall get_SelectedImageIndex(void);
  void            __fastcall set_SelectedImageIndex(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Selected(void);
  void            __fastcall set_Selected(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Expanded(void);
  void            __fastcall set_Expanded(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Bold(void);
  void            __fastcall set_Bold(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Checked(void);
  void            __fastcall set_Checked(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HasChildren(void);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_NextSibling(void);
  LPDISPATCH      __fastcall get_PrevSibling(void);
  LPDISPATCH      __fastcall get_FirstChild(void);
  LPDISPATCH      __fastcall get_LastChild(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Hint(void);
  void            __fastcall set_Hint(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  unsigned_long   __fastcall get_TextBkColor(void);
  void            __fastcall set_TextBkColor(unsigned_long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall Add(BSTR Text/*[in]*/, long ImageIndex/*[in,def,opt]*/, 
                                 long SelectedImageIndex/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Insert(long Index/*[in]*/, BSTR Text/*[in]*/, 
                                    long ImageIndex/*[in,def,opt]*/, 
                                    long SelectedImageIndex/*[in,def,opt]*/);
  void            __fastcall Remove(long Index/*[in,def,opt]*/);
  void            __fastcall Clear(void);
  void            __fastcall Expand(VARIANT_BOOL Recurse/*[in,def,opt]*/);
  void            __fastcall Collapse(void);
  void            __fastcall EditLabel(void);
  void            __fastcall Sort(VARIANT_BOOL Recurse/*[in,def,opt]*/);
  void            __fastcall MakeVisible(void);
  void            __fastcall ShowHint(void);
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
  __property VARIANT_BOOL HasChildren={ read=get_HasChildren };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH NextSibling={ read=get_NextSibling };
  __property LPDISPATCH PrevSibling={ read=get_PrevSibling };
  __property LPDISPATCH FirstChild={ read=get_FirstChild };
  __property LPDISPATCH LastChild={ read=get_LastChild };
  __property LPDISPATCH Design={ read=get_Design };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTreeView
// Help String      : 
// Default Interface: ITreeView
// Def. Intf. Object: ITreeViewPtr
// Def. Intf. DISP? : No
// Event   Interface: ITreeViewEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TTreeViewOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnChange)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnKeyDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnKeyUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnMouseEnter)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnMouseLeave)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnMouseMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnResize)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnDestroy)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnShow)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnHide)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnEnabledChange)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnSetFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnKillFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnMouseWheel)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Keys/*[in]*/, long Delta/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnBeginDock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH DockTarget/*[in]*/, 
                                                           LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnDockControlCreate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH Control/*[in]*/, 
                                                                   LPDISPATCH DockTarget/*[in]*/, 
                                                                   LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnUndockQuery)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnUndock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnEdited)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, 
                                                        LPDISPATCH Item/*[in]*/, 
                                                        Wsolib_tlb::IResult* NewText/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnExpanding)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnExpanded)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnCollapsing)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnCollapsed)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnItemCheck)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH Item/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnBeginEdit)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH Item/*[in]*/, 
                                                           Wsolib_tlb::IResult* ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TTreeViewOnDrawItem)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH Item/*[in]*/);

class PACKAGE TTreeView : public Vcl::Oleserver::TOleServer
{
  ITreeViewPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTreeView(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITreeViewPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITreeViewPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Items(void);
  LPDISPATCH      __fastcall get_SelectedItem(void);
  LPDISPATCH      __fastcall get_TopItem(void);
  long            __fastcall get_Count(void);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_StateImages(void);
  void            __fastcall set_StateImages(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_StateImages(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HasButtons(void);
  void            __fastcall set_HasButtons(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HasLines(void);
  void            __fastcall set_HasLines(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_LinesAtRoot(void);
  void            __fastcall set_LinesAtRoot(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ReadOnly(void);
  void            __fastcall set_ReadOnly(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CheckBoxes(void);
  void            __fastcall set_CheckBoxes(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HotTrack(void);
  void            __fastcall set_HotTrack(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_RowSelect(void);
  void            __fastcall set_RowSelect(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HideSelection(void);
  void            __fastcall set_HideSelection(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoExpand(void);
  void            __fastcall set_AutoExpand(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_InfoTip(void);
  void            __fastcall set_InfoTip(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CustomDraw(void);
  void            __fastcall set_CustomDraw(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DoubleBuffering(void);
  void            __fastcall set_DoubleBuffering(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_NoIndentState(void);
  void            __fastcall set_NoIndentState(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoHScroll(void);
  void            __fastcall set_AutoHScroll(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_OnEdited(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnExpanding(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnExpanded(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnCollapsing(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnCollapsed(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnItemCheck(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginEdit(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDrawItem(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Items={ read=get_Items };
  __property LPDISPATCH SelectedItem={ read=get_SelectedItem };
  __property LPDISPATCH TopItem={ read=get_TopItem };
  __property long Count={ read=get_Count };
  __property HRESULT OnEdited={ write=set_OnEdited };
  __property HRESULT OnExpanding={ write=set_OnExpanding };
  __property HRESULT OnExpanded={ write=set_OnExpanded };
  __property HRESULT OnCollapsing={ write=set_OnCollapsing };
  __property HRESULT OnCollapsed={ write=set_OnCollapsed };
  __property HRESULT OnItemCheck={ write=set_OnItemCheck };
  __property HRESULT OnBeginEdit={ write=set_OnBeginEdit };
  __property HRESULT OnDrawItem={ write=set_OnDrawItem };
private:
  TTreeViewOnClick               FOnClick1;
  TTreeViewOnDblClick            FOnDblClick1;
  TTreeViewOnChange              FOnChange1;
  TTreeViewOnKeyDown             FOnKeyDown1;
  TTreeViewOnKeyUp               FOnKeyUp1;
  TTreeViewOnMouseEnter          FOnMouseEnter1;
  TTreeViewOnMouseLeave          FOnMouseLeave1;
  TTreeViewOnMouseDown           FOnMouseDown1;
  TTreeViewOnMouseMove           FOnMouseMove1;
  TTreeViewOnMouseUp             FOnMouseUp1;
  TTreeViewOnResize              FOnResize1;
  TTreeViewOnMove                FOnMove1;
  TTreeViewOnDestroy             FOnDestroy1;
  TTreeViewOnShow                FOnShow1;
  TTreeViewOnHide                FOnHide1;
  TTreeViewOnEnabledChange       FOnEnabledChange1;
  TTreeViewOnSetFocus            FOnSetFocus1;
  TTreeViewOnKillFocus           FOnKillFocus1;
  TTreeViewOnMouseWheel          FOnMouseWheel1;
  TTreeViewOnBeginDock           FOnBeginDock1;
  TTreeViewOnDockControlCreate   FOnDockControlCreate1;
  TTreeViewOnUndockQuery         FOnUndockQuery1;
  TTreeViewOnUndock              FOnUndock1;
  TTreeViewOnEdited              FOnEdited1;
  TTreeViewOnExpanding           FOnExpanding1;
  TTreeViewOnExpanded            FOnExpanded1;
  TTreeViewOnCollapsing          FOnCollapsing1;
  TTreeViewOnCollapsed           FOnCollapsed1;
  TTreeViewOnItemCheck           FOnItemCheck1;
  TTreeViewOnBeginEdit           FOnBeginEdit1;
  TTreeViewOnDrawItem            FOnDrawItem1;
__published:
  __property TTreeViewOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TTreeViewOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TTreeViewOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TTreeViewOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TTreeViewOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TTreeViewOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TTreeViewOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TTreeViewOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TTreeViewOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TTreeViewOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TTreeViewOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TTreeViewOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TTreeViewOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TTreeViewOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TTreeViewOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TTreeViewOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TTreeViewOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TTreeViewOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TTreeViewOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TTreeViewOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TTreeViewOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TTreeViewOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TTreeViewOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
  __property TTreeViewOnEdited OnEdited1={ read=FOnEdited1, write=FOnEdited1 };
  __property TTreeViewOnExpanding OnExpanding1={ read=FOnExpanding1, write=FOnExpanding1 };
  __property TTreeViewOnExpanded OnExpanded1={ read=FOnExpanded1, write=FOnExpanded1 };
  __property TTreeViewOnCollapsing OnCollapsing1={ read=FOnCollapsing1, write=FOnCollapsing1 };
  __property TTreeViewOnCollapsed OnCollapsed1={ read=FOnCollapsed1, write=FOnCollapsed1 };
  __property TTreeViewOnItemCheck OnItemCheck1={ read=FOnItemCheck1, write=FOnItemCheck1 };
  __property TTreeViewOnBeginEdit OnBeginEdit1={ read=FOnBeginEdit1, write=FOnBeginEdit1 };
  __property TTreeViewOnDrawItem OnDrawItem1={ read=FOnDrawItem1, write=FOnDrawItem1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TParagraph
// Help String      : 
// Default Interface: IParagraph
// Def. Intf. Object: IParagraphPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TParagraph : public Vcl::Oleserver::TOleServer
{
  IParagraphPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TParagraph(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IParagraphPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IParagraphPtr intf);


  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Numbering(void);
  void            __fastcall set_Numbering(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_StartIndent(void);
  void            __fastcall set_StartIndent(long pVal/*[in]*/);
  long            __fastcall get_LeftIndent(void);
  void            __fastcall set_LeftIndent(long pVal/*[in]*/);
  long            __fastcall get_RightIndent(void);
  void            __fastcall set_RightIndent(long pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TRichEdit
// Help String      : 
// Default Interface: IRichEdit
// Def. Intf. Object: IRichEditPtr
// Def. Intf. DISP? : No
// Event   Interface: IRichEditEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TRichEditOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnChange)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnKeyDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnKeyUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnMouseEnter)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnMouseLeave)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnMouseMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnResize)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnDestroy)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnShow)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnHide)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnEnabledChange)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnSetFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnKillFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnMouseWheel)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Keys/*[in]*/, long Delta/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnBeginDock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH DockTarget/*[in]*/, 
                                                           LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnDockControlCreate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH Control/*[in]*/, 
                                                                   LPDISPATCH DockTarget/*[in]*/, 
                                                                   LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnUndockQuery)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnUndock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TRichEditOnSelChange)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);

class PACKAGE TRichEdit : public Vcl::Oleserver::TOleServer
{
  IRichEditPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TRichEdit(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IRichEditPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IRichEditPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_TopIndex(void);
  void            __fastcall set_TopIndex(long pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  BSTR            __fastcall get_Item(long Index/*[in]*/);
  void            __fastcall set_Item(long Index/*[in]*/, BSTR pvar/*[in]*/);
  long            __fastcall get_Count(void);
  VARIANT_BOOL    __fastcall get_ReadOnly(void);
  void            __fastcall set_ReadOnly(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_MaxLength(void);
  void            __fastcall set_MaxLength(long pVal/*[in]*/);
  long            __fastcall get_CharCase(void);
  void            __fastcall set_CharCase(long pVal/*[in]*/);
  BSTR            __fastcall get_PasswordChar(void);
  void            __fastcall set_PasswordChar(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HideSelection(void);
  void            __fastcall set_HideSelection(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_MultiLine(void);
  void            __fastcall set_MultiLine(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_ScrollBars(void);
  void            __fastcall set_ScrollBars(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSize(void);
  void            __fastcall set_AutoSize(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Modified(void);
  void            __fastcall set_Modified(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_SelStart(void);
  void            __fastcall set_SelStart(long pVal/*[in]*/);
  long            __fastcall get_SelEnd(void);
  void            __fastcall set_SelEnd(long pVal/*[in]*/);
  long            __fastcall get_SelLength(void);
  void            __fastcall set_SelLength(long pVal/*[in]*/);
  unsigned_short  __fastcall get_LeftMargin(void);
  void            __fastcall set_LeftMargin(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_RightMargin(void);
  void            __fastcall set_RightMargin(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_WordWrap(void);
  void            __fastcall set_WordWrap(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_TextAlign(void);
  void            __fastcall set_TextAlign(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CanUndo(void);
  void            __fastcall set_CanUndo(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CanPaste(void);
  long            __fastcall get_DataType(void);
  void            __fastcall set_DataType(long pVal/*[in]*/);
  VARIANT         __fastcall get_Min(void);
  void            __fastcall set_Min(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Max(void);
  void            __fastcall set_Max(VARIANT pVal/*[in]*/);
  long            __fastcall get_LineFromChar(long Index/*[in,def,opt]*/);
  VARIANT_BOOL    __fastcall get_AcceptsReturn(void);
  void            __fastcall set_AcceptsReturn(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AcceptsTab(void);
  void            __fastcall set_AcceptsTab(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoHeight(void);
  void            __fastcall set_AutoHeight(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_CueBanner(void);
  void            __fastcall set_CueBanner(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CueBannerAlwaysVisible(void);
  void            __fastcall set_CueBannerAlwaysVisible(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_BalloonTip(void);
  LPDISPATCH      __fastcall get_SelFont(void);
  void            __fastcall set_SelFont(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_SelFont(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Paragraph(void);
  VARIANT_BOOL    __fastcall get_AutoURLDetect(void);
  void            __fastcall set_AutoURLDetect(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CanRedo(void);
  unsigned_long   __fastcall get_UndoLimit(void);
  void            __fastcall set_UndoLimit(unsigned_long pVal/*[in]*/);
  void            __fastcall set_OnSelChange(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_PageRotate(void);
  void            __fastcall set_PageRotate(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_UndoName(void);
  BSTR            __fastcall get_UndoNameString(void);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  long            __fastcall Add(BSTR Item/*[in]*/);
  void            __fastcall Remove(long Index/*[in]*/);
  long            __fastcall Insert(long Index/*[in]*/, BSTR Item/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  void            __fastcall ExChange(long A/*[in]*/, long B/*[in]*/);
  void            __fastcall Sort(long DataType/*[in,def,opt]*/, 
                                  VARIANT_BOOL Reverse/*[in,def,opt]*/);
  long            __fastcall Find(BSTR Text/*[in]*/, long Start/*[in,def,opt]*/, 
                                  VARIANT_BOOL IgnoreCase/*[in,def,opt]*/);
  void            __fastcall SelectAll(void);
  void            __fastcall ClearSelection(void);
  void            __fastcall ReplaceSelection(BSTR NewText/*[in]*/, 
                                              VARIANT_BOOL CanUndo/*[in,def,opt]*/);
  void            __fastcall Undo(void);
  void            __fastcall Cut(void);
  void            __fastcall Copy(void);
  void            __fastcall Paste(void);
  long            __fastcall FindText(BSTR Text/*[in]*/, unsigned_long Flags/*[in,def,opt]*/, 
                                      long MinPos/*[in,def,opt]*/, long MaxPos/*[in,def,opt]*/);
  VARIANT_BOOL    __fastcall Load(VARIANT Stream/*[in]*/, unsigned_long Flags/*[in,def,opt]*/);
  VARIANT_BOOL    __fastcall Save(VARIANT Stream/*[in]*/, unsigned_long Flags/*[in,def,opt]*/);
  void            __fastcall Redo(void);
  void            __fastcall Print(BSTR Driver/*[in]*/, BSTR Device/*[in]*/, 
                                   LPDISPATCH PrintInfo/*[in]*/, 
                                   VARIANT_BOOL Selection/*[in,def,opt]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property long Count={ read=get_Count };
  __property VARIANT_BOOL CanPaste={ read=get_CanPaste };
  __property long LineFromChar[long Index]={ read=get_LineFromChar };
  __property LPDISPATCH BalloonTip={ read=get_BalloonTip };
  __property LPDISPATCH Paragraph={ read=get_Paragraph };
  __property VARIANT_BOOL CanRedo={ read=get_CanRedo };
  __property HRESULT OnSelChange={ write=set_OnSelChange };
  __property unsigned_long UndoName={ read=get_UndoName };
  __property BSTR UndoNameString={ read=get_UndoNameString };
private:
  TRichEditOnClick               FOnClick1;
  TRichEditOnDblClick            FOnDblClick1;
  TRichEditOnChange              FOnChange1;
  TRichEditOnKeyDown             FOnKeyDown1;
  TRichEditOnKeyUp               FOnKeyUp1;
  TRichEditOnMouseEnter          FOnMouseEnter1;
  TRichEditOnMouseLeave          FOnMouseLeave1;
  TRichEditOnMouseDown           FOnMouseDown1;
  TRichEditOnMouseMove           FOnMouseMove1;
  TRichEditOnMouseUp             FOnMouseUp1;
  TRichEditOnResize              FOnResize1;
  TRichEditOnMove                FOnMove1;
  TRichEditOnDestroy             FOnDestroy1;
  TRichEditOnShow                FOnShow1;
  TRichEditOnHide                FOnHide1;
  TRichEditOnEnabledChange       FOnEnabledChange1;
  TRichEditOnSetFocus            FOnSetFocus1;
  TRichEditOnKillFocus           FOnKillFocus1;
  TRichEditOnMouseWheel          FOnMouseWheel1;
  TRichEditOnBeginDock           FOnBeginDock1;
  TRichEditOnDockControlCreate   FOnDockControlCreate1;
  TRichEditOnUndockQuery         FOnUndockQuery1;
  TRichEditOnUndock              FOnUndock1;
  TRichEditOnSelChange           FOnSelChange1;
__published:
  __property TRichEditOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TRichEditOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TRichEditOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TRichEditOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TRichEditOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TRichEditOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TRichEditOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TRichEditOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TRichEditOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TRichEditOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TRichEditOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TRichEditOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TRichEditOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TRichEditOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TRichEditOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TRichEditOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TRichEditOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TRichEditOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TRichEditOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TRichEditOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TRichEditOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TRichEditOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TRichEditOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
  __property TRichEditOnSelChange OnSelChange1={ read=FOnSelChange1, write=FOnSelChange1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TUpDown
// Help String      : 
// Default Interface: IUpDown
// Def. Intf. Object: IUpDownPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TUpDownOnClick)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnDblClick)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnChange)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnKeyDown)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnKeyUp)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnMouseEnter)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnMouseLeave)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnMouseDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnMouseMove)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnMouseUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnResize)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnMove)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnDestroy)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnShow)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnHide)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnEnabledChange)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnSetFocus)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnKillFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnMouseWheel)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Keys/*[in]*/, long Delta/*[in]*/, 
                                                          long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnBeginDock)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         LPDISPATCH DockTarget/*[in]*/, 
                                                         LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnDockControlCreate)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH Control/*[in]*/, 
                                                                 LPDISPATCH DockTarget/*[in]*/, 
                                                                 LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnUndockQuery)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TUpDownOnUndock)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);

class PACKAGE TUpDown : public Vcl::Oleserver::TOleServer
{
  IUpDownPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TUpDown(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IUpDownPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IUpDownPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_Min(void);
  void            __fastcall set_Min(long pVal/*[in]*/);
  long            __fastcall get_Max(void);
  void            __fastcall set_Max(long pVal/*[in]*/);
  long            __fastcall get_Position(void);
  void            __fastcall set_Position(long pVal/*[in]*/);
  long            __fastcall get_Step(void);
  void            __fastcall set_Step(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Vertical(void);
  void            __fastcall set_Vertical(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HotTrack(void);
  void            __fastcall set_HotTrack(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall StepIt(void);
  void            __fastcall StepBy(long Delta/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TUpDownOnClick                 FOnClick1;
  TUpDownOnDblClick              FOnDblClick1;
  TUpDownOnChange                FOnChange1;
  TUpDownOnKeyDown               FOnKeyDown1;
  TUpDownOnKeyUp                 FOnKeyUp1;
  TUpDownOnMouseEnter            FOnMouseEnter1;
  TUpDownOnMouseLeave            FOnMouseLeave1;
  TUpDownOnMouseDown             FOnMouseDown1;
  TUpDownOnMouseMove             FOnMouseMove1;
  TUpDownOnMouseUp               FOnMouseUp1;
  TUpDownOnResize                FOnResize1;
  TUpDownOnMove                  FOnMove1;
  TUpDownOnDestroy               FOnDestroy1;
  TUpDownOnShow                  FOnShow1;
  TUpDownOnHide                  FOnHide1;
  TUpDownOnEnabledChange         FOnEnabledChange1;
  TUpDownOnSetFocus              FOnSetFocus1;
  TUpDownOnKillFocus             FOnKillFocus1;
  TUpDownOnMouseWheel            FOnMouseWheel1;
  TUpDownOnBeginDock             FOnBeginDock1;
  TUpDownOnDockControlCreate     FOnDockControlCreate1;
  TUpDownOnUndockQuery           FOnUndockQuery1;
  TUpDownOnUndock                FOnUndock1;
__published:
  __property TUpDownOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TUpDownOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TUpDownOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TUpDownOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TUpDownOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TUpDownOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TUpDownOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TUpDownOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TUpDownOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TUpDownOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TUpDownOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TUpDownOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TUpDownOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TUpDownOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TUpDownOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TUpDownOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TUpDownOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TUpDownOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TUpDownOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TUpDownOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TUpDownOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TUpDownOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TUpDownOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTrackBar
// Help String      : 
// Default Interface: ITrackBar
// Def. Intf. Object: ITrackBarPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TTrackBarOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnChange)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnKeyDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnKeyUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnMouseEnter)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnMouseLeave)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnMouseMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnResize)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnDestroy)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnShow)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnHide)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnEnabledChange)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnSetFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnKillFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnMouseWheel)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Keys/*[in]*/, long Delta/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnBeginDock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH DockTarget/*[in]*/, 
                                                           LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnDockControlCreate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH Control/*[in]*/, 
                                                                   LPDISPATCH DockTarget/*[in]*/, 
                                                                   LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnUndockQuery)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TTrackBarOnUndock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);

class PACKAGE TTrackBar : public Vcl::Oleserver::TOleServer
{
  ITrackBarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTrackBar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITrackBarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITrackBarPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_Min(void);
  void            __fastcall set_Min(long pVal/*[in]*/);
  long            __fastcall get_Max(void);
  void            __fastcall set_Max(long pVal/*[in]*/);
  long            __fastcall get_Position(void);
  void            __fastcall set_Position(long pVal/*[in]*/);
  long            __fastcall get_Step(void);
  void            __fastcall set_Step(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Vertical(void);
  void            __fastcall set_Vertical(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_TickMarks(void);
  void            __fastcall set_TickMarks(long pVal/*[in]*/);
  unsigned_long   __fastcall get_SmallChange(void);
  void            __fastcall set_SmallChange(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_LargeChange(void);
  void            __fastcall set_LargeChange(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_ThumbLength(void);
  void            __fastcall set_ThumbLength(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_TickFrequency(void);
  void            __fastcall set_TickFrequency(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_EnableSelRange(void);
  void            __fastcall set_EnableSelRange(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_SelStart(void);
  void            __fastcall set_SelStart(long pVal/*[in]*/);
  long            __fastcall get_SelEnd(void);
  void            __fastcall set_SelEnd(long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall StepIt(void);
  void            __fastcall StepBy(long Delta/*[in]*/);
  void            __fastcall SelectAll(void);
  void            __fastcall ClearSelection(void);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TTrackBarOnClick               FOnClick1;
  TTrackBarOnDblClick            FOnDblClick1;
  TTrackBarOnChange              FOnChange1;
  TTrackBarOnKeyDown             FOnKeyDown1;
  TTrackBarOnKeyUp               FOnKeyUp1;
  TTrackBarOnMouseEnter          FOnMouseEnter1;
  TTrackBarOnMouseLeave          FOnMouseLeave1;
  TTrackBarOnMouseDown           FOnMouseDown1;
  TTrackBarOnMouseMove           FOnMouseMove1;
  TTrackBarOnMouseUp             FOnMouseUp1;
  TTrackBarOnResize              FOnResize1;
  TTrackBarOnMove                FOnMove1;
  TTrackBarOnDestroy             FOnDestroy1;
  TTrackBarOnShow                FOnShow1;
  TTrackBarOnHide                FOnHide1;
  TTrackBarOnEnabledChange       FOnEnabledChange1;
  TTrackBarOnSetFocus            FOnSetFocus1;
  TTrackBarOnKillFocus           FOnKillFocus1;
  TTrackBarOnMouseWheel          FOnMouseWheel1;
  TTrackBarOnBeginDock           FOnBeginDock1;
  TTrackBarOnDockControlCreate   FOnDockControlCreate1;
  TTrackBarOnUndockQuery         FOnUndockQuery1;
  TTrackBarOnUndock              FOnUndock1;
__published:
  __property TTrackBarOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TTrackBarOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TTrackBarOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TTrackBarOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TTrackBarOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TTrackBarOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TTrackBarOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TTrackBarOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TTrackBarOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TTrackBarOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TTrackBarOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TTrackBarOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TTrackBarOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TTrackBarOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TTrackBarOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TTrackBarOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TTrackBarOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TTrackBarOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TTrackBarOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TTrackBarOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TTrackBarOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TTrackBarOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TTrackBarOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : THotKey
// Help String      : 
// Default Interface: IHotKey
// Def. Intf. Object: IHotKeyPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * THotKeyOnClick)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnDblClick)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnChange)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnKeyDown)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnKeyUp)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnMouseEnter)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnMouseLeave)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnMouseDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnMouseMove)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnMouseUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                       long y/*[in]*/, long Button/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnResize)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnMove)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnDestroy)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnShow)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnHide)(System::TObject * Sender, 
                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnEnabledChange)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnSetFocus)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnKillFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnMouseWheel)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Keys/*[in]*/, long Delta/*[in]*/, 
                                                          long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnBeginDock)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, 
                                                         LPDISPATCH DockTarget/*[in]*/, 
                                                         LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnDockControlCreate)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH Control/*[in]*/, 
                                                                 LPDISPATCH DockTarget/*[in]*/, 
                                                                 LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnUndockQuery)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * THotKeyOnUndock)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);

class PACKAGE THotKey : public Vcl::Oleserver::TOleServer
{
  IHotKeyPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall THotKey(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IHotKeyPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IHotKeyPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  VARIANT         __fastcall get_Key(void);
  void            __fastcall set_Key(VARIANT pVal/*[in]*/);
  long            __fastcall get_InvalidKeys(void);
  void            __fastcall set_InvalidKeys(long pVal/*[in]*/);
  VARIANT         __fastcall get_DefaultKey(void);
  void            __fastcall set_DefaultKey(VARIANT pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  THotKeyOnClick                 FOnClick1;
  THotKeyOnDblClick              FOnDblClick1;
  THotKeyOnChange                FOnChange1;
  THotKeyOnKeyDown               FOnKeyDown1;
  THotKeyOnKeyUp                 FOnKeyUp1;
  THotKeyOnMouseEnter            FOnMouseEnter1;
  THotKeyOnMouseLeave            FOnMouseLeave1;
  THotKeyOnMouseDown             FOnMouseDown1;
  THotKeyOnMouseMove             FOnMouseMove1;
  THotKeyOnMouseUp               FOnMouseUp1;
  THotKeyOnResize                FOnResize1;
  THotKeyOnMove                  FOnMove1;
  THotKeyOnDestroy               FOnDestroy1;
  THotKeyOnShow                  FOnShow1;
  THotKeyOnHide                  FOnHide1;
  THotKeyOnEnabledChange         FOnEnabledChange1;
  THotKeyOnSetFocus              FOnSetFocus1;
  THotKeyOnKillFocus             FOnKillFocus1;
  THotKeyOnMouseWheel            FOnMouseWheel1;
  THotKeyOnBeginDock             FOnBeginDock1;
  THotKeyOnDockControlCreate     FOnDockControlCreate1;
  THotKeyOnUndockQuery           FOnUndockQuery1;
  THotKeyOnUndock                FOnUndock1;
__published:
  __property THotKeyOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property THotKeyOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property THotKeyOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property THotKeyOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property THotKeyOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property THotKeyOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property THotKeyOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property THotKeyOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property THotKeyOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property THotKeyOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property THotKeyOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property THotKeyOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property THotKeyOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property THotKeyOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property THotKeyOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property THotKeyOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property THotKeyOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property THotKeyOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property THotKeyOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property THotKeyOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property THotKeyOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property THotKeyOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property THotKeyOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TAnimate
// Help String      : 
// Default Interface: IAnimate
// Def. Intf. Object: IAnimatePtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TAnimateOnClick)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnDblClick)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnChange)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnKeyDown)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnKeyUp)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnMouseEnter)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnMouseLeave)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnMouseDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnMouseMove)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnMouseUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                        long y/*[in]*/, long Button/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnResize)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnMove)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnDestroy)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnShow)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnHide)(System::TObject * Sender, 
                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnEnabledChange)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnSetFocus)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnKillFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnMouseWheel)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Keys/*[in]*/, long Delta/*[in]*/, 
                                                           long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnBeginDock)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          LPDISPATCH DockTarget/*[in]*/, 
                                                          LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnDockControlCreate)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  LPDISPATCH Control/*[in]*/, 
                                                                  LPDISPATCH DockTarget/*[in]*/, 
                                                                  LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnUndockQuery)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TAnimateOnUndock)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);

class PACKAGE TAnimate : public Vcl::Oleserver::TOleServer
{
  IAnimatePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TAnimate(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IAnimatePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IAnimatePtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoRepeat(void);
  void            __fastcall set_AutoRepeat(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Transparent(void);
  void            __fastcall set_Transparent(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Center(void);
  void            __fastcall set_Center(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  VARIANT_BOOL    __fastcall Open(VARIANT newVal/*[in]*/, VARIANT_BOOL StartPlay/*[in,def,opt]*/);
  void            __fastcall Play(void);
  void            __fastcall Stop(void);
  void            __fastcall Close(void);
  void            __fastcall Seek(long Position/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TAnimateOnClick                FOnClick1;
  TAnimateOnDblClick             FOnDblClick1;
  TAnimateOnChange               FOnChange1;
  TAnimateOnKeyDown              FOnKeyDown1;
  TAnimateOnKeyUp                FOnKeyUp1;
  TAnimateOnMouseEnter           FOnMouseEnter1;
  TAnimateOnMouseLeave           FOnMouseLeave1;
  TAnimateOnMouseDown            FOnMouseDown1;
  TAnimateOnMouseMove            FOnMouseMove1;
  TAnimateOnMouseUp              FOnMouseUp1;
  TAnimateOnResize               FOnResize1;
  TAnimateOnMove                 FOnMove1;
  TAnimateOnDestroy              FOnDestroy1;
  TAnimateOnShow                 FOnShow1;
  TAnimateOnHide                 FOnHide1;
  TAnimateOnEnabledChange        FOnEnabledChange1;
  TAnimateOnSetFocus             FOnSetFocus1;
  TAnimateOnKillFocus            FOnKillFocus1;
  TAnimateOnMouseWheel           FOnMouseWheel1;
  TAnimateOnBeginDock            FOnBeginDock1;
  TAnimateOnDockControlCreate    FOnDockControlCreate1;
  TAnimateOnUndockQuery          FOnUndockQuery1;
  TAnimateOnUndock               FOnUndock1;
__published:
  __property TAnimateOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TAnimateOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TAnimateOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TAnimateOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TAnimateOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TAnimateOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TAnimateOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TAnimateOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TAnimateOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TAnimateOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TAnimateOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TAnimateOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TAnimateOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TAnimateOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TAnimateOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TAnimateOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TAnimateOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TAnimateOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TAnimateOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TAnimateOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TAnimateOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TAnimateOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TAnimateOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TIPAddress
// Help String      : 
// Default Interface: IIPAddress
// Def. Intf. Object: IIPAddressPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TIPAddressOnClick)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnDblClick)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnChange)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnKeyDown)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnKeyUp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                        long Flags/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnMouseEnter)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnMouseLeave)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnMouseDown)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnMouseMove)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Flags/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnMouseUp)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnResize)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnMove)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnDestroy)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnShow)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnHide)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnEnabledChange)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnSetFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnKillFocus)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnMouseWheel)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Keys/*[in]*/, long Delta/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnBeginDock)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            LPDISPATCH DockTarget/*[in]*/, 
                                                            LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnDockControlCreate)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    LPDISPATCH Control/*[in]*/, 
                                                                    LPDISPATCH DockTarget/*[in]*/, 
                                                                    LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnUndockQuery)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TIPAddressOnUndock)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);

class PACKAGE TIPAddress : public Vcl::Oleserver::TOleServer
{
  IIPAddressPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TIPAddress(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IIPAddressPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IIPAddressPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Value(void);
  void            __fastcall set_Value(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_IsBlank(void);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall SetRange(long Index/*[in]*/, unsigned_char Min/*[in]*/, 
                                      unsigned_char Max/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property VARIANT_BOOL IsBlank={ read=get_IsBlank };
private:
  TIPAddressOnClick              FOnClick1;
  TIPAddressOnDblClick           FOnDblClick1;
  TIPAddressOnChange             FOnChange1;
  TIPAddressOnKeyDown            FOnKeyDown1;
  TIPAddressOnKeyUp              FOnKeyUp1;
  TIPAddressOnMouseEnter         FOnMouseEnter1;
  TIPAddressOnMouseLeave         FOnMouseLeave1;
  TIPAddressOnMouseDown          FOnMouseDown1;
  TIPAddressOnMouseMove          FOnMouseMove1;
  TIPAddressOnMouseUp            FOnMouseUp1;
  TIPAddressOnResize             FOnResize1;
  TIPAddressOnMove               FOnMove1;
  TIPAddressOnDestroy            FOnDestroy1;
  TIPAddressOnShow               FOnShow1;
  TIPAddressOnHide               FOnHide1;
  TIPAddressOnEnabledChange      FOnEnabledChange1;
  TIPAddressOnSetFocus           FOnSetFocus1;
  TIPAddressOnKillFocus          FOnKillFocus1;
  TIPAddressOnMouseWheel         FOnMouseWheel1;
  TIPAddressOnBeginDock          FOnBeginDock1;
  TIPAddressOnDockControlCreate  FOnDockControlCreate1;
  TIPAddressOnUndockQuery        FOnUndockQuery1;
  TIPAddressOnUndock             FOnUndock1;
__published:
  __property TIPAddressOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TIPAddressOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TIPAddressOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TIPAddressOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TIPAddressOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TIPAddressOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TIPAddressOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TIPAddressOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TIPAddressOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TIPAddressOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TIPAddressOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TIPAddressOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TIPAddressOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TIPAddressOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TIPAddressOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TIPAddressOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TIPAddressOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TIPAddressOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TIPAddressOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TIPAddressOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TIPAddressOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TIPAddressOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TIPAddressOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDateTime
// Help String      : 
// Default Interface: IDateTime
// Def. Intf. Object: IDateTimePtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TDateTime : public Vcl::Oleserver::TOleServer
{
  IDateTimePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDateTime(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IDateTimePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDateTimePtr intf);


  DATE            __fastcall get_Value(void);
  void            __fastcall set_Value(DATE pVal/*[in]*/);
  unsigned_short  __fastcall get_Year(void);
  void            __fastcall set_Year(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Month(void);
  void            __fastcall set_Month(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Day(void);
  void            __fastcall set_Day(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Hour(void);
  void            __fastcall set_Hour(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Minute(void);
  void            __fastcall set_Minute(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Second(void);
  void            __fastcall set_Second(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Milliseconds(void);
  void            __fastcall set_Milliseconds(unsigned_short pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDateTimePicker
// Help String      : 
// Default Interface: IDateTimePicker
// Def. Intf. Object: IDateTimePickerPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TDateTimePickerOnClick)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnDblClick)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                long x/*[in]*/, long y/*[in]*/, 
                                                                long Button/*[in]*/, 
                                                                long Flags/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnChange)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnKeyDown)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnKeyUp)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnMouseEnter)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnMouseLeave)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnMouseDown)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 long x/*[in]*/, long y/*[in]*/, 
                                                                 long Button/*[in]*/, 
                                                                 long Flags/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnMouseMove)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 long x/*[in]*/, long y/*[in]*/, 
                                                                 long Flags/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnMouseUp)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/, 
                                                               long Button/*[in]*/, 
                                                               long Flags/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnResize)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnMove)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnDestroy)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnShow)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnHide)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnEnabledChange)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnSetFocus)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnKillFocus)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnMouseWheel)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  long Keys/*[in]*/, 
                                                                  long Delta/*[in]*/, long x/*[in]*/, 
                                                                  long y/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnBeginDock)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH DockTarget/*[in]*/, 
                                                                 LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnDockControlCreate)(System::TObject * Sender, 
                                                                         LPDISPATCH Sender/*[in]*/, 
                                                                         LPDISPATCH Control/*[in]*/, 
                                                                         LPDISPATCH DockTarget/*[in]*/, 
                                                                         LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnUndockQuery)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TDateTimePickerOnUndock)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);

class PACKAGE TDateTimePicker : public Vcl::Oleserver::TOleServer
{
  IDateTimePickerPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDateTimePicker(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IDateTimePickerPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDateTimePickerPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Value(void);
  LPDISPATCH      __fastcall get_Min(void);
  LPDISPATCH      __fastcall get_Max(void);
  unsigned_long   __fastcall get_Style(void);
  void            __fastcall set_Style(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ShowCheckBox(void);
  void            __fastcall set_ShowCheckBox(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ShowUpDown(void);
  void            __fastcall set_ShowUpDown(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DropDownRightAlign(void);
  void            __fastcall set_DropDownRightAlign(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_CustomFormat(void);
  void            __fastcall set_CustomFormat(BSTR pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Value={ read=get_Value };
  __property LPDISPATCH Min={ read=get_Min };
  __property LPDISPATCH Max={ read=get_Max };
private:
  TDateTimePickerOnClick         FOnClick1;
  TDateTimePickerOnDblClick      FOnDblClick1;
  TDateTimePickerOnChange        FOnChange1;
  TDateTimePickerOnKeyDown       FOnKeyDown1;
  TDateTimePickerOnKeyUp         FOnKeyUp1;
  TDateTimePickerOnMouseEnter    FOnMouseEnter1;
  TDateTimePickerOnMouseLeave    FOnMouseLeave1;
  TDateTimePickerOnMouseDown     FOnMouseDown1;
  TDateTimePickerOnMouseMove     FOnMouseMove1;
  TDateTimePickerOnMouseUp       FOnMouseUp1;
  TDateTimePickerOnResize        FOnResize1;
  TDateTimePickerOnMove          FOnMove1;
  TDateTimePickerOnDestroy       FOnDestroy1;
  TDateTimePickerOnShow          FOnShow1;
  TDateTimePickerOnHide          FOnHide1;
  TDateTimePickerOnEnabledChange FOnEnabledChange1;
  TDateTimePickerOnSetFocus      FOnSetFocus1;
  TDateTimePickerOnKillFocus     FOnKillFocus1;
  TDateTimePickerOnMouseWheel    FOnMouseWheel1;
  TDateTimePickerOnBeginDock     FOnBeginDock1;
  TDateTimePickerOnDockControlCreate FOnDockControlCreate1;
  TDateTimePickerOnUndockQuery   FOnUndockQuery1;
  TDateTimePickerOnUndock        FOnUndock1;
__published:
  __property TDateTimePickerOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TDateTimePickerOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TDateTimePickerOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TDateTimePickerOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TDateTimePickerOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TDateTimePickerOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TDateTimePickerOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TDateTimePickerOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TDateTimePickerOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TDateTimePickerOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TDateTimePickerOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TDateTimePickerOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TDateTimePickerOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TDateTimePickerOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TDateTimePickerOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TDateTimePickerOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TDateTimePickerOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TDateTimePickerOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TDateTimePickerOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TDateTimePickerOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TDateTimePickerOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TDateTimePickerOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TDateTimePickerOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TCalendar
// Help String      : 
// Default Interface: ICalendar
// Def. Intf. Object: ICalendarPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TCalendarOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnChange)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnKeyDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnKeyUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnMouseEnter)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnMouseLeave)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnMouseMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnResize)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnDestroy)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnShow)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnHide)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnEnabledChange)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnSetFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnKillFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnMouseWheel)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Keys/*[in]*/, long Delta/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnBeginDock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH DockTarget/*[in]*/, 
                                                           LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnDockControlCreate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH Control/*[in]*/, 
                                                                   LPDISPATCH DockTarget/*[in]*/, 
                                                                   LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnUndockQuery)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TCalendarOnUndock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);

class PACKAGE TCalendar : public Vcl::Oleserver::TOleServer
{
  ICalendarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TCalendar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ICalendarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ICalendarPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Value(void);
  LPDISPATCH      __fastcall get_Min(void);
  LPDISPATCH      __fastcall get_Max(void);
  VARIANT_BOOL    __fastcall get_MultiSelect(void);
  void            __fastcall set_MultiSelect(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_SelEnd(void);
  LPDISPATCH      __fastcall get_SelStart(void);
  LPDISPATCH      __fastcall get_Today(void);
  unsigned_long   __fastcall get_MonthDelta(void);
  void            __fastcall set_MonthDelta(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MaxSelCount(void);
  void            __fastcall set_MaxSelCount(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TodayText(void);
  void            __fastcall set_TodayText(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TodayCircle(void);
  void            __fastcall set_TodayCircle(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_WeekNumbers(void);
  void            __fastcall set_WeekNumbers(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Value={ read=get_Value };
  __property LPDISPATCH Min={ read=get_Min };
  __property LPDISPATCH Max={ read=get_Max };
  __property LPDISPATCH SelEnd={ read=get_SelEnd };
  __property LPDISPATCH SelStart={ read=get_SelStart };
  __property LPDISPATCH Today={ read=get_Today };
private:
  TCalendarOnClick               FOnClick1;
  TCalendarOnDblClick            FOnDblClick1;
  TCalendarOnChange              FOnChange1;
  TCalendarOnKeyDown             FOnKeyDown1;
  TCalendarOnKeyUp               FOnKeyUp1;
  TCalendarOnMouseEnter          FOnMouseEnter1;
  TCalendarOnMouseLeave          FOnMouseLeave1;
  TCalendarOnMouseDown           FOnMouseDown1;
  TCalendarOnMouseMove           FOnMouseMove1;
  TCalendarOnMouseUp             FOnMouseUp1;
  TCalendarOnResize              FOnResize1;
  TCalendarOnMove                FOnMove1;
  TCalendarOnDestroy             FOnDestroy1;
  TCalendarOnShow                FOnShow1;
  TCalendarOnHide                FOnHide1;
  TCalendarOnEnabledChange       FOnEnabledChange1;
  TCalendarOnSetFocus            FOnSetFocus1;
  TCalendarOnKillFocus           FOnKillFocus1;
  TCalendarOnMouseWheel          FOnMouseWheel1;
  TCalendarOnBeginDock           FOnBeginDock1;
  TCalendarOnDockControlCreate   FOnDockControlCreate1;
  TCalendarOnUndockQuery         FOnUndockQuery1;
  TCalendarOnUndock              FOnUndock1;
__published:
  __property TCalendarOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TCalendarOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TCalendarOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TCalendarOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TCalendarOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TCalendarOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TCalendarOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TCalendarOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TCalendarOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TCalendarOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TCalendarOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TCalendarOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TCalendarOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TCalendarOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TCalendarOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TCalendarOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TCalendarOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TCalendarOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TCalendarOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TCalendarOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TCalendarOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TCalendarOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TCalendarOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TSplitter
// Help String      : 
// Default Interface: ISplitter
// Def. Intf. Object: ISplitterPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TSplitterOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnChange)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnKeyDown)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnKeyUp)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                       long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnMouseEnter)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnMouseLeave)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnMouseMove)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnResize)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnMove)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnDestroy)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnShow)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnHide)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnEnabledChange)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnSetFocus)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnKillFocus)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnMouseWheel)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Keys/*[in]*/, long Delta/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnBeginDock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           LPDISPATCH DockTarget/*[in]*/, 
                                                           LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnDockControlCreate)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH Control/*[in]*/, 
                                                                   LPDISPATCH DockTarget/*[in]*/, 
                                                                   LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnUndockQuery)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TSplitterOnUndock)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);

class PACKAGE TSplitter : public Vcl::Oleserver::TOleServer
{
  ISplitterPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TSplitter(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ISplitterPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ISplitterPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TSplitterOnClick               FOnClick1;
  TSplitterOnDblClick            FOnDblClick1;
  TSplitterOnChange              FOnChange1;
  TSplitterOnKeyDown             FOnKeyDown1;
  TSplitterOnKeyUp               FOnKeyUp1;
  TSplitterOnMouseEnter          FOnMouseEnter1;
  TSplitterOnMouseLeave          FOnMouseLeave1;
  TSplitterOnMouseDown           FOnMouseDown1;
  TSplitterOnMouseMove           FOnMouseMove1;
  TSplitterOnMouseUp             FOnMouseUp1;
  TSplitterOnResize              FOnResize1;
  TSplitterOnMove                FOnMove1;
  TSplitterOnDestroy             FOnDestroy1;
  TSplitterOnShow                FOnShow1;
  TSplitterOnHide                FOnHide1;
  TSplitterOnEnabledChange       FOnEnabledChange1;
  TSplitterOnSetFocus            FOnSetFocus1;
  TSplitterOnKillFocus           FOnKillFocus1;
  TSplitterOnMouseWheel          FOnMouseWheel1;
  TSplitterOnBeginDock           FOnBeginDock1;
  TSplitterOnDockControlCreate   FOnDockControlCreate1;
  TSplitterOnUndockQuery         FOnUndockQuery1;
  TSplitterOnUndock              FOnUndock1;
__published:
  __property TSplitterOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TSplitterOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TSplitterOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TSplitterOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TSplitterOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TSplitterOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TSplitterOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TSplitterOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TSplitterOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TSplitterOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TSplitterOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TSplitterOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TSplitterOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TSplitterOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TSplitterOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TSplitterOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TSplitterOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TSplitterOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TSplitterOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TSplitterOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TSplitterOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TSplitterOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TSplitterOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TSplitPanel
// Help String      : 
// Default Interface: ISplitPanel
// Def. Intf. Object: ISplitPanelPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TSplitPanelOnClick)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnDblClick)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnChange)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnKeyDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnKeyUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long Key/*[in]*/, 
                                                         long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnMouseEnter)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnMouseLeave)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnMouseDown)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnMouseMove)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnMouseUp)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnResize)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnMove)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnDestroy)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnShow)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnHide)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnEnabledChange)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnSetFocus)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnKillFocus)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnMouseWheel)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long Keys/*[in]*/, long Delta/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnBeginDock)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             LPDISPATCH DockTarget/*[in]*/, 
                                                             LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnDockControlCreate)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     LPDISPATCH Control/*[in]*/, 
                                                                     LPDISPATCH DockTarget/*[in]*/, 
                                                                     LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnUndockQuery)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TSplitPanelOnUndock)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);

class PACKAGE TSplitPanel : public Vcl::Oleserver::TOleServer
{
  ISplitPanelPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TSplitPanel(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ISplitPanelPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ISplitPanelPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  unsigned_long   __fastcall get_BorderWidth(void);
  void            __fastcall set_BorderWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_BevelWidth(void);
  void            __fastcall set_BevelWidth(unsigned_long pVal/*[in]*/);
  long            __fastcall get_BevelOuter(void);
  void            __fastcall set_BevelOuter(long pVal/*[in]*/);
  long            __fastcall get_BevelInner(void);
  void            __fastcall set_BevelInner(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_GraphFont(void);
  void            __fastcall set_GraphFont(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_GraphFont(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  void            __fastcall set_AutoScroll(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  void            __fastcall set_Tracking(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_CaptureMouse(void);
  void            __fastcall set_CaptureMouse(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentBackground(void);
  void            __fastcall set_ParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BorderParentBackground(void);
  void            __fastcall set_BorderParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSplit(void);
  void            __fastcall set_AutoSplit(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GroupBox(void);
  void            __fastcall set_GroupBox(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Margin(void);
  void            __fastcall set_Margin(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginLeft(void);
  void            __fastcall set_MarginLeft(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginTop(void);
  void            __fastcall set_MarginTop(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginRight(void);
  void            __fastcall set_MarginRight(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginBottom(void);
  void            __fastcall set_MarginBottom(unsigned_long pVal/*[in]*/);
  double          __fastcall get_DefaultSplit(void);
  void            __fastcall set_DefaultSplit(double pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Live(void);
  void            __fastcall set_Live(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Vertical(void);
  void            __fastcall set_Vertical(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCheckBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            BSTR Text/*[in,def,opt]*/, 
                                            VARIANT_BOOL Checked/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRadioButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateComboBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFrame(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateGroupBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateProgressBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTabControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateToolBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMenuBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateStatusBar(void);
  LPDISPATCH      __fastcall CreateHyperLink(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             BSTR Url/*[in,def,opt]*/, BSTR Label/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePager(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateScrollBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateActiveXControl(long Left/*[in]*/, long Top/*[in]*/, 
                                                  long Width/*[in]*/, long Height/*[in]*/, 
                                                  BSTR ID/*[in]*/);
  LPDISPATCH      __fastcall CreateActiveXControlLicensed(long Left/*[in]*/, long Top/*[in]*/, 
                                                          long Width/*[in]*/, long Height/*[in]*/, 
                                                          BSTR ID/*[in]*/, BSTR LicKey/*[in]*/);
  LPDISPATCH      __fastcall CreateHeader(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTreeView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRichEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/, long Version/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAnimate(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateHotKey(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrackBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateUpDown(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDateTimePicker(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/, 
                                                  long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCalendar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateIPAddress(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateSplitter(unsigned_short Align/*[in]*/);
  LPDISPATCH      __fastcall CreateSplitPanel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              VARIANT_BOOL Vertical/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateResourceUsageGraph(long Left/*[in,def,opt]*/, 
                                                      long Top/*[in,def,opt]*/, 
                                                      long Width/*[in,def,opt]*/, 
                                                      long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePropertyGrid(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                                long Width/*[in,def,opt]*/, 
                                                long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateLabel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePageControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAutoSplitFrame(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Line(long Ax/*[in]*/, long Ay/*[in]*/, long Bx/*[in]*/, long By/*[in]*/);
  LPDISPATCH      __fastcall Rectangle(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/);
  LPDISPATCH      __fastcall RoundRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, long nWidth/*[in]*/, 
                                       long nHeight/*[in]*/);
  LPDISPATCH      __fastcall Circle(long x/*[in]*/, long y/*[in]*/, long r/*[in]*/);
  LPDISPATCH      __fastcall Ellipse(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                     long Height/*[in]*/);
  LPDISPATCH      __fastcall Arc(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXStartArc/*[in]*/, 
                                 long nYStartArc/*[in]*/, long nXEndArc/*[in]*/, 
                                 long nYEndArc/*[in]*/);
  LPDISPATCH      __fastcall Chord(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long nXRadial1/*[in]*/, 
                                   long nYRadial1/*[in]*/, long nXRadial2/*[in]*/, 
                                   long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Pie(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXRadial1/*[in]*/, long nYRadial1/*[in]*/, 
                                 long nXRadial2/*[in]*/, long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Polygon(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall TextOut(long x/*[in]*/, long y/*[in]*/, BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall TextRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                      long Height/*[in]*/, BSTR Text/*[in]*/, 
                                      unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall DrawImage(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, VARIANT Image/*[in]*/);
  LPDISPATCH      __fastcall DrawRegion(long Left/*[in]*/, long Top/*[in]*/, 
                                        unsigned_long Region/*[in]*/);
  LPDISPATCH      __fastcall Bevel(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long BevelOuter/*[in,def,opt]*/, 
                                   long BevelInner/*[in,def,opt]*/, 
                                   unsigned_long BorderWidth/*[in,def,opt]*/, 
                                   unsigned_long BevelWidth/*[in,def,opt]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  LPDISPATCH      __fastcall Get(BSTR Name/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
private:
  TSplitPanelOnClick             FOnClick1;
  TSplitPanelOnDblClick          FOnDblClick1;
  TSplitPanelOnChange            FOnChange1;
  TSplitPanelOnKeyDown           FOnKeyDown1;
  TSplitPanelOnKeyUp             FOnKeyUp1;
  TSplitPanelOnMouseEnter        FOnMouseEnter1;
  TSplitPanelOnMouseLeave        FOnMouseLeave1;
  TSplitPanelOnMouseDown         FOnMouseDown1;
  TSplitPanelOnMouseMove         FOnMouseMove1;
  TSplitPanelOnMouseUp           FOnMouseUp1;
  TSplitPanelOnResize            FOnResize1;
  TSplitPanelOnMove              FOnMove1;
  TSplitPanelOnDestroy           FOnDestroy1;
  TSplitPanelOnShow              FOnShow1;
  TSplitPanelOnHide              FOnHide1;
  TSplitPanelOnEnabledChange     FOnEnabledChange1;
  TSplitPanelOnSetFocus          FOnSetFocus1;
  TSplitPanelOnKillFocus         FOnKillFocus1;
  TSplitPanelOnMouseWheel        FOnMouseWheel1;
  TSplitPanelOnBeginDock         FOnBeginDock1;
  TSplitPanelOnDockControlCreate FOnDockControlCreate1;
  TSplitPanelOnUndockQuery       FOnUndockQuery1;
  TSplitPanelOnUndock            FOnUndock1;
__published:
  __property TSplitPanelOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TSplitPanelOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TSplitPanelOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TSplitPanelOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TSplitPanelOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TSplitPanelOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TSplitPanelOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TSplitPanelOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TSplitPanelOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TSplitPanelOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TSplitPanelOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TSplitPanelOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TSplitPanelOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TSplitPanelOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TSplitPanelOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TSplitPanelOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TSplitPanelOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TSplitPanelOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TSplitPanelOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TSplitPanelOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TSplitPanelOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TSplitPanelOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TSplitPanelOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPolygonGraphic
// Help String      : 
// Default Interface: IPolygon
// Def. Intf. Object: IPolygonPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TPolygonGraphicOnClick)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnDblClick)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                long x/*[in]*/, long y/*[in]*/, 
                                                                long Button/*[in]*/, 
                                                                long Flags/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnChange)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnKeyDown)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnKeyUp)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnMouseEnter)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnMouseLeave)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnMouseDown)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 long x/*[in]*/, long y/*[in]*/, 
                                                                 long Button/*[in]*/, 
                                                                 long Flags/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnMouseMove)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 long x/*[in]*/, long y/*[in]*/, 
                                                                 long Flags/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnMouseUp)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/, 
                                                               long Button/*[in]*/, 
                                                               long Flags/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnResize)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnMove)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnDestroy)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnShow)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnHide)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnEnabledChange)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnSetFocus)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnKillFocus)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnMouseWheel)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  long Keys/*[in]*/, 
                                                                  long Delta/*[in]*/, long x/*[in]*/, 
                                                                  long y/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnBeginDock)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH DockTarget/*[in]*/, 
                                                                 LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnDockControlCreate)(System::TObject * Sender, 
                                                                         LPDISPATCH Sender/*[in]*/, 
                                                                         LPDISPATCH Control/*[in]*/, 
                                                                         LPDISPATCH DockTarget/*[in]*/, 
                                                                         LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnUndockQuery)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TPolygonGraphicOnUndock)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);

class PACKAGE TPolygonGraphic : public Vcl::Oleserver::TOleServer
{
  IPolygonPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPolygonGraphic(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPolygonPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPolygonPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_FillAll(void);
  void            __fastcall set_FillAll(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TPolygonGraphicOnClick         FOnClick1;
  TPolygonGraphicOnDblClick      FOnDblClick1;
  TPolygonGraphicOnChange        FOnChange1;
  TPolygonGraphicOnKeyDown       FOnKeyDown1;
  TPolygonGraphicOnKeyUp         FOnKeyUp1;
  TPolygonGraphicOnMouseEnter    FOnMouseEnter1;
  TPolygonGraphicOnMouseLeave    FOnMouseLeave1;
  TPolygonGraphicOnMouseDown     FOnMouseDown1;
  TPolygonGraphicOnMouseMove     FOnMouseMove1;
  TPolygonGraphicOnMouseUp       FOnMouseUp1;
  TPolygonGraphicOnResize        FOnResize1;
  TPolygonGraphicOnMove          FOnMove1;
  TPolygonGraphicOnDestroy       FOnDestroy1;
  TPolygonGraphicOnShow          FOnShow1;
  TPolygonGraphicOnHide          FOnHide1;
  TPolygonGraphicOnEnabledChange FOnEnabledChange1;
  TPolygonGraphicOnSetFocus      FOnSetFocus1;
  TPolygonGraphicOnKillFocus     FOnKillFocus1;
  TPolygonGraphicOnMouseWheel    FOnMouseWheel1;
  TPolygonGraphicOnBeginDock     FOnBeginDock1;
  TPolygonGraphicOnDockControlCreate FOnDockControlCreate1;
  TPolygonGraphicOnUndockQuery   FOnUndockQuery1;
  TPolygonGraphicOnUndock        FOnUndock1;
__published:
  __property TPolygonGraphicOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TPolygonGraphicOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TPolygonGraphicOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TPolygonGraphicOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TPolygonGraphicOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TPolygonGraphicOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TPolygonGraphicOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TPolygonGraphicOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TPolygonGraphicOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TPolygonGraphicOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TPolygonGraphicOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TPolygonGraphicOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TPolygonGraphicOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TPolygonGraphicOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TPolygonGraphicOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TPolygonGraphicOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TPolygonGraphicOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TPolygonGraphicOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TPolygonGraphicOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TPolygonGraphicOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TPolygonGraphicOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TPolygonGraphicOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TPolygonGraphicOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TImageGraphic
// Help String      : 
// Default Interface: IImage
// Def. Intf. Object: IImagePtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TImageGraphicOnClick)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnDblClick)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Button/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnChange)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnKeyDown)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnKeyUp)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnMouseEnter)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnMouseLeave)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnMouseDown)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/, 
                                                               long Button/*[in]*/, 
                                                               long Flags/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnMouseMove)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/, 
                                                               long Flags/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnMouseUp)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnResize)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnMove)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnDestroy)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnShow)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnHide)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnEnabledChange)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnSetFocus)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnKillFocus)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnMouseWheel)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                long Keys/*[in]*/, 
                                                                long Delta/*[in]*/, long x/*[in]*/, 
                                                                long y/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnBeginDock)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               LPDISPATCH DockTarget/*[in]*/, 
                                                               LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnDockControlCreate)(System::TObject * Sender, 
                                                                       LPDISPATCH Sender/*[in]*/, 
                                                                       LPDISPATCH Control/*[in]*/, 
                                                                       LPDISPATCH DockTarget/*[in]*/, 
                                                                       LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnUndockQuery)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TImageGraphicOnUndock)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);

class PACKAGE TImageGraphic : public Vcl::Oleserver::TOleServer
{
  IImagePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TImageGraphic(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IImagePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IImagePtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_DrawType(void);
  void            __fastcall set_DrawType(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_CopyMode(void);
  void            __fastcall set_CopyMode(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_ImageWidth(void);
  unsigned_long   __fastcall get_ImageHeight(void);
  unsigned_long   __fastcall get_AlphaBlend(void);
  void            __fastcall set_AlphaBlend(unsigned_long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property unsigned_long ImageWidth={ read=get_ImageWidth };
  __property unsigned_long ImageHeight={ read=get_ImageHeight };
private:
  TImageGraphicOnClick           FOnClick1;
  TImageGraphicOnDblClick        FOnDblClick1;
  TImageGraphicOnChange          FOnChange1;
  TImageGraphicOnKeyDown         FOnKeyDown1;
  TImageGraphicOnKeyUp           FOnKeyUp1;
  TImageGraphicOnMouseEnter      FOnMouseEnter1;
  TImageGraphicOnMouseLeave      FOnMouseLeave1;
  TImageGraphicOnMouseDown       FOnMouseDown1;
  TImageGraphicOnMouseMove       FOnMouseMove1;
  TImageGraphicOnMouseUp         FOnMouseUp1;
  TImageGraphicOnResize          FOnResize1;
  TImageGraphicOnMove            FOnMove1;
  TImageGraphicOnDestroy         FOnDestroy1;
  TImageGraphicOnShow            FOnShow1;
  TImageGraphicOnHide            FOnHide1;
  TImageGraphicOnEnabledChange   FOnEnabledChange1;
  TImageGraphicOnSetFocus        FOnSetFocus1;
  TImageGraphicOnKillFocus       FOnKillFocus1;
  TImageGraphicOnMouseWheel      FOnMouseWheel1;
  TImageGraphicOnBeginDock       FOnBeginDock1;
  TImageGraphicOnDockControlCreate FOnDockControlCreate1;
  TImageGraphicOnUndockQuery     FOnUndockQuery1;
  TImageGraphicOnUndock          FOnUndock1;
__published:
  __property TImageGraphicOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TImageGraphicOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TImageGraphicOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TImageGraphicOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TImageGraphicOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TImageGraphicOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TImageGraphicOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TImageGraphicOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TImageGraphicOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TImageGraphicOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TImageGraphicOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TImageGraphicOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TImageGraphicOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TImageGraphicOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TImageGraphicOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TImageGraphicOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TImageGraphicOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TImageGraphicOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TImageGraphicOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TImageGraphicOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TImageGraphicOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TImageGraphicOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TImageGraphicOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TLineGraphic
// Help String      : 
// Default Interface: ILine
// Def. Intf. Object: ILinePtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TLineGraphicOnClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnDblClick)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnChange)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnKeyDown)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnKeyUp)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, 
                                                          long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnMouseEnter)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnMouseLeave)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnMouseDown)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Button/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnMouseMove)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnMouseUp)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/, 
                                                            long x/*[in]*/, long y/*[in]*/, 
                                                            long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnResize)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnMove)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnDestroy)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnShow)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnHide)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnEnabledChange)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnSetFocus)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnKillFocus)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnMouseWheel)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long Keys/*[in]*/, long Delta/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnBeginDock)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              LPDISPATCH DockTarget/*[in]*/, 
                                                              LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnDockControlCreate)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      LPDISPATCH Control/*[in]*/, 
                                                                      LPDISPATCH DockTarget/*[in]*/, 
                                                                      LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnUndockQuery)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TLineGraphicOnUndock)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);

class PACKAGE TLineGraphic : public Vcl::Oleserver::TOleServer
{
  ILinePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TLineGraphic(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ILinePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ILinePtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_x(long Index/*[in]*/);
  void            __fastcall set_x(long Index/*[in]*/, long pVal/*[in]*/);
  long            __fastcall get_y(long Index/*[in]*/);
  void            __fastcall set_y(long Index/*[in]*/, long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
private:
  TLineGraphicOnClick            FOnClick1;
  TLineGraphicOnDblClick         FOnDblClick1;
  TLineGraphicOnChange           FOnChange1;
  TLineGraphicOnKeyDown          FOnKeyDown1;
  TLineGraphicOnKeyUp            FOnKeyUp1;
  TLineGraphicOnMouseEnter       FOnMouseEnter1;
  TLineGraphicOnMouseLeave       FOnMouseLeave1;
  TLineGraphicOnMouseDown        FOnMouseDown1;
  TLineGraphicOnMouseMove        FOnMouseMove1;
  TLineGraphicOnMouseUp          FOnMouseUp1;
  TLineGraphicOnResize           FOnResize1;
  TLineGraphicOnMove             FOnMove1;
  TLineGraphicOnDestroy          FOnDestroy1;
  TLineGraphicOnShow             FOnShow1;
  TLineGraphicOnHide             FOnHide1;
  TLineGraphicOnEnabledChange    FOnEnabledChange1;
  TLineGraphicOnSetFocus         FOnSetFocus1;
  TLineGraphicOnKillFocus        FOnKillFocus1;
  TLineGraphicOnMouseWheel       FOnMouseWheel1;
  TLineGraphicOnBeginDock        FOnBeginDock1;
  TLineGraphicOnDockControlCreate FOnDockControlCreate1;
  TLineGraphicOnUndockQuery      FOnUndockQuery1;
  TLineGraphicOnUndock           FOnUndock1;
__published:
  __property TLineGraphicOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TLineGraphicOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TLineGraphicOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TLineGraphicOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TLineGraphicOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TLineGraphicOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TLineGraphicOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TLineGraphicOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TLineGraphicOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TLineGraphicOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TLineGraphicOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TLineGraphicOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TLineGraphicOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TLineGraphicOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TLineGraphicOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TLineGraphicOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TLineGraphicOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TLineGraphicOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TLineGraphicOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TLineGraphicOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TLineGraphicOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TLineGraphicOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TLineGraphicOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPrintDialogBase
// Help String      : 
// Default Interface: IPrintDialogBase
// Def. Intf. Object: IPrintDialogBasePtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TPrintDialogBase : public Vcl::Oleserver::TOleServer
{
  IPrintDialogBasePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPrintDialogBase(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPrintDialogBasePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPrintDialogBasePtr intf);


  BSTR            __fastcall get_Driver(void);
  BSTR            __fastcall get_Device(void);
  BSTR            __fastcall get_Port(void);
  __property BSTR Driver={ read=get_Driver };
  __property BSTR Device={ read=get_Device };
  __property BSTR Port={ read=get_Port };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPrintDialog
// Help String      : 
// Default Interface: IPrintDialog
// Def. Intf. Object: IPrintDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TPrintDialog : public Vcl::Oleserver::TOleServer
{
  IPrintDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPrintDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPrintDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPrintDialogPtr intf);


  BSTR            __fastcall get_Driver(void);
  BSTR            __fastcall get_Device(void);
  BSTR            __fastcall get_Port(void);
  long            __fastcall get_Copies(void);
  VARIANT_BOOL    __fastcall get_Collate(void);
  VARIANT_BOOL    __fastcall get_Selection(void);
  VARIANT_BOOL    __fastcall get_All(void);
  VARIANT_BOOL    __fastcall get_Range(void);
  VARIANT_BOOL    __fastcall get_ToFile(void);
  long            __fastcall get_FromPage(void);
  long            __fastcall get_ToPage(void);
  __property BSTR Driver={ read=get_Driver };
  __property BSTR Device={ read=get_Device };
  __property BSTR Port={ read=get_Port };
  __property long Copies={ read=get_Copies };
  __property VARIANT_BOOL Collate={ read=get_Collate };
  __property VARIANT_BOOL Selection={ read=get_Selection };
  __property VARIANT_BOOL All={ read=get_All };
  __property VARIANT_BOOL Range={ read=get_Range };
  __property VARIANT_BOOL ToFile={ read=get_ToFile };
  __property long FromPage={ read=get_FromPage };
  __property long ToPage={ read=get_ToPage };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPageSetupDialog
// Help String      : 
// Default Interface: IPageSetupDialog
// Def. Intf. Object: IPageSetupDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TPageSetupDialog : public Vcl::Oleserver::TOleServer
{
  IPageSetupDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPageSetupDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPageSetupDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPageSetupDialogPtr intf);


  BSTR            __fastcall get_Driver(void);
  BSTR            __fastcall get_Device(void);
  BSTR            __fastcall get_Port(void);
  long            __fastcall get_PaperWidth(void);
  long            __fastcall get_PaperHeight(void);
  long            __fastcall get_LeftMargin(void);
  long            __fastcall get_RightMargin(void);
  long            __fastcall get_TopMargin(void);
  long            __fastcall get_BottomMargin(void);
  __property BSTR Driver={ read=get_Driver };
  __property BSTR Device={ read=get_Device };
  __property BSTR Port={ read=get_Port };
  __property long PaperWidth={ read=get_PaperWidth };
  __property long PaperHeight={ read=get_PaperHeight };
  __property long LeftMargin={ read=get_LeftMargin };
  __property long RightMargin={ read=get_RightMargin };
  __property long TopMargin={ read=get_TopMargin };
  __property long BottomMargin={ read=get_BottomMargin };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFindReplaceDialog
// Help String      : 
// Default Interface: IFindReplaceDialog
// Def. Intf. Object: IFindReplaceDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: IFindReplaceDialogEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TFindReplaceDialogOnFind)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFindReplaceDialogOnReplace)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFindReplaceDialogOnReplaceAll)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFindReplaceDialogOnClose)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFindReplaceDialogOnHelp)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);

class PACKAGE TFindReplaceDialog : public Vcl::Oleserver::TOleServer
{
  IFindReplaceDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFindReplaceDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFindReplaceDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFindReplaceDialogPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_FindText(void);
  BSTR            __fastcall get_ReplaceText(void);
  VARIANT_BOOL    __fastcall get_SearchDown(void);
  VARIANT_BOOL    __fastcall get_MatchCase(void);
  VARIANT_BOOL    __fastcall get_WholeWord(void);
  void            __fastcall set_OnFind(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnReplace(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnReplaceAll(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnClose(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHelp(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Close(void);
  __property BSTR Type={ read=get_Type };
  __property BSTR FindText={ read=get_FindText };
  __property BSTR ReplaceText={ read=get_ReplaceText };
  __property VARIANT_BOOL SearchDown={ read=get_SearchDown };
  __property VARIANT_BOOL MatchCase={ read=get_MatchCase };
  __property VARIANT_BOOL WholeWord={ read=get_WholeWord };
  __property HRESULT OnFind={ write=set_OnFind };
  __property HRESULT OnReplace={ write=set_OnReplace };
  __property HRESULT OnReplaceAll={ write=set_OnReplaceAll };
  __property HRESULT OnClose={ write=set_OnClose };
  __property HRESULT OnHelp={ write=set_OnHelp };
private:
  TFindReplaceDialogOnFind       FOnFind1;
  TFindReplaceDialogOnReplace    FOnReplace1;
  TFindReplaceDialogOnReplaceAll FOnReplaceAll1;
  TFindReplaceDialogOnClose      FOnClose1;
  TFindReplaceDialogOnHelp       FOnHelp1;
__published:
  __property TFindReplaceDialogOnFind OnFind1={ read=FOnFind1, write=FOnFind1 };
  __property TFindReplaceDialogOnReplace OnReplace1={ read=FOnReplace1, write=FOnReplace1 };
  __property TFindReplaceDialogOnReplaceAll OnReplaceAll1={ read=FOnReplaceAll1, write=FOnReplaceAll1 };
  __property TFindReplaceDialogOnClose OnClose1={ read=FOnClose1, write=FOnClose1 };
  __property TFindReplaceDialogOnHelp OnHelp1={ read=FOnHelp1, write=FOnHelp1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFontDialog
// Help String      : 
// Default Interface: IFontDialog
// Def. Intf. Object: IFontDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: IFontDialogEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TFontDialogOnHelp)(System::TObject * Sender, 
                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFontDialogOnApply)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);

class PACKAGE TFontDialog : public Vcl::Oleserver::TOleServer
{
  IFontDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFontDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFontDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFontDialogPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  unsigned_long   __fastcall get_Flags(void);
  void            __fastcall set_Flags(unsigned_long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall set_OnHelp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnApply(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  VARIANT_BOOL    __fastcall Execute(void);
  __property BSTR Type={ read=get_Type };
  __property HRESULT OnHelp={ write=set_OnHelp };
  __property HRESULT OnApply={ write=set_OnApply };
private:
  TFontDialogOnHelp              FOnHelp1;
  TFontDialogOnApply             FOnApply1;
__published:
  __property TFontDialogOnHelp OnHelp1={ read=FOnHelp1, write=FOnHelp1 };
  __property TFontDialogOnApply OnApply1={ read=FOnApply1, write=FOnApply1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TColorDialog
// Help String      : 
// Default Interface: IColorDialog
// Def. Intf. Object: IColorDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: IColorDialogEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TColorDialogOnHelp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);

class PACKAGE TColorDialog : public Vcl::Oleserver::TOleServer
{
  IColorDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TColorDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IColorDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IColorDialogPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  unsigned_long   __fastcall get_Flags(void);
  void            __fastcall set_Flags(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  void            __fastcall set_OnHelp(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  VARIANT_BOOL    __fastcall Execute(void);
  __property BSTR Type={ read=get_Type };
  __property HRESULT OnHelp={ write=set_OnHelp };
private:
  TColorDialogOnHelp             FOnHelp1;
__published:
  __property TColorDialogOnHelp OnHelp1={ read=FOnHelp1, write=FOnHelp1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFileOpenSaveDialog
// Help String      : 
// Default Interface: IFileOpenSaveDialog
// Def. Intf. Object: IFileOpenSaveDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: IFileOpenSaveDialogEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TFileOpenSaveDialogOnCloseQuery)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TFileOpenSaveDialogOnChange)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFileOpenSaveDialogOnFolderChange)(System::TObject * Sender, 
                                                                        LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFileOpenSaveDialogOnTypeChange)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TFileOpenSaveDialogOnHelp)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);

class PACKAGE TFileOpenSaveDialog : public Vcl::Oleserver::TOleServer
{
  IFileOpenSaveDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFileOpenSaveDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFileOpenSaveDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFileOpenSaveDialogPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_DefaultExt(void);
  void            __fastcall set_DefaultExt(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_Filter(void);
  void            __fastcall set_Filter(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_FileName(void);
  void            __fastcall set_FileName(BSTR pVal/*[in]*/);
  unsigned_long   __fastcall get_Flags(void);
  void            __fastcall set_Flags(unsigned_long pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  unsigned_long   __fastcall get_FilterIndex(void);
  void            __fastcall set_FilterIndex(unsigned_long pVal/*[in]*/);
  BSTR            __fastcall get_Directory(void);
  void            __fastcall set_Directory(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_OverwritePrompt(void);
  void            __fastcall set_OverwritePrompt(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowMultiselect(void);
  void            __fastcall set_AllowMultiselect(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_PathMustExist(void);
  void            __fastcall set_PathMustExist(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_FileMustExist(void);
  void            __fastcall set_FileMustExist(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CreatePrompt(void);
  void            __fastcall set_CreatePrompt(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_NoReadOnlyReturn(void);
  void            __fastcall set_NoReadOnlyReturn(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_NoTestFileCreate(void);
  void            __fastcall set_NoTestFileCreate(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_NoDereferenceLinks(void);
  void            __fastcall set_NoDereferenceLinks(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DontAddToRecent(void);
  void            __fastcall set_DontAddToRecent(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ForceShowHidden(void);
  void            __fastcall set_ForceShowHidden(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_NoPlacesBar(void);
  void            __fastcall set_NoPlacesBar(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ForceFileSystem(void);
  void            __fastcall set_ForceFileSystem(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllNonStorageItems(void);
  void            __fastcall set_AllNonStorageItems(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HideMRUPlaces(void);
  void            __fastcall set_HideMRUPlaces(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_HidePinnedPlaces(void);
  void            __fastcall set_HidePinnedPlaces(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DefaultNoMiniMode(void);
  void            __fastcall set_DefaultNoMiniMode(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ForcePreviewPaneOn(void);
  void            __fastcall set_ForcePreviewPaneOn(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_FileNames(void);
  BSTR            __fastcall get_ClientGuid(void);
  void            __fastcall set_ClientGuid(BSTR pVal/*[in]*/);
  void            __fastcall set_OnCloseQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnFolderChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnTypeChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHelp(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  VARIANT_BOOL    __fastcall Execute(void);
  void            __fastcall AddPlace(BSTR Value/*[in]*/, BSTR Name/*[in,def,opt]*/, 
                                      long Placement/*[in,def,opt]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH FileNames={ read=get_FileNames };
  __property HRESULT OnCloseQuery={ write=set_OnCloseQuery };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnFolderChange={ write=set_OnFolderChange };
  __property HRESULT OnTypeChange={ write=set_OnTypeChange };
  __property HRESULT OnHelp={ write=set_OnHelp };
private:
  TFileOpenSaveDialogOnCloseQuery FOnCloseQuery1;
  TFileOpenSaveDialogOnChange    FOnChange1;
  TFileOpenSaveDialogOnFolderChange FOnFolderChange1;
  TFileOpenSaveDialogOnTypeChange FOnTypeChange1;
  TFileOpenSaveDialogOnHelp      FOnHelp1;
__published:
  __property TFileOpenSaveDialogOnCloseQuery OnCloseQuery1={ read=FOnCloseQuery1, write=FOnCloseQuery1 };
  __property TFileOpenSaveDialogOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TFileOpenSaveDialogOnFolderChange OnFolderChange1={ read=FOnFolderChange1, write=FOnFolderChange1 };
  __property TFileOpenSaveDialogOnTypeChange OnTypeChange1={ read=FOnTypeChange1, write=FOnTypeChange1 };
  __property TFileOpenSaveDialogOnHelp OnHelp1={ read=FOnHelp1, write=FOnHelp1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TSelectFolderDialog
// Help String      : 
// Default Interface: ISelectFolderDialog
// Def. Intf. Object: ISelectFolderDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: ISelectFolderDialogEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TSelectFolderDialogOnChange)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);

class PACKAGE TSelectFolderDialog : public Vcl::Oleserver::TOleServer
{
  ISelectFolderDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TSelectFolderDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ISelectFolderDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ISelectFolderDialogPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  unsigned_long   __fastcall get_Flags(void);
  void            __fastcall set_Flags(unsigned_long pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_Value(void);
  void            __fastcall set_Value(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_Root(void);
  void            __fastcall set_Root(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_StatusText(void);
  void            __fastcall set_StatusText(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_Title(void);
  void            __fastcall set_Title(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_EnableOK(void);
  void            __fastcall set_EnableOK(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  VARIANT_BOOL    __fastcall Execute(void);
  void            __fastcall Close(void);
  __property BSTR Type={ read=get_Type };
  __property HRESULT OnChange={ write=set_OnChange };
private:
  TSelectFolderDialogOnChange    FOnChange1;
__published:
  __property TSelectFolderDialogOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTimer
// Help String      : 
// Default Interface: ITimer
// Def. Intf. Object: ITimerPtr
// Def. Intf. DISP? : No
// Event   Interface: ITimerEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TTimerOnExecute)(System::TObject * Sender, 
                                                      LPDISPATCH Sender/*[in]*/);

class PACKAGE TTimer : public Vcl::Oleserver::TOleServer
{
  ITimerPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTimer(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITimerPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITimerPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Active(void);
  void            __fastcall set_Active(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Interval(void);
  void            __fastcall set_Interval(unsigned_long pVal/*[in]*/);
  void            __fastcall set_OnExecute(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property HRESULT OnExecute={ write=set_OnExecute };
private:
  TTimerOnExecute                FOnExecute1;
__published:
  __property TTimerOnExecute OnExecute1={ read=FOnExecute1, write=FOnExecute1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWindowSystemControl
// Help String      : 
// Default Interface: IForm
// Def. Intf. Object: IFormDisp
// Def. Intf. DISP? : No
// Event   Interface: IFormEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
typedef void __fastcall (__closure * TWindowSystemControlOnClick)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnDblClick)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     long x/*[in]*/, long y/*[in]*/, 
                                                                     long Button/*[in]*/, 
                                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnChange)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnKeyDown)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    long Key/*[in]*/, 
                                                                    long Flags/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnKeyUp)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/, 
                                                                  long Key/*[in]*/, 
                                                                  long Flags/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMouseEnter)(System::TObject * Sender, 
                                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMouseLeave)(System::TObject * Sender, 
                                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMouseDown)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      long x/*[in]*/, long y/*[in]*/, 
                                                                      long Button/*[in]*/, 
                                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMouseMove)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      long x/*[in]*/, long y/*[in]*/, 
                                                                      long Flags/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMouseUp)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    long x/*[in]*/, long y/*[in]*/, 
                                                                    long Button/*[in]*/, 
                                                                    long Flags/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnResize)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMove)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnDestroy)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnShow)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnHide)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnEnabledChange)(System::TObject * Sender, 
                                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnSetFocus)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnKillFocus)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMouseWheel)(System::TObject * Sender, 
                                                                       LPDISPATCH Sender/*[in]*/, 
                                                                       long Keys/*[in]*/, 
                                                                       long Delta/*[in]*/, 
                                                                       long x/*[in]*/, 
                                                                       long y/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnBeginDock)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      LPDISPATCH DockTarget/*[in]*/, 
                                                                      LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnDockControlCreate)(System::TObject * Sender, 
                                                                              LPDISPATCH Sender/*[in]*/, 
                                                                              LPDISPATCH Control/*[in]*/, 
                                                                              LPDISPATCH DockTarget/*[in]*/, 
                                                                              LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnUndockQuery)(System::TObject * Sender, 
                                                                        LPDISPATCH Sender/*[in]*/, 
                                                                        LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnUndock)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnCloseQuery)(System::TObject * Sender, 
                                                                       LPDISPATCH Sender/*[in]*/, 
                                                                       LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnClose)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnActiveControlChange)(System::TObject * Sender, 
                                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnHitTest)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    long x/*[in]*/, long y/*[in]*/, 
                                                                    LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnHint)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH Object/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMinimize)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnMaximize)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnRestore)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    LPDISPATCH ResultPtr/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnCopyData)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     BSTR Data/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnActivate)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnEnterSizeMove)(System::TObject * Sender, 
                                                                          LPDISPATCH Sender/*[in]*/, 
                                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TWindowSystemControlOnExitSizeMove)(System::TObject * Sender, 
                                                                         LPDISPATCH Sender/*[in]*/, 
                                                                         long Flags/*[in]*/);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host  in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TWindowSystemControl : public Vcl::Olectrls::TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TWindowSystemControlOnClick    FOnClick;
  TWindowSystemControlOnDblClick FOnDblClick;
  TWindowSystemControlOnChange   FOnChange;
  TWindowSystemControlOnKeyDown  FOnKeyDown;
  TWindowSystemControlOnKeyUp    FOnKeyUp;
  TWindowSystemControlOnMouseEnter FOnMouseEnter;
  TWindowSystemControlOnMouseLeave FOnMouseLeave;
  TWindowSystemControlOnMouseDown FOnMouseDown;
  TWindowSystemControlOnMouseMove FOnMouseMove;
  TWindowSystemControlOnMouseUp  FOnMouseUp;
  TWindowSystemControlOnResize   FOnResize;
  TWindowSystemControlOnMove     FOnMove;
  TWindowSystemControlOnDestroy  FOnDestroy;
  TWindowSystemControlOnShow     FOnShow;
  TWindowSystemControlOnHide     FOnHide;
  TWindowSystemControlOnEnabledChange FOnEnabledChange;
  TWindowSystemControlOnSetFocus FOnSetFocus;
  TWindowSystemControlOnKillFocus FOnKillFocus;
  TWindowSystemControlOnMouseWheel FOnMouseWheel;
  TWindowSystemControlOnBeginDock FOnBeginDock;
  TWindowSystemControlOnDockControlCreate FOnDockControlCreate;
  TWindowSystemControlOnUndockQuery FOnUndockQuery;
  TWindowSystemControlOnUndock   FOnUndock;
  TWindowSystemControlOnCloseQuery FOnCloseQuery;
  TWindowSystemControlOnClose    FOnClose;
  TWindowSystemControlOnActiveControlChange FOnActiveControlChange;
  TWindowSystemControlOnHitTest  FOnHitTest;
  TWindowSystemControlOnHint     FOnHint;
  TWindowSystemControlOnMinimize FOnMinimize;
  TWindowSystemControlOnMaximize FOnMaximize;
  TWindowSystemControlOnRestore  FOnRestore;
  TWindowSystemControlOnCopyData FOnCopyData;
  TWindowSystemControlOnActivate FOnActivate;
  TWindowSystemControlOnEnterSizeMove FOnEnterSizeMove;
  TWindowSystemControlOnExitSizeMove FOnExitSizeMove;

  // Default Interace of OCX
  //
  IFormDisp m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //
  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  BSTR            __fastcall get_Text(void);
  VARIANT_BOOL    __fastcall get_Visible(void);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  long            __fastcall get_Top(void);
  long            __fastcall get_Width(void);
  long            __fastcall get_Height(void);
  long            __fastcall get_Right(void);
  long            __fastcall get_Bottom(void);
  unsigned_short  __fastcall get_MinWidth(void);
  unsigned_short  __fastcall get_MinHeight(void);
  unsigned_short  __fastcall get_MaxWidth(void);
  unsigned_short  __fastcall get_MaxHeight(void);
  unsigned_short  __fastcall get_Align(void);
  unsigned_long   __fastcall get_Color(void);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  LPDISPATCH      __fastcall get_Font(void);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  LPDISPATCH      __fastcall get_Pen(void);
  LPDISPATCH      __fastcall get_Brush(void);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  VARIANT_BOOL    __fastcall get_Border(void);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  BSTR            __fastcall get_Name(void);
  BSTR            __fastcall get_ID(void);
  long            __fastcall get_ClientWidth(void);
  long            __fastcall get_ClientHeight(void);
  VARIANT         __fastcall get_Cursor(void);
  VARIANT         __fastcall get_Hint(void);
  BSTR            __fastcall get_ThemeApplicationName(void);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  unsigned_long   __fastcall get_Debug(void);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  LPDISPATCH      __fastcall get_Controls(void);
  unsigned_long   __fastcall get_BorderWidth(void);
  unsigned_long   __fastcall get_BevelWidth(void);
  long            __fastcall get_BevelOuter(void);
  long            __fastcall get_BevelInner(void);
  LPDISPATCH      __fastcall get_GraphFont(void);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  unsigned_short  __fastcall get_CaptureMouse(void);
  VARIANT_BOOL    __fastcall get_ParentBackground(void);
  VARIANT_BOOL    __fastcall get_BorderParentBackground(void);
  VARIANT_BOOL    __fastcall get_AutoSplit(void);
  VARIANT_BOOL    __fastcall get_GroupBox(void);
  unsigned_long   __fastcall get_Margin(void);
  unsigned_long   __fastcall get_MarginLeft(void);
  unsigned_long   __fastcall get_MarginTop(void);
  unsigned_long   __fastcall get_MarginRight(void);
  unsigned_long   __fastcall get_MarginBottom(void);
  LPDISPATCH      __fastcall get_Menu(void);
  VARIANT_BOOL    __fastcall get_KeyPreview(void);
  VARIANT_BOOL    __fastcall get_MaximizeBox(void);
  VARIANT_BOOL    __fastcall get_MinimizeBox(void);
  VARIANT_BOOL    __fastcall get_ControlBox(void);
  VARIANT_BOOL    __fastcall get_SizeGrip(void);
  VARIANT_BOOL    __fastcall get_TopMost(void);
  VARIANT_BOOL    __fastcall get_ToolWindow(void);
  VARIANT_BOOL    __fastcall get_Caption(void);
  LPDISPATCH      __fastcall get_AcceptButton(void);
  LPDISPATCH      __fastcall get_CancelButton(void);
  LPDISPATCH      __fastcall get_HelpButton(void);
  LPDISPATCH      __fastcall get_ActiveControl(void);
  VARIANT_BOOL    __fastcall get_CanClose(void);
  LPDISPATCH      __fastcall get_TaskBar(void);
  VARIANT_BOOL    __fastcall get_Active(void);
  VARIANT_BOOL    __fastcall get_Foreground(void);

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[42];
  static Vcl::Olectrls::TControlData2 CControlData;
  static GUID          CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  IFormDisp __fastcall GetDefaultInterface();
  IFormDisp __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TWindowSystemControl(System::Classes::TComponent* AOwner) : Vcl::Olectrls::TOleControl(AOwner)
  {};
  virtual  __fastcall TWindowSystemControl(HWND        Parent) : Vcl::Olectrls::TOleControl(Parent)
  {};

  // OCX methods
  //
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCheckBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            BSTR Text/*[in,def,opt]*/, 
                                            VARIANT_BOOL Checked/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRadioButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateComboBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFrame(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateGroupBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateProgressBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTabControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateToolBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMenuBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateStatusBar(void);
  LPDISPATCH      __fastcall CreateHyperLink(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             BSTR Url/*[in,def,opt]*/, BSTR Label/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePager(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateScrollBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateActiveXControl(long Left/*[in]*/, long Top/*[in]*/, 
                                                  long Width/*[in]*/, long Height/*[in]*/, 
                                                  BSTR ID/*[in]*/);
  LPDISPATCH      __fastcall CreateActiveXControlLicensed(long Left/*[in]*/, long Top/*[in]*/, 
                                                          long Width/*[in]*/, long Height/*[in]*/, 
                                                          BSTR ID/*[in]*/, BSTR LicKey/*[in]*/);
  LPDISPATCH      __fastcall CreateHeader(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTreeView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRichEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/, long Version/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAnimate(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateHotKey(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrackBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateUpDown(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDateTimePicker(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/, 
                                                  long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCalendar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateIPAddress(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateSplitter(unsigned_short Align/*[in]*/);
  LPDISPATCH      __fastcall CreateSplitPanel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              VARIANT_BOOL Vertical/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateResourceUsageGraph(long Left/*[in,def,opt]*/, 
                                                      long Top/*[in,def,opt]*/, 
                                                      long Width/*[in,def,opt]*/, 
                                                      long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePropertyGrid(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                                long Width/*[in,def,opt]*/, 
                                                long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateLabel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePageControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAutoSplitFrame(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Line(long Ax/*[in]*/, long Ay/*[in]*/, long Bx/*[in]*/, long By/*[in]*/);
  LPDISPATCH      __fastcall Rectangle(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/);
  LPDISPATCH      __fastcall RoundRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, long nWidth/*[in]*/, 
                                       long nHeight/*[in]*/);
  LPDISPATCH      __fastcall Circle(long x/*[in]*/, long y/*[in]*/, long r/*[in]*/);
  LPDISPATCH      __fastcall Ellipse(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                     long Height/*[in]*/);
  LPDISPATCH      __fastcall Arc(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXStartArc/*[in]*/, 
                                 long nYStartArc/*[in]*/, long nXEndArc/*[in]*/, 
                                 long nYEndArc/*[in]*/);
  LPDISPATCH      __fastcall Chord(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long nXRadial1/*[in]*/, 
                                   long nYRadial1/*[in]*/, long nXRadial2/*[in]*/, 
                                   long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Pie(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXRadial1/*[in]*/, long nYRadial1/*[in]*/, 
                                 long nXRadial2/*[in]*/, long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Polygon(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall TextOut(long x/*[in]*/, long y/*[in]*/, BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall TextRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                      long Height/*[in]*/, BSTR Text/*[in]*/, 
                                      unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall DrawImage(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, VARIANT Image/*[in]*/);
  LPDISPATCH      __fastcall DrawRegion(long Left/*[in]*/, long Top/*[in]*/, 
                                        unsigned_long Region/*[in]*/);
  LPDISPATCH      __fastcall Bevel(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long BevelOuter/*[in,def,opt]*/, 
                                   long BevelInner/*[in,def,opt]*/, 
                                   unsigned_long BorderWidth/*[in,def,opt]*/, 
                                   unsigned_long BevelWidth/*[in,def,opt]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  LPDISPATCH      __fastcall Get(BSTR Name/*[in]*/);
  void            __fastcall Minimize(void);
  void            __fastcall Restore(void);
  void            __fastcall Maximize(void);
  void            __fastcall Close(void);
  void            __fastcall ShowModal(void);
  long            __fastcall MessageBox(BSTR Text/*[in]*/, BSTR Caption/*[in,def,opt]*/, 
                                        long Flags/*[in,def,opt]*/);
  unsigned_long   __fastcall ColorDialog(unsigned_long StartColor/*[in,def,opt]*/, 
                                         unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall FontDialog(LPDISPATCH StartValue/*[in]*/, 
                                        unsigned_long Flags/*[in,def,opt]*/);
  BSTR            __fastcall OpenDialog(BSTR DefaultExt/*[in]*/, BSTR Filter/*[in]*/, 
                                        BSTR StartFile/*[in,def,opt]*/, 
                                        unsigned_long Flags/*[in,def,opt]*/);
  BSTR            __fastcall SaveDialog(BSTR DefaultExt/*[in]*/, BSTR Filter/*[in]*/, 
                                        BSTR StartFile/*[in,def,opt]*/, 
                                        unsigned_long Flags/*[in,def,opt]*/);
  BSTR            __fastcall SelectFolderDialog(BSTR Title/*[in]*/, 
                                                unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall PrintDialog(unsigned_long Flags/*[in,def,opt]*/, 
                                         unsigned_short MinPage/*[in,def,opt]*/, 
                                         unsigned_short MaxPage/*[in,def,opt]*/);
  LPDISPATCH      __fastcall PrinterSetupDialog(unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall PageSetupDialog(unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFindDialog(BSTR FindText/*[in,def,opt]*/, 
                                              unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReplaceDialog(BSTR FindText/*[in,def,opt]*/, 
                                                 BSTR ReplaceText/*[in,def,opt]*/, 
                                                 unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFontDialog(void);
  LPDISPATCH      __fastcall CreateColorDialog(void);
  LPDISPATCH      __fastcall CreateOpenDialog(void);
  LPDISPATCH      __fastcall CreateSaveDialog(void);
  LPDISPATCH      __fastcall CreateSelectFolderDialog(void);
  LPDISPATCH      __fastcall CreateForm(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDialogForm(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMessageDialog(BSTR Text/*[in]*/, BSTR Caption/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTaskDialog(BSTR Text/*[in]*/, BSTR Caption/*[in,def,opt]*/);

  // OCX properties
  //
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property int OnClick1={ write=SetIntegerProp, index=60 };
  __property int OnDblClick1={ write=SetIntegerProp, index=61 };
  __property int OnChange1={ write=SetIntegerProp, index=62 };
  __property int OnKeyDown1={ write=SetIntegerProp, index=63 };
  __property int OnKeyUp1={ write=SetIntegerProp, index=64 };
  __property int OnMouseEnter1={ write=SetIntegerProp, index=65 };
  __property int OnMouseLeave1={ write=SetIntegerProp, index=66 };
  __property int OnMouseUp1={ write=SetIntegerProp, index=67 };
  __property int OnMouseMove1={ write=SetIntegerProp, index=68 };
  __property int OnMouseDown1={ write=SetIntegerProp, index=69 };
  __property int OnResize1={ write=SetIntegerProp, index=70 };
  __property int OnMove1={ write=SetIntegerProp, index=71 };
  __property int OnDestroy1={ write=SetIntegerProp, index=72 };
  __property int OnShow1={ write=SetIntegerProp, index=73 };
  __property int OnHide1={ write=SetIntegerProp, index=74 };
  __property int OnEnabledChange1={ write=SetIntegerProp, index=75 };
  __property int OnSetFocus1={ write=SetIntegerProp, index=76 };
  __property int OnKillFocus1={ write=SetIntegerProp, index=77 };
  __property int OnMouseWheel1={ write=SetIntegerProp, index=78 };
  __property int OnBeginDock1={ write=SetIntegerProp, index=79 };
  __property int OnDockControlCreate1={ write=SetIntegerProp, index=80 };
  __property int OnUndockQuery1={ write=SetIntegerProp, index=88 };
  __property int OnUndock1={ write=SetIntegerProp, index=89 };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
  __property int Icon={ write=SetIntegerProp, index=200 };
  __property int Region={ write=SetIntegerProp, index=233 };
  __property LPDISPATCH TaskBar={ read=get_TaskBar };
  __property int OnCloseQuery1={ write=SetIntegerProp, index=234 };
  __property int OnClose1={ write=SetIntegerProp, index=235 };
  __property int OnActiveControlChange1={ write=SetIntegerProp, index=236 };
  __property int OnHitTest1={ write=SetIntegerProp, index=237 };
  __property int OnHint1={ write=SetIntegerProp, index=238 };
  __property int OnMinimize1={ write=SetIntegerProp, index=239 };
  __property int OnMaximize1={ write=SetIntegerProp, index=240 };
  __property int OnRestore1={ write=SetIntegerProp, index=241 };
  __property int OnCopyData1={ write=SetIntegerProp, index=242 };
  __property int OnActivate1={ write=SetIntegerProp, index=243 };
  __property int OnEnterSizeMove1={ write=SetIntegerProp, index=244 };
  __property int OnExitSizeMove1={ write=SetIntegerProp, index=245 };
  __property IFormDisp ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property ShowHint;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //

  // OCX Events
  //
  __property TWindowSystemControlOnClick OnClick={ read=FOnClick, write=FOnClick };
  __property TWindowSystemControlOnDblClick OnDblClick={ read=FOnDblClick, write=FOnDblClick };
  __property TWindowSystemControlOnChange OnChange={ read=FOnChange, write=FOnChange };
  __property TWindowSystemControlOnKeyDown OnKeyDown={ read=FOnKeyDown, write=FOnKeyDown };
  __property TWindowSystemControlOnKeyUp OnKeyUp={ read=FOnKeyUp, write=FOnKeyUp };
  __property TWindowSystemControlOnMouseEnter OnMouseEnter={ read=FOnMouseEnter, write=FOnMouseEnter };
  __property TWindowSystemControlOnMouseLeave OnMouseLeave={ read=FOnMouseLeave, write=FOnMouseLeave };
  __property TWindowSystemControlOnMouseDown OnMouseDown={ read=FOnMouseDown, write=FOnMouseDown };
  __property TWindowSystemControlOnMouseMove OnMouseMove={ read=FOnMouseMove, write=FOnMouseMove };
  __property TWindowSystemControlOnMouseUp OnMouseUp={ read=FOnMouseUp, write=FOnMouseUp };
  __property TWindowSystemControlOnResize OnResize={ read=FOnResize, write=FOnResize };
  __property TWindowSystemControlOnMove OnMove={ read=FOnMove, write=FOnMove };
  __property TWindowSystemControlOnDestroy OnDestroy={ read=FOnDestroy, write=FOnDestroy };
  __property TWindowSystemControlOnShow OnShow={ read=FOnShow, write=FOnShow };
  __property TWindowSystemControlOnHide OnHide={ read=FOnHide, write=FOnHide };
  __property TWindowSystemControlOnEnabledChange OnEnabledChange={ read=FOnEnabledChange, write=FOnEnabledChange };
  __property TWindowSystemControlOnSetFocus OnSetFocus={ read=FOnSetFocus, write=FOnSetFocus };
  __property TWindowSystemControlOnKillFocus OnKillFocus={ read=FOnKillFocus, write=FOnKillFocus };
  __property TWindowSystemControlOnMouseWheel OnMouseWheel={ read=FOnMouseWheel, write=FOnMouseWheel };
  __property TWindowSystemControlOnBeginDock OnBeginDock={ read=FOnBeginDock, write=FOnBeginDock };
  __property TWindowSystemControlOnDockControlCreate OnDockControlCreate={ read=FOnDockControlCreate, write=FOnDockControlCreate };
  __property TWindowSystemControlOnUndockQuery OnUndockQuery={ read=FOnUndockQuery, write=FOnUndockQuery };
  __property TWindowSystemControlOnUndock OnUndock={ read=FOnUndock, write=FOnUndock };
  __property TWindowSystemControlOnCloseQuery OnCloseQuery={ read=FOnCloseQuery, write=FOnCloseQuery };
  __property TWindowSystemControlOnClose OnClose={ read=FOnClose, write=FOnClose };
  __property TWindowSystemControlOnActiveControlChange OnActiveControlChange={ read=FOnActiveControlChange, write=FOnActiveControlChange };
  __property TWindowSystemControlOnHitTest OnHitTest={ read=FOnHitTest, write=FOnHitTest };
  __property TWindowSystemControlOnHint OnHint={ read=FOnHint, write=FOnHint };
  __property TWindowSystemControlOnMinimize OnMinimize={ read=FOnMinimize, write=FOnMinimize };
  __property TWindowSystemControlOnMaximize OnMaximize={ read=FOnMaximize, write=FOnMaximize };
  __property TWindowSystemControlOnRestore OnRestore={ read=FOnRestore, write=FOnRestore };
  __property TWindowSystemControlOnCopyData OnCopyData={ read=FOnCopyData, write=FOnCopyData };
  __property TWindowSystemControlOnActivate OnActivate={ read=FOnActivate, write=FOnActivate };
  __property TWindowSystemControlOnEnterSizeMove OnEnterSizeMove={ read=FOnEnterSizeMove, write=FOnEnterSizeMove };
  __property TWindowSystemControlOnExitSizeMove OnExitSizeMove={ read=FOnExitSizeMove, write=FOnExitSizeMove };
};
typedef TWindowSystemControl  TWindowSystemControlProxy;


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TResult
// Help String      : 
// Default Interface: IResult
// Def. Intf. Object: IResultPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TResult : public Vcl::Oleserver::TOleServer
{
  IResultPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TResult(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IResultPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IResultPtr intf);


  VARIANT         __fastcall get_Value(void);
  void            __fastcall set_Value(VARIANT pVal/*[in]*/);
  void            __fastcall Put(VARIANT newVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTrayIcon
// Help String      : 
// Default Interface: ITrayIcon
// Def. Intf. Object: ITrayIconPtr
// Def. Intf. DISP? : No
// Event   Interface: ITrayIconEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TTrayIconOnClick)(System::TObject * Sender, 
                                                       LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TTrayIconOnDblClick)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                          long y/*[in]*/, long Button/*[in]*/, 
                                                          long Flags/*[in]*/);
typedef void __fastcall (__closure * TTrayIconOnMouseDown)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                           long y/*[in]*/, long Button/*[in]*/, 
                                                           long Flags/*[in]*/);
typedef void __fastcall (__closure * TTrayIconOnMouseUp)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/, long x/*[in]*/, 
                                                         long y/*[in]*/, long Button/*[in]*/, 
                                                         long Flags/*[in]*/);

class PACKAGE TTrayIcon : public Vcl::Oleserver::TOleServer
{
  ITrayIconPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTrayIcon(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITrayIconPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITrayIconPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Active(void);
  void            __fastcall set_Active(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Images(void);
  void            __fastcall set_Images(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Images(LPDISPATCH pVal/*[in]*/);
  long            __fastcall get_ImageIndex(void);
  void            __fastcall set_ImageIndex(long pVal/*[in]*/);
  BSTR            __fastcall get_Hint(void);
  void            __fastcall set_Hint(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_BalloonTip(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH BalloonTip={ read=get_BalloonTip };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
private:
  TTrayIconOnClick               FOnClick1;
  TTrayIconOnDblClick            FOnDblClick1;
  TTrayIconOnMouseDown           FOnMouseDown1;
  TTrayIconOnMouseUp             FOnMouseUp1;
__published:
  __property TTrayIconOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TTrayIconOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TTrayIconOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TTrayIconOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TRegions
// Help String      : 
// Default Interface: IRegions
// Def. Intf. Object: IRegionsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TRegions : public Vcl::Oleserver::TOleServer
{
  IRegionsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TRegions(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IRegionsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IRegionsPtr intf);


  LPDISPATCH      __fastcall CombineRgn(unsigned_long hrgnSrc1/*[in]*/, 
                                        unsigned_long hrgnSrc2/*[in]*/, long fnCombineMode/*[in]*/);
  LPDISPATCH      __fastcall CreateEllipticRgn(long Left/*[in]*/, long Top/*[in]*/, 
                                               long Width/*[in]*/, long Height/*[in]*/);
  LPDISPATCH      __fastcall CreatePolygonRgn(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall CreateRectRgn(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                           long Height/*[in]*/);
  LPDISPATCH      __fastcall CreateRoundRectRgn(long Left/*[in]*/, long Top/*[in]*/, 
                                                long Width/*[in]*/, long Height/*[in]*/, 
                                                long nWidthEllipse/*[in]*/, 
                                                long nHeightEllipse/*[in]*/);
  LPDISPATCH      __fastcall TransformRgn(unsigned_long ARegion/*[in]*/, float eM11/*[in]*/, 
                                          float eM12/*[in]*/, float eM21/*[in]*/, float eM22/*[in]*/, 
                                          float eDx/*[in]*/, float eDy/*[in]*/);
  VARIANT_BOOL    __fastcall EqualRgn(unsigned_long hSrcRgn1/*[in]*/, unsigned_long hSrcRgn2/*[in]*/);
  LPDISPATCH      __fastcall CreateRgnFromImage(VARIANT Image/*[in]*/, 
                                                unsigned_long MaskColor/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TRegion
// Help String      : 
// Default Interface: IRegion
// Def. Intf. Object: IRegionPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TRegion : public Vcl::Oleserver::TOleServer
{
  IRegionPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TRegion(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IRegionPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IRegionPtr intf);


  unsigned_long   __fastcall get_Value(void);
  __property unsigned_long Value={ read=get_Value };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TScreen
// Help String      : 
// Default Interface: IScreen
// Def. Intf. Object: IScreenPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TScreen : public Vcl::Oleserver::TOleServer
{
  IScreenPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TScreen(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IScreenPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IScreenPtr intf);


  long            __fastcall get_Width(void);
  long            __fastcall get_Height(void);
  long            __fastcall get_PixelsPerInchX(void);
  long            __fastcall get_PixelsPerInchY(void);
  __property long Width={ read=get_Width };
  __property long Height={ read=get_Height };
  __property long PixelsPerInchX={ read=get_PixelsPerInchX };
  __property long PixelsPerInchY={ read=get_PixelsPerInchY };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : THint
// Help String      : 
// Default Interface: IHint
// Def. Intf. Object: IHintPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE THint : public Vcl::Oleserver::TOleServer
{
  IHintPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall THint(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IHintPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IHintPtr intf);


  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_Title(void);
  void            __fastcall set_Title(BSTR pVal/*[in]*/);
  long            __fastcall get_Image(void);
  void            __fastcall set_Image(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Balloon(void);
  void            __fastcall set_Balloon(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AlwaysTip(void);
  void            __fastcall set_AlwaysTip(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_NoPrefix(void);
  void            __fastcall set_NoPrefix(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentData(void);
  void            __fastcall set_ParentData(VARIANT_BOOL pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TEventHandler
// Help String      : 
// Default Interface: IEventHandler
// Def. Intf. Object: IEventHandlerPtr
// Def. Intf. DISP? : No
// Event   Interface: IEventHandlerEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TEventHandlerOnExecute)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);

class PACKAGE TEventHandler : public Vcl::Oleserver::TOleServer
{
  IEventHandlerPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TEventHandler(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IEventHandlerPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IEventHandlerPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  void            __fastcall set_OnExecute(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Execute(void);
  __property BSTR Type={ read=get_Type };
  __property HRESULT OnExecute={ write=set_OnExecute };
private:
  TEventHandlerOnExecute         FOnExecute1;
__published:
  __property TEventHandlerOnExecute OnExecute1={ read=FOnExecute1, write=FOnExecute1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWindowSystemObjectExtensions
// Help String      : WindowSystemObjectExtensions Class
// Default Interface: IWindowSystemObjectExtensions
// Def. Intf. Object: IWindowSystemObjectExtensionsPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TWindowSystemObjectExtensions : public Vcl::Oleserver::TOleServer
{
  IWindowSystemObjectExtensionsPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWindowSystemObjectExtensions(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IWindowSystemObjectExtensionsPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IWindowSystemObjectExtensionsPtr intf);


  LPDISPATCH      __fastcall get_SystemImageListSmall(void);
  LPDISPATCH      __fastcall get_SystemImageListLarge(void);
  VARIANT_BOOL    __fastcall get_IsWindowsXP(void);
  VARIANT_BOOL    __fastcall get_IsWindowsVista(void);
  VARIANT_BOOL    __fastcall get_IsWindows7(void);
  VARIANT_BOOL    __fastcall get_IsWindows8(void);
  VARIANT_BOOL    __fastcall get_IsThemeActive(void);
  VARIANT         __fastcall SendMessage(VARIANT Control/*[in]*/, long Message/*[in]*/, 
                                         long wParam/*[in]*/, VARIANT lParam/*[in]*/);
  VARIANT         __fastcall PostMessage(VARIANT Control/*[in]*/, long Message/*[in]*/, 
                                         long wParam/*[in]*/, VARIANT lParam/*[in]*/);
  void            __fastcall AddMessageHandler(LPDISPATCH Control/*[in]*/, long Message/*[in]*/, 
                                               VARIANT MessageHandler/*[in]*/);
  unsigned_long   __fastcall RegisterWindowMessage(BSTR Message/*[in]*/);
  LPDISPATCH      __fastcall EnumWindows(void);
  VARIANT         __fastcall SendCopyData(VARIANT Control/*[in]*/, BSTR Data/*[in]*/);
  VARIANT         __fastcall PostCopyData(VARIANT Control/*[in]*/, BSTR Data/*[in]*/);
  LPDISPATCH      __fastcall CreateClipboard(VARIANT_BOOL ClipboardViewer/*[in,def,opt]*/);
  unsigned_long   __fastcall GetFileSysIconIndexSmall(BSTR pVal/*[in]*/, 
                                                      unsigned_long FileAttributes/*[in,def,opt]*/);
  unsigned_long   __fastcall GetFileSysIconIndexLarge(BSTR pVal/*[in]*/, 
                                                      unsigned_long FileAttributes/*[in,def,opt]*/);
  BSTR            __fastcall UuidCreate(void);
  LPDISPATCH      __fastcall CreateIconBuilder(void);
  LPDISPATCH      __fastcall CreateExecutor(void);
  LPDISPATCH      __fastcall CreateFileManager(void);
  __property LPDISPATCH SystemImageListSmall={ read=get_SystemImageListSmall };
  __property LPDISPATCH SystemImageListLarge={ read=get_SystemImageListLarge };
  __property VARIANT_BOOL IsWindowsXP={ read=get_IsWindowsXP };
  __property VARIANT_BOOL IsWindowsVista={ read=get_IsWindowsVista };
  __property VARIANT_BOOL IsWindows7={ read=get_IsWindows7 };
  __property VARIANT_BOOL IsWindows8={ read=get_IsWindows8 };
  __property VARIANT_BOOL IsThemeActive={ read=get_IsThemeActive };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPrintInfo
// Help String      : 
// Default Interface: IPrintInfo
// Def. Intf. Object: IPrintInfoPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TPrintInfo : public Vcl::Oleserver::TOleServer
{
  IPrintInfoPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPrintInfo(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPrintInfoPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPrintInfoPtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_DocumentName(void);
  void            __fastcall set_DocumentName(BSTR pVal/*[in]*/);
  long            __fastcall get_LeftMargin(void);
  void            __fastcall set_LeftMargin(long pVal/*[in]*/);
  long            __fastcall get_RightMargin(void);
  void            __fastcall set_RightMargin(long pVal/*[in]*/);
  long            __fastcall get_TopMargin(void);
  void            __fastcall set_TopMargin(long pVal/*[in]*/);
  long            __fastcall get_BottomMargin(void);
  void            __fastcall set_BottomMargin(long pVal/*[in]*/);
  long            __fastcall get_MarginMeasurement(void);
  void            __fastcall set_MarginMeasurement(long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  __property BSTR Type={ read=get_Type };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TStdDispatch
// Help String      : 
// Default Interface: IStdDispatch
// Def. Intf. Object: IStdDispatchPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TStdDispatch : public Vcl::Oleserver::TOleServer
{
  IStdDispatchPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TStdDispatch(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IStdDispatchPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IStdDispatchPtr intf);


};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TBalloonTip
// Help String      : 
// Default Interface: IBalloonTip
// Def. Intf. Object: IBalloonTipPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TBalloonTip : public Vcl::Oleserver::TOleServer
{
  IBalloonTipPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TBalloonTip(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IBalloonTipPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IBalloonTipPtr intf);


  BSTR            __fastcall get_Title(void);
  void            __fastcall set_Title(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  long            __fastcall get_Icon(void);
  void            __fastcall set_Icon(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Timeout(void);
  void            __fastcall set_Timeout(unsigned_long pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TWindow
// Help String      : 
// Default Interface: IWindow
// Def. Intf. Object: IWindowPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TWindow : public Vcl::Oleserver::TOleServer
{
  IWindowPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TWindow(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IWindowPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IWindowPtr intf);


  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ClassName(void);
  __property BSTR ClassName={ read=get_ClassName };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TClipboard
// Help String      : 
// Default Interface: IClipboard
// Def. Intf. Object: IClipboardPtr
// Def. Intf. DISP? : No
// Event   Interface: IClipboardEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TClipboardOnChange)(System::TObject * Sender, 
                                                         LPDISPATCH Sender/*[in]*/);

class PACKAGE TClipboard : public Vcl::Oleserver::TOleServer
{
  IClipboardPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TClipboard(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IClipboardPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IClipboardPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ClipboardViewer(void);
  void            __fastcall set_ClipboardViewer(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Empty(void);
  __property BSTR Type={ read=get_Type };
  __property HRESULT OnChange={ write=set_OnChange };
private:
  TClipboardOnChange             FOnChange1;
__published:
  __property TClipboardOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTaskBar
// Help String      : 
// Default Interface: ITaskBar
// Def. Intf. Object: ITaskBarPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TTaskBar : public Vcl::Oleserver::TOleServer
{
  ITaskBarPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTaskBar(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITaskBarPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITaskBarPtr intf);


  LPDISPATCH      __fastcall get_Buttons(void);
  void            __fastcall set_Buttons(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Buttons(LPDISPATCH pVal/*[in]*/);
  long            __fastcall get_State(void);
  void            __fastcall set_State(long pVal/*[in]*/);
  unsigned_long   __fastcall get_Max(void);
  void            __fastcall set_Max(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_Position(void);
  void            __fastcall set_Position(unsigned_long pVal/*[in]*/);
  void            __fastcall AddImages(LPDISPATCH newVal/*[in]*/);
  void            __fastcall SetThumbnailClip(long Left, long Top, long Width, long Height);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TResourceUsageGraph
// Help String      : 
// Default Interface: IResourceUsageGraph
// Def. Intf. Object: IResourceUsageGraphPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TResourceUsageGraphOnClick)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnDblClick)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/, 
                                                                    long x/*[in]*/, long y/*[in]*/, 
                                                                    long Button/*[in]*/, 
                                                                    long Flags/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnChange)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnKeyDown)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   long Key/*[in]*/, 
                                                                   long Flags/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnKeyUp)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 long Key/*[in]*/, 
                                                                 long Flags/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnMouseEnter)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnMouseLeave)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnMouseDown)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     long x/*[in]*/, long y/*[in]*/, 
                                                                     long Button/*[in]*/, 
                                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnMouseMove)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     long x/*[in]*/, long y/*[in]*/, 
                                                                     long Flags/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnMouseUp)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/, 
                                                                   long x/*[in]*/, long y/*[in]*/, 
                                                                   long Button/*[in]*/, 
                                                                   long Flags/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnResize)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnMove)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnDestroy)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnShow)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnHide)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnEnabledChange)(System::TObject * Sender, 
                                                                         LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnSetFocus)(System::TObject * Sender, 
                                                                    LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnKillFocus)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnMouseWheel)(System::TObject * Sender, 
                                                                      LPDISPATCH Sender/*[in]*/, 
                                                                      long Keys/*[in]*/, 
                                                                      long Delta/*[in]*/, 
                                                                      long x/*[in]*/, long y/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnBeginDock)(System::TObject * Sender, 
                                                                     LPDISPATCH Sender/*[in]*/, 
                                                                     LPDISPATCH DockTarget/*[in]*/, 
                                                                     LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnDockControlCreate)(System::TObject * Sender, 
                                                                             LPDISPATCH Sender/*[in]*/, 
                                                                             LPDISPATCH Control/*[in]*/, 
                                                                             LPDISPATCH DockTarget/*[in]*/, 
                                                                             LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnUndockQuery)(System::TObject * Sender, 
                                                                       LPDISPATCH Sender/*[in]*/, 
                                                                       LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TResourceUsageGraphOnUndock)(System::TObject * Sender, 
                                                                  LPDISPATCH Sender/*[in]*/);

class PACKAGE TResourceUsageGraph : public Vcl::Oleserver::TOleServer
{
  IResourceUsageGraphPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TResourceUsageGraph(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IResourceUsageGraphPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IResourceUsageGraphPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Value(void);
  LPDISPATCH      __fastcall get_Min(void);
  LPDISPATCH      __fastcall get_Max(void);
  unsigned_long   __fastcall get_Page(void);
  void            __fastcall set_Page(unsigned_long pVal/*[in]*/);
  double          __fastcall get_MinYValue(void);
  void            __fastcall set_MinYValue(double pVal/*[in]*/);
  double          __fastcall get_MaxYValue(void);
  void            __fastcall set_MaxYValue(double pVal/*[in]*/);
  LPDISPATCH      __fastcall get_BackgroundBrush(void);
  void            __fastcall set_BackgroundBrush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_BackgroundBrush(LPDISPATCH pVal/*[in]*/);
  unsigned_long   __fastcall get_PageControlWidth(void);
  void            __fastcall set_PageControlWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_SelectedValue(void);
  void            __fastcall set_SelectedValue(unsigned_long pVal/*[in]*/);
  double          __fastcall get_SelectedYValue(void);
  long            __fastcall get_SelectedIndex(void);
  void            __fastcall set_SelectedIndex(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Approximation(void);
  void            __fastcall set_Approximation(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AlwaysFillWindow(void);
  void            __fastcall set_AlwaysFillWindow(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoRemove(void);
  void            __fastcall set_AutoRemove(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  void            __fastcall Add(unsigned_long Offset/*[in]*/, double Value/*[in]*/);
  void            __fastcall AddEx(unsigned_long Offset/*[in]*/, double Value/*[in]*/, 
                                   BSTR Text/*[in,def,opt]*/);
  void            __fastcall Clear(void);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Value={ read=get_Value };
  __property LPDISPATCH Min={ read=get_Min };
  __property LPDISPATCH Max={ read=get_Max };
  __property double SelectedYValue={ read=get_SelectedYValue };
private:
  TResourceUsageGraphOnClick     FOnClick1;
  TResourceUsageGraphOnDblClick  FOnDblClick1;
  TResourceUsageGraphOnChange    FOnChange1;
  TResourceUsageGraphOnKeyDown   FOnKeyDown1;
  TResourceUsageGraphOnKeyUp     FOnKeyUp1;
  TResourceUsageGraphOnMouseEnter FOnMouseEnter1;
  TResourceUsageGraphOnMouseLeave FOnMouseLeave1;
  TResourceUsageGraphOnMouseDown FOnMouseDown1;
  TResourceUsageGraphOnMouseMove FOnMouseMove1;
  TResourceUsageGraphOnMouseUp   FOnMouseUp1;
  TResourceUsageGraphOnResize    FOnResize1;
  TResourceUsageGraphOnMove      FOnMove1;
  TResourceUsageGraphOnDestroy   FOnDestroy1;
  TResourceUsageGraphOnShow      FOnShow1;
  TResourceUsageGraphOnHide      FOnHide1;
  TResourceUsageGraphOnEnabledChange FOnEnabledChange1;
  TResourceUsageGraphOnSetFocus  FOnSetFocus1;
  TResourceUsageGraphOnKillFocus FOnKillFocus1;
  TResourceUsageGraphOnMouseWheel FOnMouseWheel1;
  TResourceUsageGraphOnBeginDock FOnBeginDock1;
  TResourceUsageGraphOnDockControlCreate FOnDockControlCreate1;
  TResourceUsageGraphOnUndockQuery FOnUndockQuery1;
  TResourceUsageGraphOnUndock    FOnUndock1;
__published:
  __property TResourceUsageGraphOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TResourceUsageGraphOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TResourceUsageGraphOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TResourceUsageGraphOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TResourceUsageGraphOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TResourceUsageGraphOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TResourceUsageGraphOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TResourceUsageGraphOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TResourceUsageGraphOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TResourceUsageGraphOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TResourceUsageGraphOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TResourceUsageGraphOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TResourceUsageGraphOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TResourceUsageGraphOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TResourceUsageGraphOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TResourceUsageGraphOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TResourceUsageGraphOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TResourceUsageGraphOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TResourceUsageGraphOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TResourceUsageGraphOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TResourceUsageGraphOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TResourceUsageGraphOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TResourceUsageGraphOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TProperty
// Help String      : 
// Default Interface: IProperty
// Def. Intf. Object: IPropertyPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TProperty : public Vcl::Oleserver::TOleServer
{
  IPropertyPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TProperty(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPropertyPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPropertyPtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Expanded(void);
  void            __fastcall set_Expanded(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Value(void);
  void            __fastcall set_Value(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Control(void);
  unsigned_long   __fastcall get_Height(void);
  void            __fastcall set_Height(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Selected(void);
  void            __fastcall set_Selected(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  LPDISPATCH      __fastcall Add(BSTR Text/*[in]*/);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  __property BSTR Type={ read=get_Type };
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
  __property LPDISPATCH Control={ read=get_Control };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPropertyGrid
// Help String      : 
// Default Interface: IPropertyGrid
// Def. Intf. Object: IPropertyGridPtr
// Def. Intf. DISP? : No
// Event   Interface: IControlEvents
// TypeFlags        : (0)
// *********************************************************************//
typedef void __fastcall (__closure * TPropertyGridOnClick)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnDblClick)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/, 
                                                              long x/*[in]*/, long y/*[in]*/, 
                                                              long Button/*[in]*/, 
                                                              long Flags/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnChange)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnKeyDown)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnKeyUp)(System::TObject * Sender, 
                                                           LPDISPATCH Sender/*[in]*/, 
                                                           long Key/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnMouseEnter)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnMouseLeave)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnMouseDown)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/, 
                                                               long Button/*[in]*/, 
                                                               long Flags/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnMouseMove)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               long x/*[in]*/, long y/*[in]*/, 
                                                               long Flags/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnMouseUp)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/, 
                                                             long x/*[in]*/, long y/*[in]*/, 
                                                             long Button/*[in]*/, long Flags/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnResize)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnMove)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnDestroy)(System::TObject * Sender, 
                                                             LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnShow)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnHide)(System::TObject * Sender, 
                                                          LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnEnabledChange)(System::TObject * Sender, 
                                                                   LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnSetFocus)(System::TObject * Sender, 
                                                              LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnKillFocus)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnMouseWheel)(System::TObject * Sender, 
                                                                LPDISPATCH Sender/*[in]*/, 
                                                                long Keys/*[in]*/, 
                                                                long Delta/*[in]*/, long x/*[in]*/, 
                                                                long y/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnBeginDock)(System::TObject * Sender, 
                                                               LPDISPATCH Sender/*[in]*/, 
                                                               LPDISPATCH DockTarget/*[in]*/, 
                                                               LPDISPATCH BeginDockContext/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnDockControlCreate)(System::TObject * Sender, 
                                                                       LPDISPATCH Sender/*[in]*/, 
                                                                       LPDISPATCH Control/*[in]*/, 
                                                                       LPDISPATCH DockTarget/*[in]*/, 
                                                                       LPDISPATCH DockControlCreateContext/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnUndockQuery)(System::TObject * Sender, 
                                                                 LPDISPATCH Sender/*[in]*/, 
                                                                 LPDISPATCH UndockContext/*[in]*/);
typedef void __fastcall (__closure * TPropertyGridOnUndock)(System::TObject * Sender, 
                                                            LPDISPATCH Sender/*[in]*/);

class PACKAGE TPropertyGrid : public Vcl::Oleserver::TOleServer
{
  IPropertyGridPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPropertyGrid(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPropertyGridPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPropertyGridPtr intf);

  virtual void __fastcall InvokeEvent(int DispID, Vcl::Oleserver::TVariantArray& params);

  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Parent(void);
  LPDISPATCH      __fastcall get_Root(void);
  LPDISPATCH      __fastcall get_Form(void);
  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
  unsigned_short  __fastcall get_MinWidth(void);
  void            __fastcall set_MinWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MinHeight(void);
  void            __fastcall set_MinHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxWidth(void);
  void            __fastcall set_MaxWidth(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_MaxHeight(void);
  void            __fastcall set_MaxHeight(unsigned_short pVal/*[in]*/);
  unsigned_short  __fastcall get_Align(void);
  void            __fastcall set_Align(unsigned_short pVal/*[in]*/);
  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentColor(void);
  void            __fastcall set_ParentColor(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Font(void);
  void            __fastcall set_Font(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Font(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentFont(void);
  void            __fastcall set_ParentFont(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Pen(void);
  void            __fastcall set_Pen(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Pen(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Brush(void);
  void            __fastcall set_Brush(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_Brush(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_PopupMenu(void);
  void            __fastcall set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_PopupMenu(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Border(void);
  void            __fastcall set_Border(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  long            __fastcall get_TabOrder(void);
  void            __fastcall set_TabOrder(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_TabStop(void);
  void            __fastcall set_TabStop(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_Name(void);
  void            __fastcall set_Name(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  long            __fastcall get_ClientWidth(void);
  void            __fastcall set_ClientWidth(long pVal/*[in]*/);
  long            __fastcall get_ClientHeight(void);
  void            __fastcall set_ClientHeight(long pVal/*[in]*/);
  VARIANT         __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT pVal/*[in]*/);
  VARIANT         __fastcall get_Hint(void);
  void            __fastcall set_Hint(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ThemeApplicationName(void);
  void            __fastcall set_ThemeApplicationName(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Docking(void);
  LPDISPATCH      __fastcall get_Layering(void);
  void            __fastcall set_OnClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDblClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKeyUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseEnter(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseLeave(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseUp(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseDown(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnResize(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMove(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDestroy(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnShow(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnHide(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnEnabledChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnSetFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnKillFocus(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnMouseWheel(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnBeginDock(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDockControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndockQuery(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnUndock(VARIANT Param1/*[in]*/);
  unsigned_long   __fastcall get_Debug(void);
  void            __fastcall set_Debug(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentMouseWheel(void);
  void            __fastcall set_ParentMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_StopMouseWheel(void);
  void            __fastcall set_StopMouseWheel(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_ExtendedProperties(void);
  VARIANT_BOOL    __fastcall get_MaskEvents(void);
  void            __fastcall set_MaskEvents(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Controls(void);
  unsigned_long   __fastcall get_BorderWidth(void);
  void            __fastcall set_BorderWidth(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_BevelWidth(void);
  void            __fastcall set_BevelWidth(unsigned_long pVal/*[in]*/);
  long            __fastcall get_BevelOuter(void);
  void            __fastcall set_BevelOuter(long pVal/*[in]*/);
  long            __fastcall get_BevelInner(void);
  void            __fastcall set_BevelInner(long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_GraphFont(void);
  void            __fastcall set_GraphFont(LPDISPATCH pVal/*[in]*/);
  void            __fastcall _set_GraphFont(LPDISPATCH pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  void            __fastcall set_AutoScroll(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Tracking(void);
  void            __fastcall set_Tracking(VARIANT_BOOL pVal/*[in]*/);
  unsigned_short  __fastcall get_CaptureMouse(void);
  void            __fastcall set_CaptureMouse(unsigned_short pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ParentBackground(void);
  void            __fastcall set_ParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_BorderParentBackground(void);
  void            __fastcall set_BorderParentBackground(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoSplit(void);
  void            __fastcall set_AutoSplit(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_GroupBox(void);
  void            __fastcall set_GroupBox(VARIANT_BOOL pVal/*[in]*/);
  unsigned_long   __fastcall get_Margin(void);
  void            __fastcall set_Margin(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginLeft(void);
  void            __fastcall set_MarginLeft(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginTop(void);
  void            __fastcall set_MarginTop(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginRight(void);
  void            __fastcall set_MarginRight(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_MarginBottom(void);
  void            __fastcall set_MarginBottom(unsigned_long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Items(void);
  unsigned_long   __fastcall get_ValueColor(void);
  void            __fastcall set_ValueColor(unsigned_long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Property(void);
  void            __fastcall set_Property(LPDISPATCH pVal/*[in]*/);
  LPDISPATCH      __fastcall get_SelectedItem(void);
  void            __fastcall set_SelectedItem(LPDISPATCH pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall Show(void);
  void            __fastcall Hide(void);
  void            __fastcall Destroy(void);
  void            __fastcall SetBounds(long Left/*[in]*/, long Top/*[in]*/, 
                                       long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  void            __fastcall CenterControl(void);
  void            __fastcall SetFocus(void);
  void            __fastcall Repaint(void);
  VARIANT_BOOL    __fastcall PropertyHasValue(BSTR PropertyName/*[in]*/);
  LPDISPATCH      __fastcall CreateButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCheckBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            BSTR Text/*[in,def,opt]*/, 
                                            VARIANT_BOOL Checked/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRadioButton(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                        long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                        long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateComboBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateFrame(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateGroupBox(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateProgressBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/, 
                                               long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTabControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateToolBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateMenuBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateReBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateStatusBar(void);
  LPDISPATCH      __fastcall CreateHyperLink(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             BSTR Url/*[in,def,opt]*/, BSTR Label/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePager(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateScrollBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                             long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateActiveXControl(long Left/*[in]*/, long Top/*[in]*/, 
                                                  long Width/*[in]*/, long Height/*[in]*/, 
                                                  BSTR ID/*[in]*/);
  LPDISPATCH      __fastcall CreateActiveXControlLicensed(long Left/*[in]*/, long Top/*[in]*/, 
                                                          long Width/*[in]*/, long Height/*[in]*/, 
                                                          BSTR ID/*[in]*/, BSTR LicKey/*[in]*/);
  LPDISPATCH      __fastcall CreateHeader(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateListView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTreeView(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateRichEdit(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/, long Version/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAnimate(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                           long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                           long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateHotKey(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateTrackBar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateUpDown(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                          long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                          long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateDateTimePicker(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/, 
                                                  long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateCalendar(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                            long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                            long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateIPAddress(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                             long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateSplitter(unsigned_short Align/*[in]*/);
  LPDISPATCH      __fastcall CreateSplitPanel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                              long Width/*[in,def,opt]*/, 
                                              long Height/*[in,def,opt]*/, 
                                              VARIANT_BOOL Vertical/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateResourceUsageGraph(long Left/*[in,def,opt]*/, 
                                                      long Top/*[in,def,opt]*/, 
                                                      long Width/*[in,def,opt]*/, 
                                                      long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePropertyGrid(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                                long Width/*[in,def,opt]*/, 
                                                long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateLabel(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                         long Width/*[in,def,opt]*/, long Height/*[in,def,opt]*/, 
                                         long Style/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreatePageControl(long Left/*[in,def,opt]*/, long Top/*[in,def,opt]*/, 
                                               long Width/*[in,def,opt]*/, 
                                               long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall CreateAutoSplitFrame(long Left/*[in,def,opt]*/, 
                                                  long Top/*[in,def,opt]*/, 
                                                  long Width/*[in,def,opt]*/, 
                                                  long Height/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Line(long Ax/*[in]*/, long Ay/*[in]*/, long Bx/*[in]*/, long By/*[in]*/);
  LPDISPATCH      __fastcall Rectangle(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/);
  LPDISPATCH      __fastcall RoundRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, long nWidth/*[in]*/, 
                                       long nHeight/*[in]*/);
  LPDISPATCH      __fastcall Circle(long x/*[in]*/, long y/*[in]*/, long r/*[in]*/);
  LPDISPATCH      __fastcall Ellipse(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                     long Height/*[in]*/);
  LPDISPATCH      __fastcall Arc(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXStartArc/*[in]*/, 
                                 long nYStartArc/*[in]*/, long nXEndArc/*[in]*/, 
                                 long nYEndArc/*[in]*/);
  LPDISPATCH      __fastcall Chord(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long nXRadial1/*[in]*/, 
                                   long nYRadial1/*[in]*/, long nXRadial2/*[in]*/, 
                                   long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Pie(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                 long Height/*[in]*/, long nXRadial1/*[in]*/, long nYRadial1/*[in]*/, 
                                 long nXRadial2/*[in]*/, long nYRadial2/*[in]*/);
  LPDISPATCH      __fastcall Polygon(LPSAFEARRAY Data/*[in]*/);
  LPDISPATCH      __fastcall TextOut(long x/*[in]*/, long y/*[in]*/, BSTR Text/*[in,def,opt]*/);
  LPDISPATCH      __fastcall TextRect(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                      long Height/*[in]*/, BSTR Text/*[in]*/, 
                                      unsigned_long Flags/*[in,def,opt]*/);
  LPDISPATCH      __fastcall DrawImage(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                       long Height/*[in]*/, VARIANT Image/*[in]*/);
  LPDISPATCH      __fastcall DrawRegion(long Left/*[in]*/, long Top/*[in]*/, 
                                        unsigned_long Region/*[in]*/);
  LPDISPATCH      __fastcall Bevel(long Left/*[in]*/, long Top/*[in]*/, long Width/*[in]*/, 
                                   long Height/*[in]*/, long BevelOuter/*[in,def,opt]*/, 
                                   long BevelInner/*[in,def,opt]*/, 
                                   unsigned_long BorderWidth/*[in,def,opt]*/, 
                                   unsigned_long BevelWidth/*[in,def,opt]*/);
  void            __fastcall BeginUpdate(void);
  void            __fastcall EndUpdate(void);
  LPDISPATCH      __fastcall Get(BSTR Name/*[in]*/);
  LPDISPATCH      __fastcall Lookup(VARIANT Value/*[in]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Parent={ read=get_Parent };
  __property LPDISPATCH Root={ read=get_Root };
  __property LPDISPATCH Form={ read=get_Form };
  __property VARIANT_BOOL Focused={ read=get_Focused };
  __property LPDISPATCH Docking={ read=get_Docking };
  __property LPDISPATCH Layering={ read=get_Layering };
  __property HRESULT OnClick={ write=set_OnClick };
  __property HRESULT OnDblClick={ write=set_OnDblClick };
  __property HRESULT OnChange={ write=set_OnChange };
  __property HRESULT OnKeyDown={ write=set_OnKeyDown };
  __property HRESULT OnKeyUp={ write=set_OnKeyUp };
  __property HRESULT OnMouseEnter={ write=set_OnMouseEnter };
  __property HRESULT OnMouseLeave={ write=set_OnMouseLeave };
  __property HRESULT OnMouseUp={ write=set_OnMouseUp };
  __property HRESULT OnMouseMove={ write=set_OnMouseMove };
  __property HRESULT OnMouseDown={ write=set_OnMouseDown };
  __property HRESULT OnResize={ write=set_OnResize };
  __property HRESULT OnMove={ write=set_OnMove };
  __property HRESULT OnDestroy={ write=set_OnDestroy };
  __property HRESULT OnShow={ write=set_OnShow };
  __property HRESULT OnHide={ write=set_OnHide };
  __property HRESULT OnEnabledChange={ write=set_OnEnabledChange };
  __property HRESULT OnSetFocus={ write=set_OnSetFocus };
  __property HRESULT OnKillFocus={ write=set_OnKillFocus };
  __property HRESULT OnMouseWheel={ write=set_OnMouseWheel };
  __property HRESULT OnBeginDock={ write=set_OnBeginDock };
  __property HRESULT OnDockControlCreate={ write=set_OnDockControlCreate };
  __property HRESULT OnUndockQuery={ write=set_OnUndockQuery };
  __property HRESULT OnUndock={ write=set_OnUndock };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH ExtendedProperties={ read=get_ExtendedProperties };
  __property LPDISPATCH Controls={ read=get_Controls };
  __property LPDISPATCH Items={ read=get_Items };
private:
  TPropertyGridOnClick           FOnClick1;
  TPropertyGridOnDblClick        FOnDblClick1;
  TPropertyGridOnChange          FOnChange1;
  TPropertyGridOnKeyDown         FOnKeyDown1;
  TPropertyGridOnKeyUp           FOnKeyUp1;
  TPropertyGridOnMouseEnter      FOnMouseEnter1;
  TPropertyGridOnMouseLeave      FOnMouseLeave1;
  TPropertyGridOnMouseDown       FOnMouseDown1;
  TPropertyGridOnMouseMove       FOnMouseMove1;
  TPropertyGridOnMouseUp         FOnMouseUp1;
  TPropertyGridOnResize          FOnResize1;
  TPropertyGridOnMove            FOnMove1;
  TPropertyGridOnDestroy         FOnDestroy1;
  TPropertyGridOnShow            FOnShow1;
  TPropertyGridOnHide            FOnHide1;
  TPropertyGridOnEnabledChange   FOnEnabledChange1;
  TPropertyGridOnSetFocus        FOnSetFocus1;
  TPropertyGridOnKillFocus       FOnKillFocus1;
  TPropertyGridOnMouseWheel      FOnMouseWheel1;
  TPropertyGridOnBeginDock       FOnBeginDock1;
  TPropertyGridOnDockControlCreate FOnDockControlCreate1;
  TPropertyGridOnUndockQuery     FOnUndockQuery1;
  TPropertyGridOnUndock          FOnUndock1;
__published:
  __property TPropertyGridOnClick OnClick1={ read=FOnClick1, write=FOnClick1 };
  __property TPropertyGridOnDblClick OnDblClick1={ read=FOnDblClick1, write=FOnDblClick1 };
  __property TPropertyGridOnChange OnChange1={ read=FOnChange1, write=FOnChange1 };
  __property TPropertyGridOnKeyDown OnKeyDown1={ read=FOnKeyDown1, write=FOnKeyDown1 };
  __property TPropertyGridOnKeyUp OnKeyUp1={ read=FOnKeyUp1, write=FOnKeyUp1 };
  __property TPropertyGridOnMouseEnter OnMouseEnter1={ read=FOnMouseEnter1, write=FOnMouseEnter1 };
  __property TPropertyGridOnMouseLeave OnMouseLeave1={ read=FOnMouseLeave1, write=FOnMouseLeave1 };
  __property TPropertyGridOnMouseDown OnMouseDown1={ read=FOnMouseDown1, write=FOnMouseDown1 };
  __property TPropertyGridOnMouseMove OnMouseMove1={ read=FOnMouseMove1, write=FOnMouseMove1 };
  __property TPropertyGridOnMouseUp OnMouseUp1={ read=FOnMouseUp1, write=FOnMouseUp1 };
  __property TPropertyGridOnResize OnResize1={ read=FOnResize1, write=FOnResize1 };
  __property TPropertyGridOnMove OnMove1={ read=FOnMove1, write=FOnMove1 };
  __property TPropertyGridOnDestroy OnDestroy1={ read=FOnDestroy1, write=FOnDestroy1 };
  __property TPropertyGridOnShow OnShow1={ read=FOnShow1, write=FOnShow1 };
  __property TPropertyGridOnHide OnHide1={ read=FOnHide1, write=FOnHide1 };
  __property TPropertyGridOnEnabledChange OnEnabledChange1={ read=FOnEnabledChange1, write=FOnEnabledChange1 };
  __property TPropertyGridOnSetFocus OnSetFocus1={ read=FOnSetFocus1, write=FOnSetFocus1 };
  __property TPropertyGridOnKillFocus OnKillFocus1={ read=FOnKillFocus1, write=FOnKillFocus1 };
  __property TPropertyGridOnMouseWheel OnMouseWheel1={ read=FOnMouseWheel1, write=FOnMouseWheel1 };
  __property TPropertyGridOnBeginDock OnBeginDock1={ read=FOnBeginDock1, write=FOnBeginDock1 };
  __property TPropertyGridOnDockControlCreate OnDockControlCreate1={ read=FOnDockControlCreate1, write=FOnDockControlCreate1 };
  __property TPropertyGridOnUndockQuery OnUndockQuery1={ read=FOnUndockQuery1, write=FOnUndockQuery1 };
  __property TPropertyGridOnUndock OnUndock1={ read=FOnUndock1, write=FOnUndock1 };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TConsole
// Help String      : 
// Default Interface: IConsole
// Def. Intf. Object: IConsolePtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TConsole : public Vcl::Oleserver::TOleServer
{
  IConsolePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TConsole(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IConsolePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IConsolePtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  void            __fastcall set_Visible(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall WriteLine(BSTR Text/*[in]*/);
  void            __fastcall Write(BSTR Text/*[in]*/);
  __property BSTR Type={ read=get_Type };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDocking
// Help String      : 
// Default Interface: IDocking
// Def. Intf. Object: IDockingPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TDocking : public Vcl::Oleserver::TOleServer
{
  IDockingPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDocking(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IDockingPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDockingPtr intf);


  BSTR            __fastcall get_UniqueId(void);
  void            __fastcall set_UniqueId(BSTR pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowDockAsChild(void);
  void            __fastcall set_AllowDockAsChild(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowDockAsNeighbour(void);
  void            __fastcall set_AllowDockAsNeighbour(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DropTarget(void);
  void            __fastcall set_DropTarget(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AlwaysDockTab(void);
  void            __fastcall set_AlwaysDockTab(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AlwaysDockPage(void);
  void            __fastcall set_AlwaysDockPage(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_DockToolWindow(void);
  void            __fastcall set_DockToolWindow(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AutoCreated(void);
  void            __fastcall set_AutoCreated(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_PageControlTag(void);
  void            __fastcall set_PageControlTag(long pVal/*[in]*/);
  void            __fastcall DockAsChild(LPDISPATCH Control/*[in]*/, 
                                         unsigned_short ControlAlign/*[in]*/);
  void            __fastcall DockAsNeighbour(LPDISPATCH Control/*[in]*/, 
                                             unsigned_short ControlAlign/*[in,def,opt]*/);
  void            __fastcall UnDock(VARIANT_BOOL ControlVisible/*[in,def,opt]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TGraphicElement
// Help String      : 
// Default Interface: IGraphicElement
// Def. Intf. Object: IGraphicElementPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TGraphicElement : public Vcl::Oleserver::TOleServer
{
  IGraphicElementPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TGraphicElement(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IGraphicElementPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IGraphicElementPtr intf);


  unsigned_long   __fastcall get_Color(void);
  void            __fastcall set_Color(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_FontColor(void);
  void            __fastcall set_FontColor(unsigned_long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Normal(void);
  LPDISPATCH      __fastcall get_Selected(void);
  LPDISPATCH      __fastcall get_Hot(void);
  LPDISPATCH      __fastcall get_ControlFocused(void);
  __property LPDISPATCH Normal={ read=get_Normal };
  __property LPDISPATCH Selected={ read=get_Selected };
  __property LPDISPATCH Hot={ read=get_Hot };
  __property LPDISPATCH ControlFocused={ read=get_ControlFocused };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TBeginDockContext
// Help String      : 
// Default Interface: IBeginDockContext
// Def. Intf. Object: IBeginDockContextPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TBeginDockContext : public Vcl::Oleserver::TOleServer
{
  IBeginDockContextPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TBeginDockContext(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IBeginDockContextPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IBeginDockContextPtr intf);


  VARIANT_BOOL    __fastcall get_AllowDropTargetPageControlType(void);
  void            __fastcall set_AllowDropTargetPageControlType(VARIANT_BOOL pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDockControlCreateContext
// Help String      : 
// Default Interface: IDockControlCreateContext
// Def. Intf. Object: IDockControlCreateContextPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TDockControlCreateContext : public Vcl::Oleserver::TOleServer
{
  IDockControlCreateContextPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDockControlCreateContext(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IDockControlCreateContextPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDockControlCreateContextPtr intf);


  VARIANT_BOOL    __fastcall get_UseDropTargetPageControlType(void);
  void            __fastcall set_UseDropTargetPageControlType(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Target(void);
  __property LPDISPATCH Target={ read=get_Target };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TUndockContext
// Help String      : 
// Default Interface: IUndockContext
// Def. Intf. Object: IUndockContextPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TUndockContext : public Vcl::Oleserver::TOleServer
{
  IUndockContextPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TUndockContext(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IUndockContextPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IUndockContextPtr intf);


  VARIANT         __fastcall get_Value(void);
  void            __fastcall set_Value(VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ControlVisible(void);
  void            __fastcall Put(VARIANT newVal/*[in]*/);
  __property VARIANT_BOOL ControlVisible={ read=get_ControlVisible };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TColor
// Help String      : 
// Default Interface: IColor
// Def. Intf. Object: IColorPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TColor : public Vcl::Oleserver::TOleServer
{
  IColorPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TColor(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IColorPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IColorPtr intf);


  unsigned_long   __fastcall Light(unsigned_long Color/*[in]*/, double Shift/*[in,def,opt]*/);
  unsigned_long   __fastcall Dark(unsigned_long Color/*[in]*/, double Shift/*[in,def,opt]*/);
  unsigned_long   __fastcall Invert(unsigned_long Color/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TLayering
// Help String      : 
// Default Interface: ILayering
// Def. Intf. Object: ILayeringPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TLayering : public Vcl::Oleserver::TOleServer
{
  ILayeringPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TLayering(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ILayeringPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ILayeringPtr intf);


  VARIANT_BOOL    __fastcall get_Layered(void);
  void            __fastcall set_Layered(VARIANT_BOOL pVal/*[in]*/);
  unsigned_char   __fastcall get_Alpha(void);
  void            __fastcall set_Alpha(unsigned_char pVal/*[in]*/);
  unsigned_long   __fastcall get_TransparentColor(void);
  void            __fastcall set_TransparentColor(unsigned_long pVal/*[in]*/);
  unsigned_long   __fastcall get_Flags(void);
  void            __fastcall set_Flags(unsigned_long pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TMessageDialog
// Help String      : 
// Default Interface: IMessageDialog
// Def. Intf. Object: IMessageDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TMessageDialog : public Vcl::Oleserver::TOleServer
{
  IMessageDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TMessageDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IMessageDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IMessageDialogPtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  long            __fastcall get_DefaultButton(void);
  void            __fastcall set_DefaultButton(long pVal/*[in]*/);
  long            __fastcall get_CancelButton(void);
  void            __fastcall set_CancelButton(long pVal/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall AddButton(long ID/*[in]*/, BSTR Text/*[in,def,opt]*/);
  void            __fastcall AddIcon(unsigned_long ID);
  long            __fastcall Execute(void);
  __property BSTR Type={ read=get_Type };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TTaskDialog
// Help String      : 
// Default Interface: ITaskDialog
// Def. Intf. Object: ITaskDialogPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TTaskDialog : public Vcl::Oleserver::TOleServer
{
  ITaskDialogPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TTaskDialog(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  ITaskDialogPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(ITaskDialogPtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  unsigned_long   __fastcall get_Icon(void);
  void            __fastcall set_Icon(unsigned_long pVal/*[in]*/);
  BSTR            __fastcall get_MainInstruction(void);
  void            __fastcall set_MainInstruction(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ExpandedInformation(void);
  void            __fastcall set_ExpandedInformation(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_Footer(void);
  void            __fastcall set_Footer(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_ExpandedControlText(void);
  void            __fastcall set_ExpandedControlText(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_CollapsedControlText(void);
  void            __fastcall set_CollapsedControlText(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_VerificationText(void);
  void            __fastcall set_VerificationText(BSTR pVal/*[in]*/);
  unsigned_long   __fastcall get_FooterIcon(void);
  void            __fastcall set_FooterIcon(unsigned_long pVal/*[in]*/);
  long            __fastcall get_RadioButton(void);
  void            __fastcall set_RadioButton(long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowDialogCancellation(void);
  void            __fastcall set_AllowDialogCancellation(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_UseCommandLinks(void);
  void            __fastcall set_UseCommandLinks(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_UseCommandLinksNoIcon(void);
  void            __fastcall set_UseCommandLinksNoIcon(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ExpandFooterArea(void);
  void            __fastcall set_ExpandFooterArea(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ExpandedByDefault(void);
  void            __fastcall set_ExpandedByDefault(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_VerificationFlagChecked(void);
  void            __fastcall set_VerificationFlagChecked(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ShowProgressBar(void);
  void            __fastcall set_ShowProgressBar(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_ShowMarqueeProgressBar(void);
  void            __fastcall set_ShowMarqueeProgressBar(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CallbackTimer(void);
  void            __fastcall set_CallbackTimer(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_PositionRelativeToWindow(void);
  void            __fastcall set_PositionRelativeToWindow(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_NoDefaultRadioButton(void);
  void            __fastcall set_NoDefaultRadioButton(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_CanBeMinimized(void);
  void            __fastcall set_CanBeMinimized(VARIANT_BOOL pVal/*[in]*/);
  long            __fastcall get_DefaultButton(void);
  void            __fastcall set_DefaultButton(long pVal/*[in]*/);
  long            __fastcall get_Position(void);
  void            __fastcall set_Position(long pVal/*[in]*/);
  void            __fastcall set_OnTimer(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnButtonClick(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall AddButton(long ID/*[in]*/, BSTR Text/*[in,def,opt]*/);
  void            __fastcall AddCommandLinkButton(long ID/*[in]*/, BSTR Text/*[in,def,opt]*/);
  void            __fastcall AddRadioButton(long ID/*[in]*/, BSTR Text/*[in,def,opt]*/);
  long            __fastcall Execute(void);
  __property BSTR Type={ read=get_Type };
  __property HRESULT OnTimer={ write=set_OnTimer };
  __property HRESULT OnButtonClick={ write=set_OnButtonClick };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TIcon
// Help String      : 
// Default Interface: IIcon
// Def. Intf. Object: IIconPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TIcon : public Vcl::Oleserver::TOleServer
{
  IIconPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TIcon(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IIconPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IIconPtr intf);


};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TRect
// Help String      : 
// Default Interface: IRect
// Def. Intf. Object: IRectPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TRect : public Vcl::Oleserver::TOleServer
{
  IRectPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TRect(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IRectPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IRectPtr intf);


  long            __fastcall get_Left(void);
  void            __fastcall set_Left(long pVal/*[in]*/);
  long            __fastcall get_Top(void);
  void            __fastcall set_Top(long pVal/*[in]*/);
  long            __fastcall get_Width(void);
  void            __fastcall set_Width(long pVal/*[in]*/);
  long            __fastcall get_Height(void);
  void            __fastcall set_Height(long pVal/*[in]*/);
  long            __fastcall get_Right(void);
  void            __fastcall set_Right(long pVal/*[in]*/);
  long            __fastcall get_Bottom(void);
  void            __fastcall set_Bottom(long pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TIconBuilder
// Help String      : 
// Default Interface: IIconBuilder
// Def. Intf. Object: IIconBuilderPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TIconBuilder : public Vcl::Oleserver::TOleServer
{
  IIconBuilderPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TIconBuilder(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IIconBuilderPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IIconBuilderPtr intf);


  VARIANT_BOOL    __fastcall get_Cursor(void);
  void            __fastcall set_Cursor(VARIANT_BOOL pVal/*[in]*/);
  void            __fastcall Add(VARIANT Image/*[in]*/, VARIANT_BOOL Transparent/*[in,def,opt]*/, 
                                 unsigned_long x/*[in,def,opt]*/, unsigned_long y/*[in,def,opt]*/);
  void            __fastcall Save(BSTR FileName/*[in]*/);
  void            __fastcall Clear(void);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDesignReference
// Help String      : 
// Default Interface: IDesignReference
// Def. Intf. Object: IDesignReferencePtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TDesignReference : public Vcl::Oleserver::TOleServer
{
  IDesignReferencePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDesignReference(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IDesignReferencePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDesignReferencePtr intf);


  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  BSTR            __fastcall get_Text(void);
  void            __fastcall set_Text(BSTR pVal/*[in]*/);
  unsigned_long   __fastcall get_ReferenceType(void);
  void            __fastcall set_ReferenceType(unsigned_long pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Main(void);
  void            __fastcall set_Main(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Design(void);
  LPDISPATCH      __fastcall get_Parent(void);
  BSTR            __fastcall get_ID(void);
  void            __fastcall set_ID(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_FileName(void);
  void            __fastcall set_FileName(BSTR pVal/*[in]*/);
  void            __fastcall Remove(VARIANT Index/*[in]*/);
  void            __fastcall Clear(void);
  void            __fastcall ExChange(VARIANT A/*[in]*/, VARIANT B/*[in]*/);
  LPDISPATCH      __fastcall Add(BSTR Text/*[in]*/, BSTR CurrentAbsoluteFileName/*[in,def,opt]*/);
  LPDISPATCH      __fastcall Find(BSTR Text/*[in]*/);
  LPDISPATCH      __fastcall Lookup(BSTR Value/*[in]*/);
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
  __property LPDISPATCH Design={ read=get_Design };
  __property LPDISPATCH Parent={ read=get_Parent };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDesign
// Help String      : 
// Default Interface: IDesign
// Def. Intf. Object: IDesignPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TDesign : public Vcl::Oleserver::TOleServer
{
  IDesignPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDesign(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IDesignPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDesignPtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  void            __fastcall set_Enabled(VARIANT_BOOL pVal/*[in]*/);
  BSTR            __fastcall get_NewControlType(void);
  void            __fastcall set_NewControlType(BSTR pVal/*[in]*/);
  unsigned_long   __fastcall get_NewControlCreationFlags(void);
  void            __fastcall set_NewControlCreationFlags(unsigned_long pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Properties(void);
  VARIANT_BOOL    __fastcall get_ShowDetailsButton(void);
  void            __fastcall set_ShowDetailsButton(VARIANT_BOOL pVal/*[in]*/);
  LPDISPATCH      __fastcall get_References(void);
  void            __fastcall set_OnActiveControlChange(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnControlCreate(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDetailsButtonClick(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDesignerAdd(VARIANT Param1/*[in]*/);
  void            __fastcall set_OnDesignerRemove(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  BSTR            __fastcall Save(void);
  void            __fastcall Load(BSTR Layout/*[in]*/, unsigned_long Flags/*[in,def,opt]*/, 
                                  VARIANT Resources/*[in,opt]*/= TNoParam());
  void            __fastcall Open(BSTR FileName/*[in]*/, unsigned_long Flags/*[in,def,opt]*/);
  __property BSTR Type={ read=get_Type };
  __property LPDISPATCH Properties={ read=get_Properties };
  __property LPDISPATCH References={ read=get_References };
  __property HRESULT OnActiveControlChange={ write=set_OnActiveControlChange };
  __property HRESULT OnControlCreate={ write=set_OnControlCreate };
  __property HRESULT OnDetailsButtonClick={ write=set_OnDetailsButtonClick };
  __property HRESULT OnDesignerAdd={ write=set_OnDesignerAdd };
  __property HRESULT OnDesignerRemove={ write=set_OnDesignerRemove };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TExecutor
// Help String      : 
// Default Interface: IExecutor
// Def. Intf. Object: IExecutorPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (0)
// *********************************************************************//
class PACKAGE TExecutor : public Vcl::Oleserver::TOleServer
{
  IExecutorPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TExecutor(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IExecutorPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IExecutorPtr intf);


  BSTR            __fastcall get_Type(void);
  VARIANT         __fastcall get_UserData(void);
  void            __fastcall set_UserData(VARIANT pVal/*[in]*/);
  BSTR            __fastcall get_ApplicationName(void);
  void            __fastcall set_ApplicationName(BSTR pVal/*[in]*/);
  BSTR            __fastcall get_CommandLine(void);
  void            __fastcall set_CommandLine(BSTR pVal/*[in]*/);
  unsigned_long   __fastcall get_ExitCode(void);
  BSTR            __fastcall get_IntegrityLevel(void);
  void            __fastcall set_IntegrityLevel(BSTR pVal/*[in]*/);
  LPDISPATCH      __fastcall get_Error(void);
  void            __fastcall set_OnComplete(VARIANT Param1/*[in]*/);
  void            __fastcall AddEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  void            __fastcall RemoveEventHandler(BSTR EventName, VARIANT EventHandler/*[in]*/);
  VARIANT_BOOL    __fastcall Execute(void);
  VARIANT_BOOL    __fastcall Wait(unsigned_long Timeout/*[in,def,opt]*/);
  VARIANT_BOOL    __fastcall Terminate(unsigned_long ProcessExitCode/*[in,def,opt]*/);
  __property BSTR Type={ read=get_Type };
  __property unsigned_long ExitCode={ read=get_ExitCode };
  __property LPDISPATCH Error={ read=get_Error };
  __property HRESULT OnComplete={ write=set_OnComplete };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TControlExtendedProperties
// Help String      : 
// Default Interface: IControlExtendedProperties
// Def. Intf. Object: IControlExtendedPropertiesPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TControlExtendedProperties : public Vcl::Oleserver::TOleServer
{
  IControlExtendedPropertiesPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TControlExtendedProperties(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IControlExtendedPropertiesPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IControlExtendedPropertiesPtr intf);


  VARIANT_BOOL    __fastcall get_AllowLeftButtonDown(void);
  void            __fastcall set_AllowLeftButtonDown(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowRightButtonDown(void);
  void            __fastcall set_AllowRightButtonDown(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowMiddleButtonDown(void);
  void            __fastcall set_AllowMiddleButtonDown(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowLeftButtonDoubleClick(void);
  void            __fastcall set_AllowLeftButtonDoubleClick(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowRightButtonDoubleClick(void);
  void            __fastcall set_AllowRightButtonDoubleClick(VARIANT_BOOL pVal/*[in]*/);
  VARIANT_BOOL    __fastcall get_AllowMiddleButtonDoubleClick(void);
  void            __fastcall set_AllowMiddleButtonDoubleClick(VARIANT_BOOL pVal/*[in]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TError
// Help String      : 
// Default Interface: IError
// Def. Intf. Object: IErrorPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TError : public Vcl::Oleserver::TOleServer
{
  IErrorPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TError(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IErrorPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IErrorPtr intf);


  unsigned_long   __fastcall get_Number(void);
  BSTR            __fastcall get_Description(void);
  BSTR            __fastcall get_Comment(void);
  __property unsigned_long Number={ read=get_Number };
  __property BSTR Description={ read=get_Description };
  __property BSTR Comment={ read=get_Comment };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TPropertyInformation
// Help String      : 
// Default Interface: IPropertyInformation
// Def. Intf. Object: IPropertyInformationPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TPropertyInformation : public Vcl::Oleserver::TOleServer
{
  IPropertyInformationPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TPropertyInformation(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IPropertyInformationPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IPropertyInformationPtr intf);


  LPUNKNOWN       __fastcall get__NewEnum(void);
  VARIANT         __fastcall get_Item(long Index/*[in]*/);
  long            __fastcall get_Count(void);
  BSTR            __fastcall get_Text(void);
  unsigned_long   __fastcall get_Type(void);
  unsigned_long   __fastcall get_ExType(void);
  VARIANT         __fastcall get_DesignDefault(void);
  LPDISPATCH      __fastcall get_SymbolicValues(void);
  VARIANT_BOOL    __fastcall get_Combination(void);
  unsigned_long   __fastcall get_Priority(void);
  BSTR            __fastcall get_DefaultValueAsString(void);
  VARIANT_BOOL    __fastcall get_DesignReadOnly(void);
  LPDISPATCH      __fastcall get_Options(void);
  __property LPUNKNOWN _NewEnum={ read=get__NewEnum };
  __property VARIANT Item[long Index]={ read=get_Item };
  __property long Count={ read=get_Count };
  __property BSTR Text={ read=get_Text };
  __property unsigned_long Type={ read=get_Type };
  __property unsigned_long ExType={ read=get_ExType };
  __property VARIANT DesignDefault={ read=get_DesignDefault };
  __property LPDISPATCH SymbolicValues={ read=get_SymbolicValues };
  __property VARIANT_BOOL Combination={ read=get_Combination };
  __property unsigned_long Priority={ read=get_Priority };
  __property BSTR DefaultValueAsString={ read=get_DefaultValueAsString };
  __property VARIANT_BOOL DesignReadOnly={ read=get_DesignReadOnly };
  __property LPDISPATCH Options={ read=get_Options };
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFileManager
// Help String      : 
// Default Interface: IFileManager
// Def. Intf. Object: IFileManagerPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TFileManager : public Vcl::Oleserver::TOleServer
{
  IFileManagerPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFileManager(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFileManagerPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFileManagerPtr intf);


  BSTR            __fastcall GetRelativeFileName(BSTR BaseAbsolutePath/*[in]*/, BSTR Path/*[in]*/);
  BSTR            __fastcall GetCanonicalFileName(BSTR Path/*[in]*/, 
                                                  VARIANT_BOOL ShortNames/*[in,def,opt]*/);
  BSTR            __fastcall GetCurrentDirectory(void);
  BSTR            __fastcall NPath(BSTR Path/*[in]*/);
  BSTR            __fastcall DPath(BSTR Path/*[in]*/);
};

};     // namespace Wsolib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Wsolib_tlb;
#endif

#pragma option pop

#endif // WSOLib_OCXH
